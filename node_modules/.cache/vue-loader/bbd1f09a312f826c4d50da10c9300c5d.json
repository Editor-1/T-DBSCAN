{"remainingRequest":"D:\\work\\workspace\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\workspace\\ruoyi-ui\\src\\views\\biz\\tools\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work\\workspace\\ruoyi-ui\\src\\views\\biz\\tools\\index.vue","mtime":1715156861729},{"path":"D:\\work\\workspace\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\workspace\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\work\\workspace\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\workspace\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqICBhcyBDb29yZGluYXRlc1V0aWwgZnJvbSAnLi9iaXovQ29vcmRpbmF0ZXNVdGlsJwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2luZGV4JywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZmlsZUxpc3Q6IFtdCiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICBjb25zdCBtYXAgPSB3aW5kb3cubWFwCiAgICAgIH0sIDEwMDApCiAgICB9KQogIH0sCiAgbWV0aG9kczogewogICAgb25DaGFuZ2UoZmlsZSkgewogICAgICBjb25zb2xlLmxvZyhmaWxlKQogICAgICBsZXQgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCkKICAgICAgZmlsZVJlYWRlci5vbmxvYWQgPSBlID0+IHsKICAgICAgICBjb25zdCByZXN1bHQgPSBlLnRhcmdldC5yZXN1bHQKICAgICAgICBjb25zdCBkYXRhID0gSlNPTi5wYXJzZShyZXN1bHQpCiAgICAgICAgY29uc29sZS5sb2coJ2RhdGEnLCBkYXRhKQogICAgICAgIHRoaXMudG9HZW9KU09OKGRhdGEuUkVDT1JEUywgZmlsZSkKICAgICAgfQogICAgICBmaWxlUmVhZGVyLnJlYWRBc1RleHQoZmlsZS5yYXcpCiAgICB9LAogICAgdG9HZW9KU09OKGRhdGEsIGZpbGUpIHsKICAgICAgY29uc3QgZ2VvSlNPTiA9IHsKICAgICAgICAidHlwZSI6ICJGZWF0dXJlQ29sbGVjdGlvbiIsCiAgICAgICAgImNycyI6IHsgInR5cGUiOiAibmFtZSIsICJwcm9wZXJ0aWVzIjogeyAibmFtZSI6ICJFUFNHOjQzMjYiIH0gfSwKICAgICAgICAiZmVhdHVyZXMiOiBbXQogICAgICAgIC8vICJmZWF0dXJlcyI6IFt7ICJ0eXBlIjogIkZlYXR1cmUiLCAiaWQiOiAxNSwgInByb3BlcnRpZXMiOiB7fSwgImdlb21ldHJ5IjogeyAidHlwZSI6ICJQb2x5Z29uIiwgImNvb3JkaW5hdGVzIjogW10gfSB9XQogICAgICB9CiAgICAgIGNvbnN0IGZlYXR1cmVzID0gW10KICAgICAgZGF0YS5mb3JFYWNoKChpdGVtLCBpZHgpID0+IHsKICAgICAgICBmZWF0dXJlcy5wdXNoKHsKICAgICAgICAgICJ0eXBlIjogIkZlYXR1cmUiLCAiaWQiOiBpZHgsIHByb3BlcnRpZXM6IGl0ZW0sIGdlb21ldHJ5OiB7dHlwZTogJ1BvaW50JywgY29vcmRpbmF0ZXM6IFtOdW1iZXIoaXRlbS5sb25naXR1ZGUpLCBOdW1iZXIoaXRlbS5sYXRpdHVkZSldfQogICAgICAgIH0pCiAgICAgIH0pCiAgICAgIGdlb0pTT04uZmVhdHVyZXMgPSBmZWF0dXJlcwogICAgICB0aGlzLndyaXRlRmlsZShKU09OLnN0cmluZ2lmeShnZW9KU09OKSwgZmlsZS5uYW1lICsgJy5nZW9qc29uJykKICAgIH0sCiAgICB3cml0ZUZpbGUoY29udGVudCwgZmlsZW5hbWUpIHsKICAgICAgY29uc3QgYmxvYiA9IG5ldyBCbG9iKFtjb250ZW50XSwgeyB0eXBlOiAndGV4dC9wbGFpbicgfSkKICAgICAgY29uc3QgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKQogICAgICBsaW5rLmhyZWYgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKQogICAgICBsaW5rLmRvd25sb2FkID0gZmlsZW5hbWUKICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChsaW5rKQogICAgICBsaW5rLmNsaWNrKCkKICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChsaW5rKQogICAgfSwKICAgIG1lcmNhdG9yVG9MbmdMYXQoKXsKICAgICAgY29uc3QgbGlzdCA9ICBbe3g6IDU4NTAzODQuOTc4Njk0MDEzMywgeTogMzgwMzUwNC40MTQ0MTExOTIzfSwKICAgICAgICB7eDogNTk2NTM0Ni4yMDUzNjc1MzQ0LCB5OiAzNzAwNzczLjEwNTQ2ODg5NjJ9LAogICAgICAgIHt4OiA2MTIwNjY2LjE2MDU1NDEwMTcsIHk6IDM1MTEyMDkuMzgwNjM0ODk2fSAsCiAgICAgICAge3g6IDYyMDUwNTIuNTkyODk5NTU1MywgeTogMzQ4Njc0OS41NDUxNzI0NDY5fSwKICAgICAgICB7eDogNjI4ODIxNi4wMzM0NzE4OTQ1LCB5OiAzNTE2MTAxLjM0NzcyNzM4OTF9LAogICAgICAgIHt4OiA2NDA0NDAwLjI1MTkxODU0LCB5OiAzNjY3NzUyLjMyNzU5NDU4OX0JICAsCiAgICAgICAge3g6IDY1NTIzODIuMjU2NDY2MzY4MiwgeTogMzgxNDUxMS4zNDAzNjkyOTYzfSwKICAgICAgICB7eDogNjcxNTA0MC4xNjIyOTE2NzExLCB5OiAzOTY5ODMxLjI5NTU1NTg2MDN9LAogICAgICAgIHt4OiA2OTI5MDYzLjcyMjU4ODEyLCB5OiA0MjA2NDgwLjIwMzY1NTA4MDl9ICAsCiAgICAgICAge3g6IDcxNDA2NDEuMjk5MzM4MzIzMSwgeTogNDQ5Njk0MC43NDk3NzE2OX0gICwKICAgICAgICB7eDogNjc2NjQwNS44MTY3NjI4MTgsIHk6IDQ2NTU5MjkuNjgwMjc3NjI1MX0gLAogICAgICAgIHt4OiA2NDU2OTg4Ljg5ODE2MjgwNjQsIHk6IDQ2Mzg4MDcuNzk1NDUzOTA2MX0sCiAgICAgICAge3g6IDYyMzQ0MDQuMzk1NDU0NDk2MSwgeTogNDQ1MjkxMy4wNDU5MzkyNzc5fSwKICAgICAgICB7eDogNTk5MjI1Mi4wMjQzNzYyMjk0LCB5OiA0MDg4NDYxLjQ5NzU0ODc1MTF9LAogICAgICAgIHt4OiA1OTAxNzUwLjYzMzE2NTE1OTMsIHk6IDM5MDI1NjYuNzQ4MDM0MTE5Nn0sCiAgICAgICAge3g6IDU4NTAzODQuOTc4Njk0MDEzMywgeTogMzgwMzUwNC40MTQ0MTExOTIzfV0KICAgICAgY29uc3QgciA9IENvb3JkaW5hdGVzVXRpbC5tZXJjYXRvclRvTG5nTGF0cyhsaXN0KQogICAgICBjb25zb2xlLmxvZygncnInLCBKU09OLnN0cmluZ2lmeShyKSkKCgogICAgfQogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/biz/tools","sourcesContent":["<template>\n  <div style=\"padding: 10px;\">\n    点json 转 geojson\n    <el-upload\n      class=\"upload-demo\"\n      ref=\"upload\"\n      action=\"ee\"\n      :on-change=\"onChange\"\n      :file-list=\"fileList\"\n      :auto-upload=\"false\">\n      <el-button slot=\"trigger\" size=\"small\" type=\"primary\">选取文件</el-button>\n    </el-upload>\n    墨卡托坐标系与经纬度坐标系互相转换\n    <el-button slot=\"trigger\" size=\"small\" type=\"primary\" @click=\"mercatorToLngLat\">to LngLat</el-button>\n  </div>\n</template>\n\n<script>\nimport *  as CoordinatesUtil from './biz/CoordinatesUtil'\nexport default {\n  name: 'index',\n  data() {\n    return {\n      fileList: []\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      setTimeout(() => {\n        const map = window.map\n      }, 1000)\n    })\n  },\n  methods: {\n    onChange(file) {\n      console.log(file)\n      let fileReader = new FileReader()\n      fileReader.onload = e => {\n        const result = e.target.result\n        const data = JSON.parse(result)\n        console.log('data', data)\n        this.toGeoJSON(data.RECORDS, file)\n      }\n      fileReader.readAsText(file.raw)\n    },\n    toGeoJSON(data, file) {\n      const geoJSON = {\n        \"type\": \"FeatureCollection\",\n        \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"EPSG:4326\" } },\n        \"features\": []\n        // \"features\": [{ \"type\": \"Feature\", \"id\": 15, \"properties\": {}, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [] } }]\n      }\n      const features = []\n      data.forEach((item, idx) => {\n        features.push({\n          \"type\": \"Feature\", \"id\": idx, properties: item, geometry: {type: 'Point', coordinates: [Number(item.longitude), Number(item.latitude)]}\n        })\n      })\n      geoJSON.features = features\n      this.writeFile(JSON.stringify(geoJSON), file.name + '.geojson')\n    },\n    writeFile(content, filename) {\n      const blob = new Blob([content], { type: 'text/plain' })\n      const link = document.createElement('a')\n      link.href = window.URL.createObjectURL(blob)\n      link.download = filename\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n    },\n    mercatorToLngLat(){\n      const list =  [{x: 5850384.9786940133, y: 3803504.4144111923},\n        {x: 5965346.2053675344, y: 3700773.1054688962},\n        {x: 6120666.1605541017, y: 3511209.380634896} ,\n        {x: 6205052.5928995553, y: 3486749.5451724469},\n        {x: 6288216.0334718945, y: 3516101.3477273891},\n        {x: 6404400.25191854, y: 3667752.327594589}\t  ,\n        {x: 6552382.2564663682, y: 3814511.3403692963},\n        {x: 6715040.1622916711, y: 3969831.2955558603},\n        {x: 6929063.72258812, y: 4206480.2036550809}  ,\n        {x: 7140641.2993383231, y: 4496940.74977169}  ,\n        {x: 6766405.816762818, y: 4655929.6802776251} ,\n        {x: 6456988.8981628064, y: 4638807.7954539061},\n        {x: 6234404.3954544961, y: 4452913.0459392779},\n        {x: 5992252.0243762294, y: 4088461.4975487511},\n        {x: 5901750.6331651593, y: 3902566.7480341196},\n        {x: 5850384.9786940133, y: 3803504.4144111923}]\n      const r = CoordinatesUtil.mercatorToLngLats(list)\n      console.log('rr', JSON.stringify(r))\n\n\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}