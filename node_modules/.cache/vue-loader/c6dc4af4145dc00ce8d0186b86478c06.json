{"remainingRequest":"D:\\work\\workspace_wm\\web-ui-travel\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\workspace_wm\\web-ui-travel\\src\\views\\biz\\tools\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work\\workspace_wm\\web-ui-travel\\src\\views\\biz\\tools\\index.vue","mtime":1719887727299},{"path":"D:\\work\\workspace_wm\\web-ui-travel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\workspace_wm\\web-ui-travel\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\work\\workspace_wm\\web-ui-travel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\workspace_wm\\web-ui-travel\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqICBhcyBDb29yZGluYXRlc1V0aWwgZnJvbSAnLi9iaXovQ29vcmRpbmF0ZXNVdGlsJwppbXBvcnQgKiAgYXMgU2hwRmlsZSBmcm9tICcuL2Jpei9TaHBGaWxlJwppbXBvcnQgKiBhcyB0dXJmIGZyb20gJ0B0dXJmL3R1cmYnCmltcG9ydCBMIGZyb20gJ2xlYWZsZXQnCmltcG9ydCBQb2lQYW5lbCBmcm9tICcuL3BvaS9Qb2lQYW5lbC52dWUnCmxldCBkcmF3UG9pCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnaW5kZXgnLAogIGNvbXBvbmVudHM6IHsgUG9pUGFuZWwgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZmlsZUxpc3Q6IFtdLAogICAgICBmaWxlTGlzdDI6IFtdCiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICBjb25zdCBtYXAgPSB3aW5kb3cubWFwCiAgICAgIH0sIDEwMDApCiAgICB9KQogIH0sCiAgbWV0aG9kczogewogICAgZHJhd1BvaW50KCkgewogICAgfSwKCiAgICBvbkNoYW5nZShmaWxlKSB7CiAgICAgIGNvbnNvbGUubG9nKGZpbGUpCiAgICAgIGxldCBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKQogICAgICBmaWxlUmVhZGVyLm9ubG9hZCA9IGUgPT4gewogICAgICAgIGNvbnN0IHJlc3VsdCA9IGUudGFyZ2V0LnJlc3VsdAogICAgICAgIGNvbnN0IGRhdGEgPSBKU09OLnBhcnNlKHJlc3VsdCkKICAgICAgICBjb25zb2xlLmxvZygnZGF0YScsIGRhdGEpCiAgICAgICAgdGhpcy50b0dlb0pTT04oZGF0YS5SRUNPUkRTLCBmaWxlKQogICAgICB9CiAgICAgIGZpbGVSZWFkZXIucmVhZEFzVGV4dChmaWxlLnJhdykKICAgIH0sCiAgICBvbkNoYW5nZTIoZmlsZSkgewogICAgICBjb25zb2xlLmxvZyhmaWxlKQogICAgICBsZXQgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCkKICAgICAgZmlsZVJlYWRlci5vbmxvYWQgPSBlID0+IHsKICAgICAgICBjb25zdCByZXN1bHQgPSBlLnRhcmdldC5yZXN1bHQKICAgICAgICBjb25zdCBkYXRhID0gSlNPTi5wYXJzZShyZXN1bHQpCiAgICAgICAgY29uc29sZS5sb2coJ2RhdGEnLCBkYXRhKQogICAgICAgIHRoaXMudG9TaHAoZGF0YS5SRUNPUkRTLCBmaWxlKQogICAgICB9CiAgICAgIGZpbGVSZWFkZXIucmVhZEFzVGV4dChmaWxlLnJhdykKICAgIH0sCiAgICB0b0dlb0pTT04oZGF0YSwgZmlsZSkgewogICAgICBjb25zdCBnZW9KU09OID0gewogICAgICAgICJ0eXBlIjogIkZlYXR1cmVDb2xsZWN0aW9uIiwKICAgICAgICAiY3JzIjogeyAidHlwZSI6ICJuYW1lIiwgInByb3BlcnRpZXMiOiB7ICJuYW1lIjogIkVQU0c6NDMyNiIgfSB9LAogICAgICAgICJmZWF0dXJlcyI6IFtdCiAgICAgICAgLy8gImZlYXR1cmVzIjogW3sgInR5cGUiOiAiRmVhdHVyZSIsICJpZCI6IDE1LCAicHJvcGVydGllcyI6IHt9LCAiZ2VvbWV0cnkiOiB7ICJ0eXBlIjogIlBvbHlnb24iLCAiY29vcmRpbmF0ZXMiOiBbXSB9IH1dCiAgICAgIH0KICAgICAgY29uc3QgZmVhdHVyZXMgPSBbXQogICAgICBkYXRhLmZvckVhY2goKGl0ZW0sIGlkeCkgPT4gewogICAgICAgIGZlYXR1cmVzLnB1c2goewogICAgICAgICAgInR5cGUiOiAiRmVhdHVyZSIsICJpZCI6IGlkeCwgcHJvcGVydGllczogaXRlbSwgZ2VvbWV0cnk6IHt0eXBlOiAnUG9pbnQnLCBjb29yZGluYXRlczogW051bWJlcihpdGVtLmxvbmdpdHVkZSksIE51bWJlcihpdGVtLmxhdGl0dWRlKV19CiAgICAgICAgfSkKICAgICAgfSkKICAgICAgZ2VvSlNPTi5mZWF0dXJlcyA9IGZlYXR1cmVzCiAgICAgIHRoaXMud3JpdGVGaWxlKEpTT04uc3RyaW5naWZ5KGdlb0pTT04pLCBmaWxlLm5hbWUgKyAnLmdlb2pzb24nKQogICAgfSwKICAgIHdyaXRlRmlsZShjb250ZW50LCBmaWxlbmFtZSkgewogICAgICBjb25zdCBibG9iID0gbmV3IEJsb2IoW2NvbnRlbnRdLCB7IHR5cGU6ICd0ZXh0L3BsYWluJyB9KQogICAgICBjb25zdCBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpCiAgICAgIGxpbmsuaHJlZiA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpCiAgICAgIGxpbmsuZG93bmxvYWQgPSBmaWxlbmFtZQogICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGxpbmspCiAgICAgIGxpbmsuY2xpY2soKQogICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGxpbmspCiAgICB9LAogICAgbWVyY2F0b3JUb0xuZ0xhdCgpewogICAgICBjb25zdCBsaXN0ID0gIFt7eDogNTg1MDM4NC45Nzg2OTQwMTMzLCB5OiAzODAzNTA0LjQxNDQxMTE5MjN9LAogICAgICAgIHt4OiA1OTY1MzQ2LjIwNTM2NzUzNDQsIHk6IDM3MDA3NzMuMTA1NDY4ODk2Mn0sCiAgICAgICAge3g6IDYxMjA2NjYuMTYwNTU0MTAxNywgeTogMzUxMTIwOS4zODA2MzQ4OTZ9ICwKICAgICAgICB7eDogNjIwNTA1Mi41OTI4OTk1NTUzLCB5OiAzNDg2NzQ5LjU0NTE3MjQ0Njl9LAogICAgICAgIHt4OiA2Mjg4MjE2LjAzMzQ3MTg5NDUsIHk6IDM1MTYxMDEuMzQ3NzI3Mzg5MX0sCiAgICAgICAge3g6IDY0MDQ0MDAuMjUxOTE4NTQsIHk6IDM2Njc3NTIuMzI3NTk0NTg5fQkgICwKICAgICAgICB7eDogNjU1MjM4Mi4yNTY0NjYzNjgyLCB5OiAzODE0NTExLjM0MDM2OTI5NjN9LAogICAgICAgIHt4OiA2NzE1MDQwLjE2MjI5MTY3MTEsIHk6IDM5Njk4MzEuMjk1NTU1ODYwM30sCiAgICAgICAge3g6IDY5MjkwNjMuNzIyNTg4MTIsIHk6IDQyMDY0ODAuMjAzNjU1MDgwOX0gICwKICAgICAgICB7eDogNzE0MDY0MS4yOTkzMzgzMjMxLCB5OiA0NDk2OTQwLjc0OTc3MTY5fSAgLAogICAgICAgIHt4OiA2NzY2NDA1LjgxNjc2MjgxOCwgeTogNDY1NTkyOS42ODAyNzc2MjUxfSAsCiAgICAgICAge3g6IDY0NTY5ODguODk4MTYyODA2NCwgeTogNDYzODgwNy43OTU0NTM5MDYxfSwKICAgICAgICB7eDogNjIzNDQwNC4zOTU0NTQ0OTYxLCB5OiA0NDUyOTEzLjA0NTkzOTI3Nzl9LAogICAgICAgIHt4OiA1OTkyMjUyLjAyNDM3NjIyOTQsIHk6IDQwODg0NjEuNDk3NTQ4NzUxMX0sCiAgICAgICAge3g6IDU5MDE3NTAuNjMzMTY1MTU5MywgeTogMzkwMjU2Ni43NDgwMzQxMTk2fSwKICAgICAgICB7eDogNTg1MDM4NC45Nzg2OTQwMTMzLCB5OiAzODAzNTA0LjQxNDQxMTE5MjN9XQogICAgICBjb25zdCByID0gQ29vcmRpbmF0ZXNVdGlsLm1lcmNhdG9yVG9MbmdMYXRzKGxpc3QpCiAgICAgIGNvbnNvbGUubG9nKCdycicsIEpTT04uc3RyaW5naWZ5KHIpKQoKICAgICAgY29uc3QgcCA9IHR1cmYucG9seWdvbihbW1s1ODUwMzg0Ljk3ODY5NDAxMzMsIDM4MDM1MDQuNDE0NDExMTkyM10sCiAgICAgICAgWzU5NjUzNDYuMjA1MzY3NTM0NCwgMzcwMDc3My4xMDU0Njg4OTYyXSwKICAgICAgICBbNjEyMDY2Ni4xNjA1NTQxMDE3LCAzNTExMjA5LjM4MDYzNDg5NjBdLAogICAgICAgIFs2MjA1MDUyLjU5Mjg5OTU1NTMsIDM0ODY3NDkuNTQ1MTcyNDQ2OV0sCiAgICAgICAgWzYyODgyMTYuMDMzNDcxODk0NSwgMzUxNjEwMS4zNDc3MjczODkxXSwKICAgICAgICBbNjQwNDQwMC4yNTE5MTg1NDAwLCAzNjY3NzUyLjMyNzU5NDU4OTBdLAogICAgICAgIFs2NTUyMzgyLjI1NjQ2NjM2ODIsIDM4MTQ1MTEuMzQwMzY5Mjk2M10sCiAgICAgICAgWzY3MTUwNDAuMTYyMjkxNjcxMSwgMzk2OTgzMS4yOTU1NTU4NjAzXSwKICAgICAgICBbNjkyOTA2My43MjI1ODgxMjAwLCA0MjA2NDgwLjIwMzY1NTA4MDldLAogICAgICAgIFs3MTQwNjQxLjI5OTMzODMyMzEsIDQ0OTY5NDAuNzQ5NzcxNjkwMF0sCiAgICAgICAgWzY3NjY0MDUuODE2NzYyODE4MCwgNDY1NTkyOS42ODAyNzc2MjUxXSwKICAgICAgICBbNjQ1Njk4OC44OTgxNjI4MDY0LCA0NjM4ODA3Ljc5NTQ1MzkwNjFdLAogICAgICAgIFs2MjM0NDA0LjM5NTQ1NDQ5NjEsIDQ0NTI5MTMuMDQ1OTM5Mjc3OV0sCiAgICAgICAgWzU5OTIyNTIuMDI0Mzc2MjI5NCwgNDA4ODQ2MS40OTc1NDg3NTExXSwKICAgICAgICBbNTkwMTc1MC42MzMxNjUxNTkzLCAzOTAyNTY2Ljc0ODAzNDExOTZdLAogICAgICAgIFs1ODUwMzg0Ljk3ODY5NDAxMzMsIDM4MDM1MDQuNDE0NDExMTkyM11dXSkKICAgICAgY29uc3QgY2MgPSB0dXJmLnRvV2dzODQocCkKICAgICAgY29uc29sZS5sb2coJ2NjJywgY2MsIEpTT04uc3RyaW5naWZ5KGNjKSkKCiAgICAgIGNvbnN0IG1hcCA9IHdpbmRvdy5tYXAKICAgICAgTC5nZW9KU09OKGNjKS5hZGRUbyhtYXApCiAgICB9LAogICAgdG9TaHAobGlzdCwgZmlsZSkgewogICAgICBTaHBGaWxlLmV4cG9ydFBvaW50cyh7CiAgICAgICAgZGF0YTogbGlzdAogICAgICB9KQogICAgfQogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"index.vue","sourceRoot":"src/views/biz/tools","sourcesContent":["<template>\n  <div style=\"padding: 10px;\">\n    点json 转 geojson\n    <el-upload\n      class=\"upload-demo\"\n      ref=\"upload\"\n      action=\"ee\"\n      :on-change=\"onChange\"\n      :file-list=\"fileList\"\n      :auto-upload=\"false\">\n      <el-button slot=\"trigger\" size=\"small\" type=\"primary\">选取文件</el-button>\n    </el-upload>\n    墨卡托坐标系与经纬度坐标系互相转换\n    <el-button slot=\"trigger\" size=\"small\" type=\"primary\" @click=\"mercatorToLngLat\">to LngLat</el-button>\n    点json 转 shp\n    <el-upload\n      class=\"upload-demo\"\n      ref=\"upload\"\n      action=\"ee\"\n      :on-change=\"onChange2\"\n      :file-list=\"fileList2\"\n      :auto-upload=\"false\">\n      <el-button slot=\"trigger\" size=\"small\" type=\"primary\">选取文件</el-button>\n    </el-upload>\n    <el-button @click=\"drawPoint\">draw</el-button>\n    <div>\n      <poi-panel />\n    </div>\n  </div>\n</template>\n\n<script>\nimport *  as CoordinatesUtil from './biz/CoordinatesUtil'\nimport *  as ShpFile from './biz/ShpFile'\nimport * as turf from '@turf/turf'\nimport L from 'leaflet'\nimport PoiPanel from './poi/PoiPanel.vue'\nlet drawPoi\nexport default {\n  name: 'index',\n  components: { PoiPanel },\n  data() {\n    return {\n      fileList: [],\n      fileList2: []\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      setTimeout(() => {\n        const map = window.map\n      }, 1000)\n    })\n  },\n  methods: {\n    drawPoint() {\n    },\n\n    onChange(file) {\n      console.log(file)\n      let fileReader = new FileReader()\n      fileReader.onload = e => {\n        const result = e.target.result\n        const data = JSON.parse(result)\n        console.log('data', data)\n        this.toGeoJSON(data.RECORDS, file)\n      }\n      fileReader.readAsText(file.raw)\n    },\n    onChange2(file) {\n      console.log(file)\n      let fileReader = new FileReader()\n      fileReader.onload = e => {\n        const result = e.target.result\n        const data = JSON.parse(result)\n        console.log('data', data)\n        this.toShp(data.RECORDS, file)\n      }\n      fileReader.readAsText(file.raw)\n    },\n    toGeoJSON(data, file) {\n      const geoJSON = {\n        \"type\": \"FeatureCollection\",\n        \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"EPSG:4326\" } },\n        \"features\": []\n        // \"features\": [{ \"type\": \"Feature\", \"id\": 15, \"properties\": {}, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [] } }]\n      }\n      const features = []\n      data.forEach((item, idx) => {\n        features.push({\n          \"type\": \"Feature\", \"id\": idx, properties: item, geometry: {type: 'Point', coordinates: [Number(item.longitude), Number(item.latitude)]}\n        })\n      })\n      geoJSON.features = features\n      this.writeFile(JSON.stringify(geoJSON), file.name + '.geojson')\n    },\n    writeFile(content, filename) {\n      const blob = new Blob([content], { type: 'text/plain' })\n      const link = document.createElement('a')\n      link.href = window.URL.createObjectURL(blob)\n      link.download = filename\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n    },\n    mercatorToLngLat(){\n      const list =  [{x: 5850384.9786940133, y: 3803504.4144111923},\n        {x: 5965346.2053675344, y: 3700773.1054688962},\n        {x: 6120666.1605541017, y: 3511209.380634896} ,\n        {x: 6205052.5928995553, y: 3486749.5451724469},\n        {x: 6288216.0334718945, y: 3516101.3477273891},\n        {x: 6404400.25191854, y: 3667752.327594589}\t  ,\n        {x: 6552382.2564663682, y: 3814511.3403692963},\n        {x: 6715040.1622916711, y: 3969831.2955558603},\n        {x: 6929063.72258812, y: 4206480.2036550809}  ,\n        {x: 7140641.2993383231, y: 4496940.74977169}  ,\n        {x: 6766405.816762818, y: 4655929.6802776251} ,\n        {x: 6456988.8981628064, y: 4638807.7954539061},\n        {x: 6234404.3954544961, y: 4452913.0459392779},\n        {x: 5992252.0243762294, y: 4088461.4975487511},\n        {x: 5901750.6331651593, y: 3902566.7480341196},\n        {x: 5850384.9786940133, y: 3803504.4144111923}]\n      const r = CoordinatesUtil.mercatorToLngLats(list)\n      console.log('rr', JSON.stringify(r))\n\n      const p = turf.polygon([[[5850384.9786940133, 3803504.4144111923],\n        [5965346.2053675344, 3700773.1054688962],\n        [6120666.1605541017, 3511209.3806348960],\n        [6205052.5928995553, 3486749.5451724469],\n        [6288216.0334718945, 3516101.3477273891],\n        [6404400.2519185400, 3667752.3275945890],\n        [6552382.2564663682, 3814511.3403692963],\n        [6715040.1622916711, 3969831.2955558603],\n        [6929063.7225881200, 4206480.2036550809],\n        [7140641.2993383231, 4496940.7497716900],\n        [6766405.8167628180, 4655929.6802776251],\n        [6456988.8981628064, 4638807.7954539061],\n        [6234404.3954544961, 4452913.0459392779],\n        [5992252.0243762294, 4088461.4975487511],\n        [5901750.6331651593, 3902566.7480341196],\n        [5850384.9786940133, 3803504.4144111923]]])\n      const cc = turf.toWgs84(p)\n      console.log('cc', cc, JSON.stringify(cc))\n\n      const map = window.map\n      L.geoJSON(cc).addTo(map)\n    },\n    toShp(list, file) {\n      ShpFile.exportPoints({\n        data: list\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}