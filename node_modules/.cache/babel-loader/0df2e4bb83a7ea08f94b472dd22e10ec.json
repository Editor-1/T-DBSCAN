{"remainingRequest":"E:\\GitProject\\T-DBSCAN\\node_modules\\babel-loader\\lib\\index.js!E:\\GitProject\\T-DBSCAN\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\GitProject\\T-DBSCAN\\src\\views\\AMyWork\\tools\\algo\\pubMethods.js","dependencies":[{"path":"E:\\GitProject\\T-DBSCAN\\src\\views\\AMyWork\\tools\\algo\\pubMethods.js","mtime":1726751357891},{"path":"E:\\GitProject\\T-DBSCAN\\babel.config.js","mtime":1677117676000},{"path":"E:\\GitProject\\T-DBSCAN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\GitProject\\T-DBSCAN\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\GitProject\\T-DBSCAN\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1720856214296}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["calculateDistance","point1","point2","lat1","parseFloat","lat","lng1","lng","lat2","lng2","radLat1","Math","PI","radLat2","a","b","s","asin","sqrt","pow","sin","cos","MAX_ELE_NUM","EARTH_RADIUS","Region","exports","_createClass2","default","up","bottom","left","right","_classCallCheck2","ElePoint","timestamp","index","QuadTreeNode","depth","region","is_leaf","LU","LB","RU","RB","ele_num","ele_list","insertEle","node","ele","splitNode","push","midVertical","midHorizontal","createChildNode","elementsToRedistribute","_iterator","_createForOfIteratorHelper2","_step","n","done","value","err","e","f","queryEle","results","eps","_iterator2","_step2","pt","haversine","dLat","dLng","c","atan2","convertDateStringToUnix","dateString","date","Date","getTime","convertUnixToDateString","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","concat","getCenterPoint","points","point_num","length","X","Y","Z","i","point","x","y","z","tmp_lng","tmp_lat","isValidLatLng","item","isValidLat","Number","isFinite","isValidLng"],"sources":["E:/GitProject/T-DBSCAN/src/views/AMyWork/tools/algo/pubMethods.js"],"sourcesContent":["/**\r\n * 计算两个点的距离，使用Haversine球面模型计算方法\r\n * @param {} point1 \r\n * @param {*} point2 \r\n * @returns \r\n */\r\nexport  function calculateDistance(point1, point2) {\r\n    const lat1 = parseFloat(point1.lat);\r\n    const lng1 = parseFloat(point1.lng);\r\n    const lat2 = parseFloat(point2.lat);\r\n    const lng2 = parseFloat(point2.lng);\r\n\r\n    const radLat1 = lat1 * Math.PI / 180.0;\r\n    const radLat2 = lat2 * Math.PI / 180.0;\r\n    const a = radLat1 - radLat2;\r\n    const b = (lng1 * Math.PI / 180.0) - (lng2 * Math.PI / 180.0);\r\n    const s = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a / 2), 2) +\r\n        Math.cos(radLat1) * Math.cos(radLat2) * Math.pow(Math.sin(b / 2), 2)));\r\n    return s * 6370996.81;\r\n}\r\n\r\n/**\r\n * 这里是四叉树的数据结构及算法\r\n */\r\nconst MAX_ELE_NUM = 1000;\r\nconst EARTH_RADIUS = 6370.99681;\r\nexport class Region {\r\n    constructor(up, bottom, left, right) {\r\n        this.up = up;\r\n        this.bottom = bottom;\r\n        this.left = left;\r\n        this.right = right;\r\n    }\r\n}\r\n\r\nexport class ElePoint {\r\n    constructor(lat, lng, timestamp, index) {\r\n        this.lat = lat;\r\n        this.lng = lng;\r\n        this.timestamp = timestamp;\r\n        this.index = index;\r\n    }\r\n}\r\n\r\nexport class QuadTreeNode {\r\n    constructor(depth, region) {\r\n        this.depth = depth;\r\n        this.is_leaf = true;\r\n        this.region = region;\r\n        this.LU = null;\r\n        this.LB = null;\r\n        this.RU = null;\r\n        this.RB = null;\r\n        this.ele_num = 0;\r\n        this.ele_list = [];\r\n    }\r\n}\r\n\r\nexport function insertEle(node, ele) {\r\n    if (node.is_leaf) {\r\n        if (node.ele_num >= MAX_ELE_NUM) {\r\n            splitNode(node);\r\n            insertEle(node, ele);\r\n        } else {\r\n            node.ele_list.push(ele);\r\n            node.ele_num++;\r\n        }\r\n    } else {\r\n        const midVertical = (node.region.up + node.region.bottom) / 2;\r\n        const midHorizontal = (node.region.left + node.region.right) / 2;\r\n        if (ele.lat > midVertical) {\r\n            if (ele.lng > midHorizontal) {\r\n                insertEle(node.RU, ele);\r\n            } else {\r\n                insertEle(node.LU, ele);\r\n            }\r\n        } else {\r\n            if (ele.lng > midHorizontal) {\r\n                insertEle(node.RB, ele);\r\n            } else {\r\n                insertEle(node.LB, ele);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function splitNode(node) {\r\n    const midVertical = (node.region.up + node.region.bottom) / 2;\r\n    const midHorizontal = (node.region.left + node.region.right) / 2;\r\n\r\n    node.is_leaf = false;\r\n    node.RU = createChildNode(node.depth + 1, new Region(midVertical, node.region.up, midHorizontal, node.region.right));\r\n    node.LU = createChildNode(node.depth + 1, new Region(midVertical, node.region.up, node.region.left, midHorizontal));\r\n    node.RB = createChildNode(node.depth + 1, new Region(node.region.bottom, midVertical, midHorizontal, node.region.right));\r\n    node.LB = createChildNode(node.depth + 1, new Region(node.region.bottom, midVertical, node.region.left, midHorizontal));\r\n\r\n    const elementsToRedistribute = node.ele_list;\r\n    node.ele_list = [];\r\n    node.ele_num = 0;\r\n\r\n    for (const ele of elementsToRedistribute) {\r\n        insertEle(node, ele);\r\n    }\r\n}\r\n\r\nexport function createChildNode(depth, region) {\r\n    return new QuadTreeNode(depth, region);\r\n}\r\n\r\nexport function queryEle(node, ele, results, eps) {\r\n    if (node.is_leaf) {\r\n        for (const pt of node.ele_list) {\r\n            if (haversine(pt.lat, pt.lng, ele.lat, ele.lng) <= eps) {\r\n                results.push(pt);\r\n            }\r\n        }\r\n    } else {\r\n        const midVertical = (node.region.up + node.region.bottom) / 2;\r\n        const midHorizontal = (node.region.left + node.region.right) / 2;\r\n        if (ele.lat > midVertical) {\r\n            if (ele.lng > midHorizontal) {\r\n                queryEle(node.RU, ele, results, eps);\r\n            } else {\r\n                queryEle(node.LU, ele, results, eps);\r\n            }\r\n        } else {\r\n            if (ele.lng > midHorizontal) {\r\n                queryEle(node.RB, ele, results, eps);\r\n            } else {\r\n                queryEle(node.LB, ele, results, eps);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function haversine(lat1, lng1, lat2, lng2) {\r\n    const dLat = (lat2 - lat1) * Math.PI / 180;\r\n    const dLng = (lng2 - lng1) * Math.PI / 180;\r\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    return EARTH_RADIUS * c * 1000; // 转换为米\r\n}\r\n\r\n/**\r\n * 用来转换为时间戳\r\n * @param {日期字符串} dateString \r\n * @returns \r\n */\r\nexport function convertDateStringToUnix(dateString) {  \r\n    // 尝试使用 Date 构造函数解析日期字符串  \r\n    const date = new Date(dateString)\r\n    // 返回 Unix 时间戳（毫秒）  \r\n    return date.getTime()/1000\r\n}  \r\n/**\r\n * 时间戳转换为时间字符串\r\n * @param {时间戳} timestamp \r\n * @returns \r\n */\r\n\r\nexport function convertUnixToDateString(timestamp) {\r\n    const date = new Date(timestamp * 1000); // 将 Unix 时间戳转换为毫秒\r\n  \r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // 月份从 0 开始，所以需要 +1\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n  \r\n    return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n  } \r\n/**\r\n * 球面平均中心\r\n * @param {坐标点数组} points \r\n * @returns \r\n */\r\n  export function getCenterPoint(points){\r\n    var point_num = points.length; //坐标点个数\r\n    var X = 0, Y = 0, Z = 0;\r\n    for(let i = 0; i< points.length; i++) {\r\n      if (points[i] == '') {\r\n        continue;\r\n      }\r\n      let point = points[i];\r\n      var lat, lng, x, y, z;\r\n      lat = parseFloat(point.lat) * Math.PI / 180;\r\n      lng = parseFloat(point.lng) * Math.PI / 180;\r\n      x = Math.cos(lat) * Math.cos(lng);\r\n      y = Math.cos(lat) * Math.sin(lng);\r\n      z = Math.sin(lat);\r\n      X += x;\r\n      Y += y;\r\n      Z += z;\r\n    }\r\n    X = X / point_num;\r\n    Y = Y / point_num;\r\n    Z = Z / point_num;\r\n    var tmp_lng = Math.atan2(Y, X);\r\n    var tmp_lat = Math.atan2(Z, Math.sqrt(X * X + Y * Y));\r\n    return {lat:tmp_lat * 180 / Math.PI, lng:tmp_lng * 180 / Math.PI};\r\n}\r\n\r\n/**\r\n * 判断纬度和经度是否合法\r\n * @param {经纬度点} item \r\n * @returns \r\n */\r\nexport function isValidLatLng(item) {  \r\n    // 检查纬度和经度是否存在且不为null  \r\n    if (item.lat == null || item.lng == null) {  \r\n      return false;  \r\n    }  \r\n    // 检查纬度和经度是否在有效范围内  \r\n    // 将字符串转化为浮点数\r\n    const lat = parseFloat(item.lat)\r\n    const lng = parseFloat(item.lng)\r\n    \r\n    const isValidLat = Number.isFinite(lat) && lat >= -90 &&  lat <= 90;  \r\n    const isValidLng = Number.isFinite(lng) && lng >= -180 && lng <= 180;  \r\n    // 返回纬度和经度是否都有效的结果  \r\n    return isValidLat && isValidLng;  \r\n  }"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACQ,SAASA,iBAAiBA,CAACC,MAAM,EAAEC,MAAM,EAAE;EAC/C,IAAMC,IAAI,GAAGC,UAAU,CAACH,MAAM,CAACI,GAAG,CAAC;EACnC,IAAMC,IAAI,GAAGF,UAAU,CAACH,MAAM,CAACM,GAAG,CAAC;EACnC,IAAMC,IAAI,GAAGJ,UAAU,CAACF,MAAM,CAACG,GAAG,CAAC;EACnC,IAAMI,IAAI,GAAGL,UAAU,CAACF,MAAM,CAACK,GAAG,CAAC;EAEnC,IAAMG,OAAO,GAAGP,IAAI,GAAGQ,IAAI,CAACC,EAAE,GAAG,KAAK;EACtC,IAAMC,OAAO,GAAGL,IAAI,GAAGG,IAAI,CAACC,EAAE,GAAG,KAAK;EACtC,IAAME,CAAC,GAAGJ,OAAO,GAAGG,OAAO;EAC3B,IAAME,CAAC,GAAIT,IAAI,GAAGK,IAAI,CAACC,EAAE,GAAG,KAAK,GAAKH,IAAI,GAAGE,IAAI,CAACC,EAAE,GAAG,KAAM;EAC7D,IAAMI,CAAC,GAAG,CAAC,GAAGL,IAAI,CAACM,IAAI,CAACN,IAAI,CAACO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAACR,IAAI,CAACS,GAAG,CAACN,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAC1DH,IAAI,CAACU,GAAG,CAACX,OAAO,CAAC,GAAGC,IAAI,CAACU,GAAG,CAACR,OAAO,CAAC,GAAGF,IAAI,CAACQ,GAAG,CAACR,IAAI,CAACS,GAAG,CAACL,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC1E,OAAOC,CAAC,GAAG,UAAU;AACzB;;AAEA;AACA;AACA;AACA,IAAMM,WAAW,GAAG,IAAI;AACxB,IAAMC,YAAY,GAAG,UAAU;AAAC,IACnBC,MAAM,GAAAC,OAAA,CAAAD,MAAA,oBAAAE,aAAA,CAAAC,OAAA,EACf,SAAAH,OAAYI,EAAE,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAE;EAAA,IAAAC,gBAAA,CAAAL,OAAA,QAAAH,MAAA;EACjC,IAAI,CAACI,EAAE,GAAGA,EAAE;EACZ,IAAI,CAACC,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACC,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACC,KAAK,GAAGA,KAAK;AACtB,CAAC;AAAA,IAGQE,QAAQ,GAAAR,OAAA,CAAAQ,QAAA,oBAAAP,aAAA,CAAAC,OAAA,EACjB,SAAAM,SAAY5B,GAAG,EAAEE,GAAG,EAAE2B,SAAS,EAAEC,KAAK,EAAE;EAAA,IAAAH,gBAAA,CAAAL,OAAA,QAAAM,QAAA;EACpC,IAAI,CAAC5B,GAAG,GAAGA,GAAG;EACd,IAAI,CAACE,GAAG,GAAGA,GAAG;EACd,IAAI,CAAC2B,SAAS,GAAGA,SAAS;EAC1B,IAAI,CAACC,KAAK,GAAGA,KAAK;AACtB,CAAC;AAAA,IAGQC,YAAY,GAAAX,OAAA,CAAAW,YAAA,oBAAAV,aAAA,CAAAC,OAAA,EACrB,SAAAS,aAAYC,KAAK,EAAEC,MAAM,EAAE;EAAA,IAAAN,gBAAA,CAAAL,OAAA,QAAAS,YAAA;EACvB,IAAI,CAACC,KAAK,GAAGA,KAAK;EAClB,IAAI,CAACE,OAAO,GAAG,IAAI;EACnB,IAAI,CAACD,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACE,EAAE,GAAG,IAAI;EACd,IAAI,CAACC,EAAE,GAAG,IAAI;EACd,IAAI,CAACC,EAAE,GAAG,IAAI;EACd,IAAI,CAACC,EAAE,GAAG,IAAI;EACd,IAAI,CAACC,OAAO,GAAG,CAAC;EAChB,IAAI,CAACC,QAAQ,GAAG,EAAE;AACtB,CAAC;AAGE,SAASC,SAASA,CAACC,IAAI,EAAEC,GAAG,EAAE;EACjC,IAAID,IAAI,CAACR,OAAO,EAAE;IACd,IAAIQ,IAAI,CAACH,OAAO,IAAItB,WAAW,EAAE;MAC7B2B,SAAS,CAACF,IAAI,CAAC;MACfD,SAAS,CAACC,IAAI,EAAEC,GAAG,CAAC;IACxB,CAAC,MAAM;MACHD,IAAI,CAACF,QAAQ,CAACK,IAAI,CAACF,GAAG,CAAC;MACvBD,IAAI,CAACH,OAAO,EAAE;IAClB;EACJ,CAAC,MAAM;IACH,IAAMO,WAAW,GAAG,CAACJ,IAAI,CAACT,MAAM,CAACV,EAAE,GAAGmB,IAAI,CAACT,MAAM,CAACT,MAAM,IAAI,CAAC;IAC7D,IAAMuB,aAAa,GAAG,CAACL,IAAI,CAACT,MAAM,CAACR,IAAI,GAAGiB,IAAI,CAACT,MAAM,CAACP,KAAK,IAAI,CAAC;IAChE,IAAIiB,GAAG,CAAC3C,GAAG,GAAG8C,WAAW,EAAE;MACvB,IAAIH,GAAG,CAACzC,GAAG,GAAG6C,aAAa,EAAE;QACzBN,SAAS,CAACC,IAAI,CAACL,EAAE,EAAEM,GAAG,CAAC;MAC3B,CAAC,MAAM;QACHF,SAAS,CAACC,IAAI,CAACP,EAAE,EAAEQ,GAAG,CAAC;MAC3B;IACJ,CAAC,MAAM;MACH,IAAIA,GAAG,CAACzC,GAAG,GAAG6C,aAAa,EAAE;QACzBN,SAAS,CAACC,IAAI,CAACJ,EAAE,EAAEK,GAAG,CAAC;MAC3B,CAAC,MAAM;QACHF,SAAS,CAACC,IAAI,CAACN,EAAE,EAAEO,GAAG,CAAC;MAC3B;IACJ;EACJ;AACJ;AAEO,SAASC,SAASA,CAACF,IAAI,EAAE;EAC5B,IAAMI,WAAW,GAAG,CAACJ,IAAI,CAACT,MAAM,CAACV,EAAE,GAAGmB,IAAI,CAACT,MAAM,CAACT,MAAM,IAAI,CAAC;EAC7D,IAAMuB,aAAa,GAAG,CAACL,IAAI,CAACT,MAAM,CAACR,IAAI,GAAGiB,IAAI,CAACT,MAAM,CAACP,KAAK,IAAI,CAAC;EAEhEgB,IAAI,CAACR,OAAO,GAAG,KAAK;EACpBQ,IAAI,CAACL,EAAE,GAAGW,eAAe,CAACN,IAAI,CAACV,KAAK,GAAG,CAAC,EAAE,IAAIb,MAAM,CAAC2B,WAAW,EAAEJ,IAAI,CAACT,MAAM,CAACV,EAAE,EAAEwB,aAAa,EAAEL,IAAI,CAACT,MAAM,CAACP,KAAK,CAAC,CAAC;EACpHgB,IAAI,CAACP,EAAE,GAAGa,eAAe,CAACN,IAAI,CAACV,KAAK,GAAG,CAAC,EAAE,IAAIb,MAAM,CAAC2B,WAAW,EAAEJ,IAAI,CAACT,MAAM,CAACV,EAAE,EAAEmB,IAAI,CAACT,MAAM,CAACR,IAAI,EAAEsB,aAAa,CAAC,CAAC;EACnHL,IAAI,CAACJ,EAAE,GAAGU,eAAe,CAACN,IAAI,CAACV,KAAK,GAAG,CAAC,EAAE,IAAIb,MAAM,CAACuB,IAAI,CAACT,MAAM,CAACT,MAAM,EAAEsB,WAAW,EAAEC,aAAa,EAAEL,IAAI,CAACT,MAAM,CAACP,KAAK,CAAC,CAAC;EACxHgB,IAAI,CAACN,EAAE,GAAGY,eAAe,CAACN,IAAI,CAACV,KAAK,GAAG,CAAC,EAAE,IAAIb,MAAM,CAACuB,IAAI,CAACT,MAAM,CAACT,MAAM,EAAEsB,WAAW,EAAEJ,IAAI,CAACT,MAAM,CAACR,IAAI,EAAEsB,aAAa,CAAC,CAAC;EAEvH,IAAME,sBAAsB,GAAGP,IAAI,CAACF,QAAQ;EAC5CE,IAAI,CAACF,QAAQ,GAAG,EAAE;EAClBE,IAAI,CAACH,OAAO,GAAG,CAAC;EAAC,IAAAW,SAAA,OAAAC,2BAAA,CAAA7B,OAAA,EAEC2B,sBAAsB;IAAAG,KAAA;EAAA;IAAxC,KAAAF,SAAA,CAAAvC,CAAA,MAAAyC,KAAA,GAAAF,SAAA,CAAAG,CAAA,IAAAC,IAAA,GAA0C;MAAA,IAA/BX,GAAG,GAAAS,KAAA,CAAAG,KAAA;MACVd,SAAS,CAACC,IAAI,EAAEC,GAAG,CAAC;IACxB;EAAC,SAAAa,GAAA;IAAAN,SAAA,CAAAO,CAAA,CAAAD,GAAA;EAAA;IAAAN,SAAA,CAAAQ,CAAA;EAAA;AACL;AAEO,SAASV,eAAeA,CAAChB,KAAK,EAAEC,MAAM,EAAE;EAC3C,OAAO,IAAIF,YAAY,CAACC,KAAK,EAAEC,MAAM,CAAC;AAC1C;AAEO,SAAS0B,QAAQA,CAACjB,IAAI,EAAEC,GAAG,EAAEiB,OAAO,EAAEC,GAAG,EAAE;EAC9C,IAAInB,IAAI,CAACR,OAAO,EAAE;IAAA,IAAA4B,UAAA,OAAAX,2BAAA,CAAA7B,OAAA,EACGoB,IAAI,CAACF,QAAQ;MAAAuB,MAAA;IAAA;MAA9B,KAAAD,UAAA,CAAAnD,CAAA,MAAAoD,MAAA,GAAAD,UAAA,CAAAT,CAAA,IAAAC,IAAA,GAAgC;QAAA,IAArBU,EAAE,GAAAD,MAAA,CAAAR,KAAA;QACT,IAAIU,SAAS,CAACD,EAAE,CAAChE,GAAG,EAAEgE,EAAE,CAAC9D,GAAG,EAAEyC,GAAG,CAAC3C,GAAG,EAAE2C,GAAG,CAACzC,GAAG,CAAC,IAAI2D,GAAG,EAAE;UACpDD,OAAO,CAACf,IAAI,CAACmB,EAAE,CAAC;QACpB;MACJ;IAAC,SAAAR,GAAA;MAAAM,UAAA,CAAAL,CAAA,CAAAD,GAAA;IAAA;MAAAM,UAAA,CAAAJ,CAAA;IAAA;EACL,CAAC,MAAM;IACH,IAAMZ,WAAW,GAAG,CAACJ,IAAI,CAACT,MAAM,CAACV,EAAE,GAAGmB,IAAI,CAACT,MAAM,CAACT,MAAM,IAAI,CAAC;IAC7D,IAAMuB,aAAa,GAAG,CAACL,IAAI,CAACT,MAAM,CAACR,IAAI,GAAGiB,IAAI,CAACT,MAAM,CAACP,KAAK,IAAI,CAAC;IAChE,IAAIiB,GAAG,CAAC3C,GAAG,GAAG8C,WAAW,EAAE;MACvB,IAAIH,GAAG,CAACzC,GAAG,GAAG6C,aAAa,EAAE;QACzBY,QAAQ,CAACjB,IAAI,CAACL,EAAE,EAAEM,GAAG,EAAEiB,OAAO,EAAEC,GAAG,CAAC;MACxC,CAAC,MAAM;QACHF,QAAQ,CAACjB,IAAI,CAACP,EAAE,EAAEQ,GAAG,EAAEiB,OAAO,EAAEC,GAAG,CAAC;MACxC;IACJ,CAAC,MAAM;MACH,IAAIlB,GAAG,CAACzC,GAAG,GAAG6C,aAAa,EAAE;QACzBY,QAAQ,CAACjB,IAAI,CAACJ,EAAE,EAAEK,GAAG,EAAEiB,OAAO,EAAEC,GAAG,CAAC;MACxC,CAAC,MAAM;QACHF,QAAQ,CAACjB,IAAI,CAACN,EAAE,EAAEO,GAAG,EAAEiB,OAAO,EAAEC,GAAG,CAAC;MACxC;IACJ;EACJ;AACJ;AAEO,SAASI,SAASA,CAACnE,IAAI,EAAEG,IAAI,EAAEE,IAAI,EAAEC,IAAI,EAAE;EAC9C,IAAM8D,IAAI,GAAG,CAAC/D,IAAI,GAAGL,IAAI,IAAIQ,IAAI,CAACC,EAAE,GAAG,GAAG;EAC1C,IAAM4D,IAAI,GAAG,CAAC/D,IAAI,GAAGH,IAAI,IAAIK,IAAI,CAACC,EAAE,GAAG,GAAG;EAC1C,IAAME,CAAC,GAAGH,IAAI,CAACS,GAAG,CAACmD,IAAI,GAAG,CAAC,CAAC,GAAG5D,IAAI,CAACS,GAAG,CAACmD,IAAI,GAAG,CAAC,CAAC,GAAG5D,IAAI,CAACU,GAAG,CAAClB,IAAI,GAAGQ,IAAI,CAACC,EAAE,GAAG,GAAG,CAAC,GAAGD,IAAI,CAACU,GAAG,CAACb,IAAI,GAAGG,IAAI,CAACC,EAAE,GAAG,GAAG,CAAC,GAAGD,IAAI,CAACS,GAAG,CAACoD,IAAI,GAAG,CAAC,CAAC,GAAG7D,IAAI,CAACS,GAAG,CAACoD,IAAI,GAAG,CAAC,CAAC;EAC7J,IAAMC,CAAC,GAAG,CAAC,GAAG9D,IAAI,CAAC+D,KAAK,CAAC/D,IAAI,CAACO,IAAI,CAACJ,CAAC,CAAC,EAAEH,IAAI,CAACO,IAAI,CAAC,CAAC,GAAGJ,CAAC,CAAC,CAAC;EACxD,OAAOS,YAAY,GAAGkD,CAAC,GAAG,IAAI,CAAC,CAAC;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASE,uBAAuBA,CAACC,UAAU,EAAE;EAChD;EACA,IAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;EACjC;EACA,OAAOC,IAAI,CAACE,OAAO,CAAC,CAAC,GAAC,IAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEO,SAASC,uBAAuBA,CAAC9C,SAAS,EAAE;EAC/C,IAAM2C,IAAI,GAAG,IAAIC,IAAI,CAAC5C,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;;EAEzC,IAAM+C,IAAI,GAAGJ,IAAI,CAACK,WAAW,CAAC,CAAC;EAC/B,IAAMC,KAAK,GAAGC,MAAM,CAACP,IAAI,CAACQ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAC5D,IAAMC,GAAG,GAAGH,MAAM,CAACP,IAAI,CAACW,OAAO,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACnD,IAAMG,KAAK,GAAGL,MAAM,CAACP,IAAI,CAACa,QAAQ,CAAC,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACtD,IAAMK,OAAO,GAAGP,MAAM,CAACP,IAAI,CAACe,UAAU,CAAC,CAAC,CAAC,CAACN,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAE1D,UAAAO,MAAA,CAAUZ,IAAI,OAAAY,MAAA,CAAIV,KAAK,OAAAU,MAAA,CAAIN,GAAG,OAAAM,MAAA,CAAIJ,KAAK,OAAAI,MAAA,CAAIF,OAAO;AACpD;AACF;AACA;AACA;AACA;AACA;AACS,SAASG,cAAcA,CAACC,MAAM,EAAC;EACpC,IAAIC,SAAS,GAAGD,MAAM,CAACE,MAAM,CAAC,CAAC;EAC/B,IAAIC,CAAC,GAAG,CAAC;IAAEC,CAAC,GAAG,CAAC;IAAEC,CAAC,GAAG,CAAC;EACvB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAEN,MAAM,CAACE,MAAM,EAAEI,CAAC,EAAE,EAAE;IACpC,IAAIN,MAAM,CAACM,CAAC,CAAC,IAAI,EAAE,EAAE;MACnB;IACF;IACA,IAAIC,KAAK,GAAGP,MAAM,CAACM,CAAC,CAAC;IACrB,IAAIhG,GAAG,EAAEE,GAAG,EAAEgG,CAAC,EAAEC,CAAC,EAAEC,CAAC;IACrBpG,GAAG,GAAGD,UAAU,CAACkG,KAAK,CAACjG,GAAG,CAAC,GAAGM,IAAI,CAACC,EAAE,GAAG,GAAG;IAC3CL,GAAG,GAAGH,UAAU,CAACkG,KAAK,CAAC/F,GAAG,CAAC,GAAGI,IAAI,CAACC,EAAE,GAAG,GAAG;IAC3C2F,CAAC,GAAG5F,IAAI,CAACU,GAAG,CAAChB,GAAG,CAAC,GAAGM,IAAI,CAACU,GAAG,CAACd,GAAG,CAAC;IACjCiG,CAAC,GAAG7F,IAAI,CAACU,GAAG,CAAChB,GAAG,CAAC,GAAGM,IAAI,CAACS,GAAG,CAACb,GAAG,CAAC;IACjCkG,CAAC,GAAG9F,IAAI,CAACS,GAAG,CAACf,GAAG,CAAC;IACjB6F,CAAC,IAAIK,CAAC;IACNJ,CAAC,IAAIK,CAAC;IACNJ,CAAC,IAAIK,CAAC;EACR;EACAP,CAAC,GAAGA,CAAC,GAAGF,SAAS;EACjBG,CAAC,GAAGA,CAAC,GAAGH,SAAS;EACjBI,CAAC,GAAGA,CAAC,GAAGJ,SAAS;EACjB,IAAIU,OAAO,GAAG/F,IAAI,CAAC+D,KAAK,CAACyB,CAAC,EAAED,CAAC,CAAC;EAC9B,IAAIS,OAAO,GAAGhG,IAAI,CAAC+D,KAAK,CAAC0B,CAAC,EAAEzF,IAAI,CAACO,IAAI,CAACgF,CAAC,GAAGA,CAAC,GAAGC,CAAC,GAAGA,CAAC,CAAC,CAAC;EACrD,OAAO;IAAC9F,GAAG,EAACsG,OAAO,GAAG,GAAG,GAAGhG,IAAI,CAACC,EAAE;IAAEL,GAAG,EAACmG,OAAO,GAAG,GAAG,GAAG/F,IAAI,CAACC;EAAE,CAAC;AACrE;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASgG,aAAaA,CAACC,IAAI,EAAE;EAChC;EACA,IAAIA,IAAI,CAACxG,GAAG,IAAI,IAAI,IAAIwG,IAAI,CAACtG,GAAG,IAAI,IAAI,EAAE;IACxC,OAAO,KAAK;EACd;EACA;EACA;EACA,IAAMF,GAAG,GAAGD,UAAU,CAACyG,IAAI,CAACxG,GAAG,CAAC;EAChC,IAAME,GAAG,GAAGH,UAAU,CAACyG,IAAI,CAACtG,GAAG,CAAC;EAEhC,IAAMuG,UAAU,GAAGC,MAAM,CAACC,QAAQ,CAAC3G,GAAG,CAAC,IAAIA,GAAG,IAAI,CAAC,EAAE,IAAKA,GAAG,IAAI,EAAE;EACnE,IAAM4G,UAAU,GAAGF,MAAM,CAACC,QAAQ,CAACzG,GAAG,CAAC,IAAIA,GAAG,IAAI,CAAC,GAAG,IAAIA,GAAG,IAAI,GAAG;EACpE;EACA,OAAOuG,UAAU,IAAIG,UAAU;AACjC","ignoreList":[]}]}