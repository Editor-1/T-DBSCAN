{"remainingRequest":"E:\\GitProject\\T-DBSCAN\\node_modules\\babel-loader\\lib\\index.js!E:\\GitProject\\T-DBSCAN\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\GitProject\\T-DBSCAN\\src\\views\\AMyWork\\tools\\algo\\dbscan.js","dependencies":[{"path":"E:\\GitProject\\T-DBSCAN\\src\\views\\AMyWork\\tools\\algo\\dbscan.js","mtime":1726623647106},{"path":"E:\\GitProject\\T-DBSCAN\\babel.config.js","mtime":1677117676000},{"path":"E:\\GitProject\\T-DBSCAN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\GitProject\\T-DBSCAN\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\GitProject\\T-DBSCAN\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1720856214296}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRic2NhbiA9IGRic2NhbjsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbGwuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZyb20uanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIik7CnZhciBfcHViTWV0aG9kcyA9IHJlcXVpcmUoIi4vcHViTWV0aG9kcyIpOwpmdW5jdGlvbiBkYnNjYW4oZGF0YSwgZXBzLCBtaW5QdHMpIHsKICAvLyDmn6Xmib7pgrvln5/nmoTovoXliqnlh73mlbAKICBmdW5jdGlvbiByZWdpb25RdWVyeShkYXRhLCBwb2ludCwgZXBzKSB7CiAgICB2YXIgbmVpZ2hib3JzID0gW107CiAgICBkYXRhLmZvckVhY2goZnVuY3Rpb24gKHAsIGluZGV4KSB7CiAgICAgIGlmICgoMCwgX3B1Yk1ldGhvZHMuY2FsY3VsYXRlRGlzdGFuY2UpKHBvaW50LCBwKSA8PSBlcHMgKiAxMDAwKSB7CiAgICAgICAgLy8g5bCGIGVwcyDovazmjaLkuLrnsbMKICAgICAgICBuZWlnaGJvcnMucHVzaChpbmRleCk7CiAgICAgIH0KICAgIH0pOwogICAgcmV0dXJuIG5laWdoYm9yczsKICB9CiAgdmFyIG51bSA9IGRhdGEubGVuZ3RoOwogIHZhciB1bnZpc2l0ZWQgPSBBcnJheS5mcm9tKHsKICAgIGxlbmd0aDogbnVtCiAgfSwgZnVuY3Rpb24gKF8sIGkpIHsKICAgIHJldHVybiBpOwogIH0pOwogIHZhciB2aXNpdGVkID0gW107CiAgdmFyIEMgPSBBcnJheShudW0pLmZpbGwoLTEpOwogIHZhciBjb3JlUG9pbnRzID0gW107CiAgdmFyIGsgPSAtMTsKICB3aGlsZSAodW52aXNpdGVkLmxlbmd0aCA+IDApIHsKICAgIC8vIOm7mOiupOWPluacquiuv+mXrueahOesrOS4gOS4queCuQogICAgdmFyIHAgPSB1bnZpc2l0ZWQuc2hpZnQoKTsKICAgIHZpc2l0ZWQucHVzaChwKTsKICAgIHZhciBOID0gcmVnaW9uUXVlcnkoZGF0YSwgZGF0YVtwXSwgZXBzKTsKICAgIGlmIChOLmxlbmd0aCA+PSBtaW5QdHMpIHsKICAgICAgayArPSAxOwogICAgICBDW3BdID0gazsKICAgICAgY29yZVBvaW50cy5wdXNoKGRhdGFbcF0pOwogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IE4ubGVuZ3RoOyBpKyspIHsKICAgICAgICB2YXIgcGkgPSBOW2ldOwogICAgICAgIGlmICh1bnZpc2l0ZWQuaW5jbHVkZXMocGkpKSB7CiAgICAgICAgICB1bnZpc2l0ZWQuc3BsaWNlKHVudmlzaXRlZC5pbmRleE9mKHBpKSwgMSk7CiAgICAgICAgICB2aXNpdGVkLnB1c2gocGkpOwogICAgICAgICAgdmFyIE0gPSByZWdpb25RdWVyeShkYXRhLCBkYXRhW3BpXSwgZXBzKTsKICAgICAgICAgIGlmIChNLmxlbmd0aCA+PSBtaW5QdHMpIHsKICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBNLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICAgICAgdmFyIHQgPSBNW2pdOwogICAgICAgICAgICAgIGlmICghTi5pbmNsdWRlcyh0KSkgewogICAgICAgICAgICAgICAgTi5wdXNoKHQpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZiAoQ1twaV0gPT09IC0xKSB7CiAgICAgICAgICBDW3BpXSA9IGs7CiAgICAgICAgfQogICAgICB9CiAgICB9IGVsc2UgewogICAgICBDW3BdID0gLTE7CiAgICB9CiAgfQogIHJldHVybiBjb3JlUG9pbnRzOwp9"},{"version":3,"names":["_pubMethods","require","dbscan","data","eps","minPts","regionQuery","point","neighbors","forEach","p","index","calculateDistance","push","num","length","unvisited","Array","from","_","i","visited","C","fill","corePoints","k","shift","N","pi","includes","splice","indexOf","M","j","t"],"sources":["E:/GitProject/T-DBSCAN/src/views/AMyWork/tools/algo/dbscan.js"],"sourcesContent":["import {calculateDistance} from './pubMethods'\r\n\r\nexport function dbscan(data, eps, minPts) {\r\n    // 查找邻域的辅助函数\r\n    function regionQuery(data, point, eps) {\r\n        const neighbors = [];\r\n        data.forEach((p, index) => {\r\n            if (calculateDistance(point, p) <= eps * 1000) { // 将 eps 转换为米\r\n                neighbors.push(index);\r\n            }\r\n        });\r\n        return neighbors;\r\n    }\r\n\r\n    const num = data.length;\r\n    const unvisited = Array.from({ length: num }, (_, i) => i);\r\n    const visited = [];\r\n    const C = Array(num).fill(-1);\r\n    const corePoints = [];\r\n    let k = -1;\r\n\r\n    while (unvisited.length > 0) {\r\n        // 默认取未访问的第一个点\r\n        const p = unvisited.shift();\r\n        visited.push(p);\r\n\r\n        const N = regionQuery(data, data[p], eps);\r\n\r\n        if (N.length >= minPts) {\r\n            k += 1;\r\n            C[p] = k;\r\n            corePoints.push(data[p]);\r\n\r\n            for (let i = 0; i < N.length; i++) {\r\n                const pi = N[i];\r\n                if (unvisited.includes(pi)) {\r\n                    unvisited.splice(unvisited.indexOf(pi), 1);\r\n                    visited.push(pi);\r\n\r\n                    const M = regionQuery(data, data[pi], eps);\r\n                    if (M.length >= minPts) {\r\n                        for (let j = 0; j < M.length; j++) {\r\n                            const t = M[j];\r\n                            if (!N.includes(t)) {\r\n                                N.push(t);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (C[pi] === -1) {\r\n                    C[pi] = k;\r\n                }\r\n            }\r\n        } else {\r\n            C[p] = -1;\r\n        }\r\n    }\r\n\r\n    return corePoints;\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAAA,WAAA,GAAAC,OAAA;AAEO,SAASC,MAAMA,CAACC,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAE;EACtC;EACA,SAASC,WAAWA,CAACH,IAAI,EAAEI,KAAK,EAAEH,GAAG,EAAE;IACnC,IAAMI,SAAS,GAAG,EAAE;IACpBL,IAAI,CAACM,OAAO,CAAC,UAACC,CAAC,EAAEC,KAAK,EAAK;MACvB,IAAI,IAAAC,6BAAiB,EAACL,KAAK,EAAEG,CAAC,CAAC,IAAIN,GAAG,GAAG,IAAI,EAAE;QAAE;QAC7CI,SAAS,CAACK,IAAI,CAACF,KAAK,CAAC;MACzB;IACJ,CAAC,CAAC;IACF,OAAOH,SAAS;EACpB;EAEA,IAAMM,GAAG,GAAGX,IAAI,CAACY,MAAM;EACvB,IAAMC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEH,MAAM,EAAED;EAAI,CAAC,EAAE,UAACK,CAAC,EAAEC,CAAC;IAAA,OAAKA,CAAC;EAAA,EAAC;EAC1D,IAAMC,OAAO,GAAG,EAAE;EAClB,IAAMC,CAAC,GAAGL,KAAK,CAACH,GAAG,CAAC,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC;EAC7B,IAAMC,UAAU,GAAG,EAAE;EACrB,IAAIC,CAAC,GAAG,CAAC,CAAC;EAEV,OAAOT,SAAS,CAACD,MAAM,GAAG,CAAC,EAAE;IACzB;IACA,IAAML,CAAC,GAAGM,SAAS,CAACU,KAAK,CAAC,CAAC;IAC3BL,OAAO,CAACR,IAAI,CAACH,CAAC,CAAC;IAEf,IAAMiB,CAAC,GAAGrB,WAAW,CAACH,IAAI,EAAEA,IAAI,CAACO,CAAC,CAAC,EAAEN,GAAG,CAAC;IAEzC,IAAIuB,CAAC,CAACZ,MAAM,IAAIV,MAAM,EAAE;MACpBoB,CAAC,IAAI,CAAC;MACNH,CAAC,CAACZ,CAAC,CAAC,GAAGe,CAAC;MACRD,UAAU,CAACX,IAAI,CAACV,IAAI,CAACO,CAAC,CAAC,CAAC;MAExB,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,CAAC,CAACZ,MAAM,EAAEK,CAAC,EAAE,EAAE;QAC/B,IAAMQ,EAAE,GAAGD,CAAC,CAACP,CAAC,CAAC;QACf,IAAIJ,SAAS,CAACa,QAAQ,CAACD,EAAE,CAAC,EAAE;UACxBZ,SAAS,CAACc,MAAM,CAACd,SAAS,CAACe,OAAO,CAACH,EAAE,CAAC,EAAE,CAAC,CAAC;UAC1CP,OAAO,CAACR,IAAI,CAACe,EAAE,CAAC;UAEhB,IAAMI,CAAC,GAAG1B,WAAW,CAACH,IAAI,EAAEA,IAAI,CAACyB,EAAE,CAAC,EAAExB,GAAG,CAAC;UAC1C,IAAI4B,CAAC,CAACjB,MAAM,IAAIV,MAAM,EAAE;YACpB,KAAK,IAAI4B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,CAAC,CAACjB,MAAM,EAAEkB,CAAC,EAAE,EAAE;cAC/B,IAAMC,CAAC,GAAGF,CAAC,CAACC,CAAC,CAAC;cACd,IAAI,CAACN,CAAC,CAACE,QAAQ,CAACK,CAAC,CAAC,EAAE;gBAChBP,CAAC,CAACd,IAAI,CAACqB,CAAC,CAAC;cACb;YACJ;UACJ;QACJ;QACA,IAAIZ,CAAC,CAACM,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE;UACdN,CAAC,CAACM,EAAE,CAAC,GAAGH,CAAC;QACb;MACJ;IACJ,CAAC,MAAM;MACHH,CAAC,CAACZ,CAAC,CAAC,GAAG,CAAC,CAAC;IACb;EACJ;EAEA,OAAOc,UAAU;AACrB","ignoreList":[]}]}