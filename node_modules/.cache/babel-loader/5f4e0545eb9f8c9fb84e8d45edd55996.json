{"remainingRequest":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\babel-loader\\lib\\index.js!E:\\workspacevsCode\\web-ui-travel\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\workspacevsCode\\web-ui-travel\\src\\views\\AMyWork\\tools\\algo\\kmeans.js","dependencies":[{"path":"E:\\workspacevsCode\\web-ui-travel\\src\\views\\AMyWork\\tools\\algo\\kmeans.js","mtime":1726234229305},{"path":"E:\\workspacevsCode\\web-ui-travel\\babel.config.js","mtime":1677117676000},{"path":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1720856214296}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJFOi93b3Jrc3BhY2V2c0NvZGUvd2ViLXVpLXRyYXZlbC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQuanMiKS5kZWZhdWx0OwpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMua01lYW5zID0ga01lYW5zOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mcm9tLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnB1c2guanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnJlZHVjZS5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnNldC5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIik7CnZhciBfcHViTWV0aG9kcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi9wdWJNZXRob2RzIikpOwpmdW5jdGlvbiBrTWVhbnMoZGF0YSwgaykgewogIC8vIOmaj+acuuWIneWni+WMluS4reW/g+eCueeahOi+heWKqeWHveaVsAogIGZ1bmN0aW9uIGluaXRpYWxpemVDZW50cm9pZHMoZGF0YSwgaykgewogICAgdmFyIGNlbnRyb2lkcyA9IFtdOwogICAgdmFyIHVzZWRJbmRpY2VzID0gbmV3IFNldCgpOwogICAgd2hpbGUgKGNlbnRyb2lkcy5sZW5ndGggPCBrKSB7CiAgICAgIHZhciBpbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGRhdGEubGVuZ3RoKTsKICAgICAgaWYgKCF1c2VkSW5kaWNlcy5oYXMoaW5kZXgpKSB7CiAgICAgICAgY2VudHJvaWRzLnB1c2goZGF0YVtpbmRleF0pOwogICAgICAgIHVzZWRJbmRpY2VzLmFkZChpbmRleCk7CiAgICAgIH0KICAgIH0KICAgIGNvbnNvbGUubG9nKCJJbml0aWFsaXplZCBDZW50cm9pZHM6IiwgY2VudHJvaWRzKTsKICAgIHJldHVybiBjZW50cm9pZHM7CiAgfQoKICAvLyDlsIbngrnliIbphY3liLDmnIDov5HkuK3lv4PngrnnmoTovoXliqnlh73mlbAKICBmdW5jdGlvbiBhc3NpZ25Qb2ludHNUb0NlbnRyb2lkcyhkYXRhLCBjZW50cm9pZHMpIHsKICAgIHZhciBjbHVzdGVycyA9IEFycmF5LmZyb20oewogICAgICBsZW5ndGg6IGNlbnRyb2lkcy5sZW5ndGgKICAgIH0sIGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFtdOwogICAgfSk7CiAgICBkYXRhLmZvckVhY2goZnVuY3Rpb24gKHBvaW50KSB7CiAgICAgIHZhciBtaW5EaXN0ID0gSW5maW5pdHk7CiAgICAgIHZhciBjbG9zZXN0Q2VudHJvaWQgPSAtMTsKICAgICAgY2VudHJvaWRzLmZvckVhY2goZnVuY3Rpb24gKGNlbnRyb2lkLCBpbmRleCkgewogICAgICAgIHZhciBkaXN0ID0gKDAsIF9wdWJNZXRob2RzLmRlZmF1bHQpKHBvaW50LCBjZW50cm9pZCk7CiAgICAgICAgaWYgKGRpc3QgPCBtaW5EaXN0KSB7CiAgICAgICAgICBtaW5EaXN0ID0gZGlzdDsKICAgICAgICAgIGNsb3Nlc3RDZW50cm9pZCA9IGluZGV4OwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIGlmIChjbG9zZXN0Q2VudHJvaWQgPT09IC0xKSB7CiAgICAgICAgLy8g5peg5pWI5pWw5o2u5aSE55CGCiAgICAgICAgLy8gY29uc29sZS5lcnJvcigiTm8gY2xvc2VzdCBjZW50cm9pZCBmb3VuZCBmb3IgcG9pbnQ6IiwgcG9pbnQpOwogICAgICB9IGVsc2UgewogICAgICAgIGNsdXN0ZXJzW2Nsb3Nlc3RDZW50cm9pZF0ucHVzaChwb2ludCk7CiAgICAgIH0KICAgIH0pOwogICAgcmV0dXJuIGNsdXN0ZXJzOwogIH0KCiAgLy8g5pu05paw5Lit5b+D54K555qE6L6F5Yqp5Ye95pWwCiAgZnVuY3Rpb24gdXBkYXRlQ2VudHJvaWRzKGNsdXN0ZXJzKSB7CiAgICByZXR1cm4gY2x1c3RlcnMubWFwKGZ1bmN0aW9uIChjbHVzdGVyKSB7CiAgICAgIGlmIChjbHVzdGVyLmxlbmd0aCA9PT0gMCkgcmV0dXJuIG51bGw7CiAgICAgIHZhciBzdW1MYXQgPSBjbHVzdGVyLnJlZHVjZShmdW5jdGlvbiAoc3VtLCBwb2ludCkgewogICAgICAgIHJldHVybiBzdW0gKyBwYXJzZUZsb2F0KHBvaW50LmxhdCk7CiAgICAgIH0sIDApOwogICAgICB2YXIgc3VtTG5nID0gY2x1c3Rlci5yZWR1Y2UoZnVuY3Rpb24gKHN1bSwgcG9pbnQpIHsKICAgICAgICByZXR1cm4gc3VtICsgcGFyc2VGbG9hdChwb2ludC5sbmcpOwogICAgICB9LCAwKTsKICAgICAgcmV0dXJuIHsKICAgICAgICBsYXQ6IHN1bUxhdCAvIGNsdXN0ZXIubGVuZ3RoLAogICAgICAgIGxuZzogc3VtTG5nIC8gY2x1c3Rlci5sZW5ndGgKICAgICAgfTsKICAgIH0pLmZpbHRlcihmdW5jdGlvbiAoY2VudHJvaWQpIHsKICAgICAgcmV0dXJuIGNlbnRyb2lkICE9PSBudWxsOwogICAgfSk7CiAgfQoKICAvLyBLLW1lYW5zIOS4u+WHveaVsAogIHZhciBjZW50cm9pZHMgPSBpbml0aWFsaXplQ2VudHJvaWRzKGRhdGEsIGspOwogIHZhciBjbHVzdGVycyA9IFtdOwogIHZhciBpdGVyYXRpb25zID0gMDsKICB2YXIgbWF4SXRlcmF0aW9ucyA9IDEwMDsgLy8g6K6+572u5pyA5aSn6L+t5Luj5qyh5pWw6Ziy5q2i5peg6ZmQ5b6q546vCgogIHdoaWxlIChpdGVyYXRpb25zIDwgbWF4SXRlcmF0aW9ucykgewogICAgY2x1c3RlcnMgPSBhc3NpZ25Qb2ludHNUb0NlbnRyb2lkcyhkYXRhLCBjZW50cm9pZHMpOwogICAgdmFyIG5ld0NlbnRyb2lkcyA9IHVwZGF0ZUNlbnRyb2lkcyhjbHVzdGVycyk7CiAgICBpZiAoSlNPTi5zdHJpbmdpZnkobmV3Q2VudHJvaWRzKSA9PT0gSlNPTi5zdHJpbmdpZnkoY2VudHJvaWRzKSkgYnJlYWs7CiAgICBjZW50cm9pZHMgPSBuZXdDZW50cm9pZHM7CiAgICBpdGVyYXRpb25zKys7CiAgfQogIHJldHVybiBjZW50cm9pZHM7Cn0="},{"version":3,"names":["_pubMethods","_interopRequireDefault","require","kMeans","data","k","initializeCentroids","centroids","usedIndices","Set","length","index","Math","floor","random","has","push","add","console","log","assignPointsToCentroids","clusters","Array","from","forEach","point","minDist","Infinity","closestCentroid","centroid","dist","calculateDistance","updateCentroids","map","cluster","sumLat","reduce","sum","parseFloat","lat","sumLng","lng","filter","iterations","maxIterations","newCentroids","JSON","stringify"],"sources":["E:/workspacevsCode/web-ui-travel/src/views/AMyWork/tools/algo/kmeans.js"],"sourcesContent":["import calculateDistance from './pubMethods'\r\nexport function kMeans(data, k) {\r\n    // 随机初始化中心点的辅助函数\r\n    function initializeCentroids(data, k) {\r\n        const centroids = [];\r\n        const usedIndices = new Set();\r\n        while (centroids.length < k) {\r\n            const index = Math.floor(Math.random() * data.length);\r\n            if (!usedIndices.has(index)) {\r\n                centroids.push(data[index]);\r\n                usedIndices.add(index);\r\n            }\r\n        }\r\n        console.log(\"Initialized Centroids:\", centroids);\r\n        return centroids;\r\n    }\r\n\r\n    // 将点分配到最近中心点的辅助函数\r\n    function assignPointsToCentroids(data, centroids) {\r\n        const clusters = Array.from({ length: centroids.length }, () => []);\r\n        data.forEach(point => {\r\n            let minDist = Infinity;\r\n            let closestCentroid = -1;\r\n            centroids.forEach((centroid, index) => {\r\n                const dist = calculateDistance(point, centroid);\r\n                if (dist < minDist) {\r\n                    minDist = dist;\r\n                    closestCentroid = index;\r\n                }\r\n            });\r\n            if (closestCentroid === -1) {\r\n                // 无效数据处理\r\n                // console.error(\"No closest centroid found for point:\", point);\r\n            } else {\r\n                clusters[closestCentroid].push(point);\r\n            }\r\n        });\r\n        return clusters;\r\n    }\r\n\r\n    // 更新中心点的辅助函数\r\n    function updateCentroids(clusters) {\r\n        return clusters.map(cluster => {\r\n            if (cluster.length === 0) return null;\r\n            const sumLat = cluster.reduce((sum, point) => sum + parseFloat(point.lat), 0);\r\n            const sumLng = cluster.reduce((sum, point) => sum + parseFloat(point.lng), 0);\r\n            return { lat: sumLat / cluster.length, lng: sumLng / cluster.length };\r\n        }).filter(centroid => centroid !== null);\r\n    }\r\n\r\n    // K-means 主函数\r\n    let centroids = initializeCentroids(data, k);\r\n    let clusters = [];\r\n    let iterations = 0;\r\n    const maxIterations = 100; // 设置最大迭代次数防止无限循环\r\n\r\n    while (iterations < maxIterations) {\r\n        clusters = assignPointsToCentroids(data, centroids);\r\n        const newCentroids = updateCentroids(clusters);\r\n        if (JSON.stringify(newCentroids) === JSON.stringify(centroids)) break;\r\n        centroids = newCentroids;\r\n        iterations++;\r\n    }\r\n\r\n    return centroids;\r\n}\r\n"],"mappings":"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","ignoreList":[]}]}