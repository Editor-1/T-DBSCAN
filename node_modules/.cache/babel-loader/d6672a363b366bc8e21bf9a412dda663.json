{"remainingRequest":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\babel-loader\\lib\\index.js!E:\\workspacevsCode\\web-ui-travel\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\workspacevsCode\\web-ui-travel\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workspacevsCode\\web-ui-travel\\src\\views\\AMyWork\\tools\\poi\\PoiPanel.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\workspacevsCode\\web-ui-travel\\src\\views\\AMyWork\\tools\\poi\\PoiPanel.vue","mtime":1726276975994},{"path":"E:\\workspacevsCode\\web-ui-travel\\babel.config.js","mtime":1677117676000},{"path":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\vue-loader\\lib\\index.js","mtime":1720856215506}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_leaflet","_interopRequireDefault","require","_papaparse","_axios","_DrawPoi","_DrawNewPoi","FileSave","_interopRequireWildcard","_common","_IconsDialog","_DouglasPeuker","_kmeans","_clarans","_dbscan","_optics","_pubMethods","_tdbscan2","PathLayer","pointerImg","cluPointImg","cluCenterPointImg","drawNewPoi","drawPoi","previousLayers","_default","exports","default","components","IconsDialog","name","data","selectcludata","greyCrane","cygne","birdOne","birdTwo","pattern","geometricType","clusterStyle","maxstayTime","clusterStyleOptions","value","label","clusterDataOptions","showpoint","dataList","page","currentPoint","time","fileList","drawing","navdrawing","keyWord","nameList","defaultProps","children","startPlace","lng","lat","endPlace","navstyle","navOptions","watch","newVal","mounted","_this","$nextTick","DrawNewPoi","DrawPoi","init","loadData","loadCSV","beforeDestroy","clear","drawCancel","methods","clusave","forEach","layer","map","removeLayer","markersCanvas","L","MarkersCanvas","addTo","icon","iconUrl","iconSize","iconAnchor","iconCenter","temp_bird_data","getSelectedBirdData","length","displayWithoutClustering","displayWithClustering","_this2","then","birdArr","latlngs","douglasPeucker","item","isValidLatLng","marker","createMarker","addMarker","push","handleGeometricType","_this3","clusterCenters","clarans","kMeans","dbscan","optics","gpsPoints","temp","ElePoint","parseFloat","convertDateStringToUnix","_tdbscan","tdbscan","clusters","CorePoints","_iterator","_createForOfIteratorHelper2","_step","s","n","done","p","num","_iterator2","_step2","v","index","err","e","f","console","log","createCenterMarker","bindPopup","concat","toFixed","on","mouseover","openPopup","mouseout","closePopup","polyline","color","weight","decorator","polylineDecorator","patterns","offset","repeat","symbol","Symbol","arrowHead","pixelSize","headAngle","polygon","pathOptions","stroke","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","csvUrl","response","csv","results","wrap","_callee$","_context","prev","next","fetch","sent","ok","Error","text","Papa","parse","header","abrupt","t0","error","stop","searchLngByName","options","axios","get","res","location","lon","catch","handleNodeClick","$treeNodeId","navigation","draw","searchRoute","showPath","searchByName","list","getList","includes","_this4","photos","arr","split","_item$name$split","_item$name$split2","_slicedToArray2","province","place","provinces","provinceNode","findOrCreateParent","places","clusterAnalysis","startDraw","cancelDraw","backToList","$refs","poiForm","resetFields","save","_this5","validate","valid","param","longitude","latitude","altitude","address","desc","join","id","find","d","create","$messageSuccess","getUuid","flyTo","edit","_this6","url","status","uid","deleteClick","_this7","idx","findIndex","splice","clearById","listChange","latLngChange","setLatLng","start","end","style","path","parents","parentName","parent"],"sources":["src/views/AMyWork/tools/poi/PoiPanel.vue"],"sourcesContent":["<template>\n  <div style=\"overflow: auto;width: 260px;background: white;\">\n    <!-- 列表页面 -->\n    <div v-show=\"page == 'list'\" class=\"poiPage\" style=\"margin-top: 10px;\">\n      <section style=\"margin: 0 20px;color:black;\">\n        <!-- 全选按钮和标绘按钮 -->\n        <div style=\"width: 100%;line-height:30px;color: #606266;\">\n          <div v-show=\"dataList.length>0\" style=\"float: left;\">\n            <el-button v-if=\"!drawing\" type=\"link\" @click=\"startDraw\" icon=\"el-icon-map-location\">\n              <i class=\"iconfont icon-jia-line\" /> 新增地点\n            </el-button>\n            <el-button v-if=\"drawing\" type=\"link\" @click=\"cancelDraw\">\n              取消\n            </el-button>\n          </div>\n        </div>\n        \n        <div style=\"width: 100%;line-height:30px;color: #606266;\">\n          <div v-show=\"dataList.length>0\" style=\"float: left;\">\n            <el-button type=\"link\" @click=\"clusterAnalysis\" icon=\"el-icon-wind-power\">聚合分析</el-button>\n          </div>\n        </div>\n        <!-- 搜索框 -->\n        <div style=\"clear: right;\">\n          <el-input\n            v-model=\"keyWord\"\n            placeholder=\"请输入你要查找的地名\"\n            style=\"width:220px;margin-top: 10px;\"\n            allow-clear\n            enter-button\n            @pressEnter=\"loadData\"\n            @search=\"loadData\"\n          />\n          <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"searchByName(keyWord)\">搜索</el-button>\n          <el-button type=\"primary\" icon=\"el-icon-position\" @click=\"navigation()\">\n            导航\n          </el-button>\n        </div>\n      <!-- 没有数据时候的展示 -->\n      </section>\n        <section style=\"margin: 20px;color:black;\">\n        <!-- 无数据时的占位符 -->\n        <el-empty v-show=\"dataList.length<1\" style=\"color: #606266;margin-top: 20px;padding-top: 120px;height:calc(100vh - 100px)\">\n          <span slot=\"description\"> 无数据 </span>\n          <el-button v-if=\"!drawing\" type=\"link\" @click=\"startDraw\">\n            <i class=\"iconfont icon-jia-line\" /> 标绘\n          </el-button>\n          <el-button v-if=\"drawing\" type=\"primary\" @click=\"cancelDraw\">\n            取消\n          </el-button>\n        </el-empty>\n        <!-- 数据列表 -->\n        <div v-show=\"dataList.length > 0\" item-layout=\"horizontal\" :data-source=\"dataList\" :style=\"{ height: 'calc(100vh - 240px)',overflow: 'auto' }\">\n          <!-- 分组 -->\n          <el-tree :data=\"nameList\" :props=\"defaultProps\" @node-click=\"handleNodeClick\"></el-tree>\n          <!--  -->\n          <div v-for=\"item in dataList\" :key=\"item.id\">\n            <div style=\"line-height: 36px;border-bottom: 1px solid #d3e1f5;\" @dblclick=\"edit(item)\"> \n              <div style=\"display: inline-block;\">{{ item.name }}</div>\n              <div style=\"float: right;\">\n                <el-button slot=\"actions\" type=\"text\" class=\"btn-link\" ghost @click=\"edit(item)\">编辑</el-button>\n                <el-button slot=\"actions\" type=\"text\" class=\"btn-link hover-red\" ghost @click=\"deleteClick(item)\">删除</el-button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n    <!-- 编辑页面 -->\n    <div v-show=\"page == 'edit'\">\n      <div style=\"padding: 20px;max-height: calc(100vh - 130px);overflow: auto;\">\n        <el-form ref=\"poiForm\" :model=\"currentPoint\" size=\"small\">\n          <el-form-item prop=\"name\" label=\"名称\">\n            <el-input v-model=\"currentPoint.name\" allow-clear />\n          </el-form-item>\n          <el-form-item prop=\"name\" label=\"时间\">\n            <el-input v-model=\"currentPoint.time\" allow-clear />\n          </el-form-item>\n          <el-form-item label=\"x\">\n            <el-input v-model=\"currentPoint.lng\" :min=\"-180\" :max=\"180\" @change=\"latLngChange\" />\n          </el-form-item>\n          <el-form-item label=\"y\">\n            <el-input v-model=\"currentPoint.lat\" :min=\"-90\" :max=\"90\" @change=\"latLngChange\" />\n          </el-form-item>\n          <el-form-item label=\"描述\" style=\"margin-bottom: 0;\">\n            <el-input v-model=\"currentPoint.desc\" type=\"textarea\" />\n          </el-form-item>\n          <el-form-item label=\"图片\" style=\"margin-top: 10px;\">\n            <image-upload :fileList=\"fileList\" type=\"poi\" @listChange=\"listChange\" />\n          </el-form-item>\n        </el-form>\n        <div style=\"width: 100%;\">\n          <el-button @click=\"backToList\">\n            返回\n          </el-button>\n          <div style=\"float: right;\">\n            <el-button style=\"margin-left: 10px;\" type=\"primary\" @click=\"save\">确定</el-button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- 导航页面  -->\n    <div v-show=\"page == 'navigation'\">\n      <div style=\"padding: 20px;max-height: calc(200vh - 130px);overflow: auto;\">\n        <el-form size=\"small\" >\n          <el-form-item prop=\"startPlace\" label=\"输入起点\">\n            <el-input v-model=\"startPlace.name\" allow-clear/>\n            <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"searchLngByName(startPlace)\">搜索</el-button>\n          </el-form-item>\n          <el-form-item prop=\"startPlaceLng\" label=\"起点经度\">\n            <el-input v-model=\"startPlace.lng\"/>\n          </el-form-item>\n          <el-form-item prop=\"startPlaceLat\" label=\"起点维度\">\n            <el-input v-model=\"startPlace.lat\"/>\n          </el-form-item>\n          <el-form-item prop=\"endPlace\" label=\"输入终点\">\n            <el-input v-model=\"endPlace.name\" allow-clear/>\n            <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"searchLngByName(endPlace)\">搜索</el-button>\n          </el-form-item>\n          <el-form-item prop=\"endPlaceLng\" label=\"终点经度\">\n            <el-input v-model=\"endPlace.lng\"/>\n          </el-form-item>\n          <el-form-item prop=\"endPlaceLat\" label=\"终点维度\">\n            <el-input v-model=\"endPlace.lat\"/>\n          </el-form-item>\n          <el-form-item  label=\"请选择导航路线类型\">\n            <el-select v-model=\"navstyle\" clearable placeholder=\"请选择\">\n              <el-option\n                v-for=\"item in navOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n        </el-form>\n        <div style=\"width: 100%;\">\n          <el-button @click=\"backToList\">\n            返回\n          </el-button>\n          <div style=\"float: right;\">\n            <el-button style=\"margin-left: 10px;\" type=\"primary\" @click=\"searchRoute()\">确定</el-button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- 聚合分析页面 -->\n    <div v-show=\"page =='cluster'\">\n      <div style=\"padding: 20px;max-height: calc(200vh - 130px);overflow: auto;\">\n        \n        <el-form size=\"small\">\n          <el-form-item label=\"聚合方法\">\n            <el-select v-model=\"clusterStyle\" placeholder=\"请选择\" clearable>\n              <el-option\n                v-for=\"item in clusterStyleOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item> \n          <el-form-item label=\"聚合数据\">\n            <el-select v-model=\"selectcludata\" placeholder=\"请选择\">\n              <el-option\n                v-for=\"item in clusterDataOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.label\">\n              </el-option>\n            </el-select>\n          </el-form-item> \n          <el-form-item label=\"最大停留时长\" v-if=\"clusterStyle==5\">\n            <el-input v-model=\"maxstayTime\" placeholder=\"130.0\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"模式\">\n            <el-radio-group v-model=\"pattern\">\n              <el-radio :label=\"1\">简化</el-radio>\n              <el-radio :label=\"2\">初始</el-radio>\n              <el-radio :label=\"3\">聚合</el-radio>\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item label=\"几何类型\">\n            <el-radio-group v-model=\"geometricType\">\n              <el-radio :label=\"1\">点</el-radio>\n              <el-radio :label=\"2\">点+线</el-radio>\n            </el-radio-group>\n          </el-form-item>\n        </el-form>\n        \n        <div style=\"width: 100%;\">\n          <el-button @click=\"backToList\">\n            返回\n          </el-button>\n          <div style=\"float: right;\">\n            <el-button style=\"margin-left: 10px;\" type=\"primary\" @click=\"clusave\">确定</el-button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport L from 'leaflet'  // 引入Leaflet库\nimport 'leaflet-markers-canvas'\nimport 'leaflet.markercluster/dist/leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport \"leaflet-canvas-marker\"\nimport Papa from 'papaparse'\nimport axios from 'axios'\nimport DrawPoi from './DrawPoi'\nimport DrawNewPoi from './DrawNewPoi'\nimport * as FileSave from './FileSave'\nimport { getUuid } from '../biz/common'\nimport IconsDialog from '../../../tool/build/IconsDialog.vue'\nimport 'leaflet/dist/leaflet.css'\nimport { douglasPeucker } from '../algo/DouglasPeuker'\nimport { kMeans } from '../algo/kmeans' \nimport { clarans } from '../algo/clarans' \nimport { dbscan } from '../algo/dbscan' \nimport { optics } from '../algo/optics' \nimport {ElePoint, convertDateStringToUnix} from '../algo/pubMethods'\nimport { tdbscan } from '../algo/tdbscan' \nimport * as PathLayer from '../comm/PathLayer'\nconst pointerImg = require('@/assets/images/location64.png')\nconst cluPointImg = require('@/assets/images/point.png')\nconst cluCenterPointImg = require('@/assets/images/centerPoint.png')\n// 定义 drawPoi 变量\nlet drawNewPoi\nlet drawPoi\nlet previousLayers = []\nexport default {\n  components: { IconsDialog },\n  name: 'PoiPanel',\n  data() {\n    return {\n      selectcludata: '',\n      //灰鹤\n      greyCrane:[],\n      //小天鹅\n      cygne:[],\n      // 鸟类1\n      birdOne:[],\n      // 鸟类2\n      birdTwo:[],\n      // 数据模式\n      pattern:2,\n      // 几何类型\n      geometricType:1,\n      // 聚合算法\n      clusterStyle:'',\n      //最大停留时长\n      maxstayTime:'',\n      //聚合方式\n      clusterStyleOptions:[{\n        value:1,\n        label:'CLARANS'\n      },{\n        value:2,\n        label:'K-Means'\n      },{\n        value:3,\n        label:'DBSCAN'\n      },{\n        value:4,\n        label:'OPTICS'\n      },{\n        value:5,\n        label:'T-DBSCAN'\n      }],\n      // 聚合数据\n      clusterDataOptions:[{\n        value:0,\n        label:'灰鹤'\n      },{\n        value:1,\n        label:'小天鹅'\n      },{\n        value:2,\n        label:'鸟类1'\n      },{\n        value:3,\n        label:'鸟类2'\n      }],\n      showpoint: '0',\n      dataList: [], // 数据列表\n      page: 'list', // 当前页面（list 或 edit）\n      currentPoint: {\n        name: '',\n        time: ''\n      }, // 当前编辑的点信息\n      fileList: [], // 上传的文件列表\n      pointerImg: pointerImg, // 指针图片\n      drawing: false, // 是否正在绘制\n      navdrawing: false,\n      keyWord: '', // 搜索关键字\n      nameList:[],\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      startPlace:{ //出发点\n        name:'',\n        lng: '',\n        lat: ''\n      },\n      endPlace:{ //终点\n        name:'',\n        lng: '',\n        lat: ''\n      },\n      //导航样式\n      navstyle: 0,\n      navOptions:[{\n        value:0,\n        label:'最快路线'\n      },{\n        value:1,\n        label:'最短路线'\n      },{\n        value:2,\n        label:'避开高速'\n      },{\n        value:3,\n        label:'步行'\n      }]\n    }\n  },\n  watch: {  \n    clusterStyle(newVal) {  \n      if (newVal) { // 确保有值被选中  \n        this.pattern = 3 // 设置为聚合  \n        // 如果需要，可以在这里添加逻辑来禁用或隐藏其他选项，但Element UI的el-radio不支持直接禁用  \n        // 一种方法是使用额外的数据属性来控制显示  \n      }else{\n        this.pattern = 2\n      }  \n    },\n    pattern(newVal){\n      if(newVal !== 3){\n        this.clusterStyle = ''\n      }\n    }  \n  },\n  mounted() {\n    // 初始化 drawPoi 和 PathLayer\n    this.$nextTick(() => {\n      drawNewPoi = new DrawNewPoi(this)\n      drawPoi = new DrawPoi(this)\n      PathLayer.init()\n    })\n    // 加载数据\n    this.loadData()\n    this.greyCrane = this.loadCSV('灰鹤')\n    this.cygne = this.loadCSV('小天鹅')\n    this.birdOne = this.loadCSV('鸟类1')\n    this.birdTwo = this.loadCSV('鸟类2')\n  },\n  beforeDestroy() {\n    // 清除绘制\n    drawNewPoi.clear()\n    drawNewPoi.drawCancel()\n  },\n  methods: {\n    clusave() {\n      // 清理先前图层\n      previousLayers.forEach(layer => {\n        map.removeLayer(layer);\n      });\n      previousLayers = [];\n\n      // 添加新的MarkersCanvas\n      const markersCanvas = new L.MarkersCanvas();\n      markersCanvas.addTo(map);\n\n      // 定义通用图标\n      const icon = L.icon({\n        iconUrl: cluPointImg,\n        iconSize: [12, 12],\n        iconAnchor: [6, 6]\n      });\n      // 定义栖息地图标\n      const iconCenter = L.icon({\n        iconUrl: cluCenterPointImg,\n        iconSize: [15, 15],\n        iconAnchor: [6, 6]\n      });\n\n      // 根据鸟类选择数据\n      let temp_bird_data = this.getSelectedBirdData();\n\n      // 没有选择聚类方式时\n      if (this.clusterStyle.length === 0) {\n        this.displayWithoutClustering(temp_bird_data, markersCanvas, icon,this.pattern);\n      } else {\n        this.displayWithClustering(temp_bird_data, markersCanvas, iconCenter);\n      }\n    },\n\n    // 根据选择的鸟类返回对应数据\n    getSelectedBirdData() {\n      switch(this.selectcludata) {\n        case '灰鹤':\n          return this.greyCrane;\n        case '小天鹅':\n          return this.cygne;\n        case '鸟类1':\n          return this.birdOne;\n        case '鸟类2':\n          return this.birdTwo;\n        default:\n          return [];\n      }\n    },\n\n    // 不聚类时的展示逻辑\n    displayWithoutClustering(temp_bird_data, markersCanvas, icon,pattern) {\n      if(pattern == '1'){ //简化版本，调用了滤波算法\n        temp_bird_data.then(birdArr => {\n          let latlngs = [];\n          birdArr = douglasPeucker(birdArr,25000)\n          birdArr.forEach(item => {\n            if (this.isValidLatLng(item)) {\n              const marker = this.createMarker(item, icon);\n              markersCanvas.addMarker(marker);\n              latlngs.push([item.lng, item.lat]);\n            }\n          });\n          this.handleGeometricType(latlngs, markersCanvas);\n        });\n      }else{\n        //最原始的点\n        temp_bird_data.then(birdArr => {\n          let latlngs = [];\n          birdArr.forEach(item => {\n            if (this.isValidLatLng(item)) {\n              const marker = this.createMarker(item, icon);\n              markersCanvas.addMarker(marker);\n              latlngs.push([item.lng, item.lat]);\n            }\n          });\n          this.handleGeometricType(latlngs, markersCanvas);\n        });\n      }\n    },\n\n    // 聚类后的展示逻辑\n    displayWithClustering(temp_bird_data, markersCanvas, icon) {\n      if(this.geometricType == 5){\n        \n      }\n      temp_bird_data.then(birdArr => {\n        let clusterCenters = [];\n        switch(this.clusterStyle) {\n          case 1:\n            clusterCenters = clarans(birdArr, 20, 5, 100);\n            break;\n          case 2:\n            clusterCenters = kMeans(birdArr, 20);\n            break;\n          case 3:\n            clusterCenters = dbscan(birdArr, 25, 70);\n            break;\n          case 4:\n            clusterCenters =  optics(birdArr,25,70);\n            break;\n          case 5:\n            if(this.maxstayTime == ''){\n              this.maxstayTime = 130\n            }\n            const gpsPoints = []\n            birdArr.forEach(item=>{\n              const temp = new ElePoint(parseFloat(item.lat), parseFloat(item.lng), convertDateStringToUnix(item.time), gpsPoints.length);\n              gpsPoints.push(temp);\n            })\n            const {clusters,CorePoints} = tdbscan(gpsPoints,25000,60 * 60 * 24 * 3,60 * 60 * 24 * this.maxstayTime)\n            for(const p of CorePoints){\n                var num = 0\n                for(const v of clusters){\n                  if(clusters[p.index]===v){\n                    num++\n                  }\n                }\n                if(num>=30){\n                  const item = birdArr[p.index]\n                  clusterCenters.push(item)\n                }\n            }\n            break;\n        }\n        let latlngs = [];\n        console.log('滤波算法前',clusterCenters)\n        clusterCenters = douglasPeucker(clusterCenters,25000)\n        \n        clusterCenters.forEach(item => {\n          if (this.isValidLatLng(item)) {\n            const marker = this.createCenterMarker(item, icon);\n            markersCanvas.addMarker(marker);\n            latlngs.push([item.lng, item.lat]);\n          }\n        });\n        this.handleGeometricType(latlngs, markersCanvas);\n\n      });\n    },\n    // 创建栖息地点位，时间越长，icon的size将会随着调整\n    createCenterMarker(item,icon){\n       return L.marker([item.lng, item.lat], { icon })\n        .bindPopup(`停留时间:${(parseFloat(item.time)/(60 * 60 * 24)).toFixed(2)}天<p>经度:${parseFloat(item.lat).toFixed(5)}<p>纬度:${parseFloat(item.lng).toFixed(5)}`)\n        .on({\n          mouseover(e) { this.openPopup(); },\n          mouseout(e) { this.closePopup(); }\n        });\n    },\n    // 创建普通点标记\n    createMarker(item, icon) {\n      return L.marker([item.lng, item.lat], { icon })\n        .bindPopup(`时间:${item.time}<p>经度:${item.lat.toFixed(5)}<p>纬度:${item.lng.toFixed(5)}`)\n        .on({\n          mouseover(e) { this.openPopup(); },\n          mouseout(e) { this.closePopup(); }\n        });\n    },\n\n    // 判断纬度和经度是否合法\n    isValidLatLng(item) {\n      return item.lat != null && item.lng != null && item.lat !== 0 && item.lng !== 0;\n    },\n\n    // 根据几何类型绘制\n    handleGeometricType(latlngs, markersCanvas) {\n      if (this.geometricType == '1') {\n        previousLayers = previousLayers.concat(latlngs);\n      } else {\n        const polyline = L.polyline(latlngs, { color: 'red', weight: 3 }).addTo(map);\n        const decorator = L.polylineDecorator(polyline, {\n          patterns: [\n            { offset: 0, repeat: 35, symbol: L.Symbol.arrowHead({\n              pixelSize: 5,\n              headAngle: 75,\n              polygon: false,\n              pathOptions: { stroke: true, weight: 2, color: 'blue' }\n            })}\n          ]\n        }).addTo(map);\n        previousLayers.push(decorator);\n        previousLayers.push(polyline);\n      }\n    },\n    // 读取csv文件\n    async loadCSV(data) {  \n      const csvUrl = `../resource/${data}.csv`;  \n      try {  \n        const response = await fetch(csvUrl);  \n        if (!response.ok) throw new Error('Network response was not ok');  \n        const csv = await response.text();  \n        const results = Papa.parse(csv, { header: true }); \n        // this.cludata = results.data; // 将解析后的数据赋值给datalist  \n        return results.data\n      } catch (error) {  \n        console.error('Error loading CSV:', error);  \n        // 可以在这里处理错误，比如显示一个错误消息给用户  \n      }  \n    },\n    //根据地名查找经纬度\n    searchLngByName(options){\n      //湖南省环球信士公司\n      //请求： http://api.tianditu.gov.cn/geocoder?ds={\"keyWord\":\"北京市延庆区延庆镇莲花池村前街50夕阳红养老院\"}&tk=您的密钥\n      axios.get('http://api.tianditu.gov.cn/geocoder?ds={\"keyWord\":\"' + options.name + '\"}&tk=89dea3eab561f0dfb9867e531415e015').then(res => {\n        options.lng=res.data.location.lon\n        options.lat=res.data.location.lat\n      }).catch(err => {\n        console.error('Error fetching route:', err)\n      }) \n    },\n    //点击节点\n    handleNodeClick(data){\n      console.log('节点数据',data)\n      console.log('节点ID',data.$treeNodeId)\n    },\n    //导航\n    navigation(){\n      this.page='navigation' //跳转到导航界面\n      this.navdrawing = true\n      drawPoi.draw()\n    },\n    //绘制导航路线\n    searchRoute(){\n      this.showPath(this.startPlace,this.endPlace,this.navstyle)\n    },\n    //查询地名\n    searchByName(keyWord){\n      const list = []\n      FileSave.getList().then(res => {\n        const temp = res\n        if(temp){\n          temp.forEach(item =>{\n            if(item.name.includes(keyWord)){\n              list.push(item)\n            }\n          })\n        }\n      })\n      this.dataList = list\n    },\n    // 加载数据\n    loadData() {\n      FileSave.getList().then(res => {\n        console.log('res', res)\n        const list = res\n        if (res) {\n          // 处理图片\n          list.forEach(item => {\n            if (item.photos) {\n              const arr = item.photos.split('#')\n              if (arr.length > 0) {\n                item['photo0'] = arr[0]\n                item['photoArr'] = arr\n              }\n            }\n          })\n          this.dataList = list\n        } else {\n          this.dataList = []\n        }\n        const nameList = []\n        list.forEach(item =>{\n          if(item.name){\n              const [province,place] = item.name.split('-')\n              const provinces = nameList // 省份层级是树的根\n              const provinceNode = findOrCreateParent(provinces, province)\n              const places = provinceNode.children\n              findOrCreateParent(places, place) // 城市作为省份的子节点\n            }\n          }\n        )\n        this.nameList=nameList\n      })\n    },\n    // 聚合分析\n    clusterAnalysis(){\n      this.page = 'cluster'\n      drawNewPoi.clear()\n      drawPoi.clear()\n      PathLayer.clear()\n    },\n    // 开始绘制\n    startDraw() {\n      this.drawing = true\n      this.fileList = []\n      drawNewPoi.draw()\n    },\n    // 取消绘制\n    cancelDraw() {\n      drawNewPoi.drawCancel()\n      this.drawing = false\n    },\n    // 返回列表页面\n    backToList() {\n      this.page = 'list'\n      drawNewPoi.clear()\n      drawPoi.clear()\n      PathLayer.clear()\n      this.navdrawing = false\n      if(this.startPlace!=''){\n        this.startPlace.name=''\n        this.startPlace.lng=''\n        this.startPlace.lat=''\n        this.endPlace.name=''\n        this.endPlace.lng=''\n        this.endPlace.lat=''\n\n      }\n      this.$refs.poiForm.resetFields()\n    },\n    // 保存数据\n    save() {\n      this.$refs.poiForm.validate(valid => {\n        if (!valid) {\n          return\n        }\n        const currentPoint = this.currentPoint\n\n        const param = {\n          name: currentPoint.name,\n          time: currentPoint.time,\n          longitude: currentPoint.lng,\n          latitude: currentPoint.lat,\n          altitude: currentPoint.altitude || 0,\n          photos: '',\n          address: '',\n          desc: currentPoint.desc || ''\n        }\n        const photos = []\n        if (this.fileList.length > 0) {\n          this.fileList.forEach(f => {\n            photos.push(f.name)\n          })\n        }\n        if (photos.length > 0) {\n          param.photos = photos.join('#')\n        }\n\n        if (currentPoint.id) {\n          const item = this.dataList.find(d => d.id === currentPoint.id)\n          if (item) {\n            item.name = currentPoint.name || ''\n            item.time = currentPoint.time || ''\n            item.longitude = currentPoint.lng\n            item.latitude = currentPoint.lat\n            item.altitude = currentPoint.altitude || 0\n            item.photos = param.photos\n            item.address = param.address\n            item.desc = currentPoint.desc || ''\n            FileSave.create(this.dataList).then(res => {\n              this.$messageSuccess()\n              this.backToList()\n            })\n          }\n        } else {\n          param['id'] = getUuid()\n          this.dataList.push(param)\n          FileSave.create(this.dataList).then(res => {\n            this.$messageSuccess()\n            this.backToList()\n          })\n        }\n        this.loadData()\n      })\n    },\n    // 飞到指定点\n    flyTo(item) {\n      drawNewPoi.flyTo(item)\n    },\n    // 编辑指定点\n    edit(item) {\n      this.fileList = []\n      const photos = item.photos\n      if (photos) {\n        const arr = photos.split('#')\n        arr.forEach(url => {\n          this.fileList.push({\n            status: 'done',\n            url: url,\n            name: url,\n            uid: getUuid()\n          })\n        })\n      }\n      drawNewPoi.edit(item)\n    },\n    // 删除指定点\n    deleteClick(item) {\n      const idx = this.dataList.findIndex(d => d.id === item.id)\n      this.dataList.splice(idx, 1)\n      FileSave.create(this.dataList).then(res => {\n        this.$messageSuccess()\n        this.loadData()\n        drawNewPoi.clearById(item.id)\n      })\n    },\n    // 文件列表变化\n    listChange(list) {\n      this.fileList = list\n    },\n    // 经纬度变化\n    latLngChange(v) {\n      if (this.currentPoint.lat && this.currentPoint.lng) {\n        drawNewPoi.setLatLng(this.currentPoint.lat, this.currentPoint.lng)\n      }\n    },\n    // 显示路径\n    showPath(start,end,style) {\n      PathLayer.path(start,end,style)\n    }\n  }\n}\n// 辅助函数：在树中查找或添加父节点\nfunction findOrCreateParent(parents, parentName) {\n  let parent = parents.find(p => p.label === parentName);\n  if (!parent) {\n    parent = { label: parentName, children: [] };\n    parents.push(parent);\n  }\n  return parent;\n}\n\n</script>\n\n<style scoped>\n.poiImg {\n  width: 40px;\n  height: 40px;\n  border-radius: 5px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}