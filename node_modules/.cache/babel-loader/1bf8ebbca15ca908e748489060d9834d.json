{"remainingRequest":"E:\\GitProject\\T-DBSCAN\\node_modules\\babel-loader\\lib\\index.js!E:\\GitProject\\T-DBSCAN\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\GitProject\\T-DBSCAN\\src\\views\\AMyWork\\tools\\algo\\DouglasPeuker.js","dependencies":[{"path":"E:\\GitProject\\T-DBSCAN\\src\\views\\AMyWork\\tools\\algo\\DouglasPeuker.js","mtime":1727184743319},{"path":"E:\\GitProject\\T-DBSCAN\\babel.config.js","mtime":1677117676000},{"path":"E:\\GitProject\\T-DBSCAN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\GitProject\\T-DBSCAN\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\GitProject\\T-DBSCAN\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1720856214296}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRvdWdsYXNQZXVja2VyID0gZG91Z2xhc1BldWNrZXI7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnB1c2guanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNvcnQuanMiKTsKdmFyIF9wdWJNZXRob2RzID0gcmVxdWlyZSgiLi9wdWJNZXRob2RzIik7Ci8vIOiuoeeul+Wegui3nQpmdW5jdGlvbiBkaXN0VG9TZWdtZW50KHN0YXJ0LCBlbmQsIGNlbnRlcikgewogIC8vIOeUqOa1t+S8puWFrOW8j+iuoeeul+mdouenrwogIHZhciBhID0gTWF0aC5hYnMoKDAsIF9wdWJNZXRob2RzLmNhbGN1bGF0ZURpc3RhbmNlKShzdGFydCwgZW5kKSk7CiAgdmFyIGIgPSBNYXRoLmFicygoMCwgX3B1Yk1ldGhvZHMuY2FsY3VsYXRlRGlzdGFuY2UpKHN0YXJ0LCBjZW50ZXIpKTsKICB2YXIgYyA9IE1hdGguYWJzKCgwLCBfcHViTWV0aG9kcy5jYWxjdWxhdGVEaXN0YW5jZSkoZW5kLCBjZW50ZXIpKTsKICB2YXIgcCA9IChhICsgYiArIGMpIC8gMi4wOwogIHZhciBzID0gTWF0aC5zcXJ0KE1hdGguYWJzKHAgKiAocCAtIGEpICogKHAgLSBiKSAqIChwIC0gYykpKTsKICByZXR1cm4gcyAqIDIuMCAvIGE7Cn0KCi8vIOmAkuW9kuaWueW8j+WOi+e8qei9qOi/uQpmdW5jdGlvbiBjb21wcmVzc0xpbmUoY29vcmRpbmF0ZSwgcmVzdWx0LCBzdGFydCwgZW5kLCBkTWF4KSB7CiAgaWYgKHN0YXJ0IDwgZW5kKSB7CiAgICB2YXIgbWF4RGlzdCA9IDA7CiAgICB2YXIgY3VycmVudEluZGV4ID0gMDsKICAgIHZhciBzdGFydFBvaW50ID0gY29vcmRpbmF0ZVtzdGFydF07CiAgICB2YXIgZW5kUG9pbnQgPSBjb29yZGluYXRlW2VuZCAtIDFdOwogICAgZm9yICh2YXIgaSA9IHN0YXJ0ICsgMTsgaSA8IGVuZDsgaSsrKSB7CiAgICAgIHZhciBjdXJyZW50RGlzdCA9IGRpc3RUb1NlZ21lbnQoc3RhcnRQb2ludCwgZW5kUG9pbnQsIGNvb3JkaW5hdGVbaV0pOwogICAgICBpZiAoY3VycmVudERpc3QgPiBtYXhEaXN0KSB7CiAgICAgICAgbWF4RGlzdCA9IGN1cnJlbnREaXN0OwogICAgICAgIGN1cnJlbnRJbmRleCA9IGk7CiAgICAgIH0KICAgIH0KICAgIGlmIChtYXhEaXN0ID49IGRNYXgpIHsKICAgICAgLy8g5bCG5b2T5YmN54K55Yqg5YWl5Yiw6L+H5ruk5pWw57uE5LitCiAgICAgIHJlc3VsdC5wdXNoKGNvb3JkaW5hdGVbY3VycmVudEluZGV4XSk7CiAgICAgIC8vIOWwhuWOn+adpeeahOe6v+auteS7peW9k+WJjeeCueS4uuS4reW/g+aLhuaIkOS4pOaute+8jOWIhuWIq+i/m+ihjOmAkuW9kuWkhOeQhgogICAgICBjb21wcmVzc0xpbmUoY29vcmRpbmF0ZSwgcmVzdWx0LCBzdGFydCwgY3VycmVudEluZGV4LCBkTWF4KTsKICAgICAgY29tcHJlc3NMaW5lKGNvb3JkaW5hdGUsIHJlc3VsdCwgY3VycmVudEluZGV4LCBlbmQsIGRNYXgpOwogICAgfQogIH0KICByZXR1cm4gcmVzdWx0Owp9CgovKioNCiAqIEBwYXJhbSBjb29yZGluYXRlcyDljp/lp4vovajov7kgQXJyYXk8e2xhdCwgbG5nLCB0aW1lfT4NCiAqIEBwYXJhbSBkTWF4IOWFgeiuuOacgOWkp+i3neemu+ivr+W3rg0KICogQHJldHVybiDmir3nqIDlkI7nmoTovajov7kgQXJyYXk8W2xhdCwgbG5nLCB0aW1lXT4NCiAqLwpmdW5jdGlvbiBkb3VnbGFzUGV1Y2tlcihjb29yZGluYXRlcywgZE1heCkgewogIGlmICghY29vcmRpbmF0ZXMgfHwgIShjb29yZGluYXRlcy5sZW5ndGggPiAyKSkgewogICAgcmV0dXJuIG51bGw7CiAgfQogIC8vIOWwhui+k+WFpeaVsOaNrui9rOaNouS4uuWMheWQqyBsYXQg5ZKMIGxuZyDnmoTlr7nosaEKICB2YXIgY29vcmRpbmF0ZSA9IGNvb3JkaW5hdGVzLm1hcChmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHsKICAgIHJldHVybiB7CiAgICAgIGxhdDogaXRlbS5sYXQsCiAgICAgIGxuZzogaXRlbS5sbmcsCiAgICAgIHRpbWU6IGl0ZW0udGltZSwKICAgICAga2V5OiBpbmRleAogICAgfTsKICB9KTsKICB2YXIgcmVzdWx0ID0gY29tcHJlc3NMaW5lKGNvb3JkaW5hdGUsIFtdLCAwLCBjb29yZGluYXRlLmxlbmd0aCAtIDEsIGRNYXgpOwogIHJlc3VsdC5wdXNoKGNvb3JkaW5hdGVbMF0pOwogIHJlc3VsdC5wdXNoKGNvb3JkaW5hdGVbY29vcmRpbmF0ZS5sZW5ndGggLSAxXSk7CiAgdmFyIHJlc3VsdExhdExuZyA9IHJlc3VsdC5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICBpZiAoYS5rZXkgPCBiLmtleSkgewogICAgICByZXR1cm4gLTE7CiAgICB9IGVsc2UgaWYgKGEua2V5ID4gYi5rZXkpIHJldHVybiAxOwogICAgcmV0dXJuIDA7CiAgfSk7CiAgdmFyIHRyYW5zZm9ybWVkID0gcmVzdWx0TGF0TG5nLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgcmV0dXJuIHsKICAgICAgbGF0OiBpdGVtLmxhdCwKICAgICAgbG5nOiBpdGVtLmxuZywKICAgICAgdGltZTogaXRlbS50aW1lCiAgICB9OwogIH0pOwogIC8vIOi9rOaNouWbnuWOn+Wni+aVsOe7hOagvOW8jwogIHJldHVybiB0cmFuc2Zvcm1lZDsKfQ=="},{"version":3,"names":["_pubMethods","require","distToSegment","start","end","center","a","Math","abs","calculateDistance","b","c","p","s","sqrt","compressLine","coordinate","result","dMax","maxDist","currentIndex","startPoint","endPoint","i","currentDist","push","douglasPeucker","coordinates","length","map","item","index","lat","lng","time","key","resultLatLng","sort","transformed"],"sources":["E:/GitProject/T-DBSCAN/src/views/AMyWork/tools/algo/DouglasPeuker.js"],"sourcesContent":["import {calculateDistance} from './pubMethods'\r\n\r\n// 计算垂距\r\nfunction distToSegment(start, end, center) {\r\n    // 用海伦公式计算面积\r\n    let a = Math.abs(calculateDistance(start, end));\r\n    let b = Math.abs(calculateDistance(start, center));\r\n    let c = Math.abs(calculateDistance(end, center));\r\n    let p = (a + b + c) / 2.0;\r\n    let s = Math.sqrt(Math.abs(p * (p - a) * (p - b) * (p - c)));\r\n    return s * 2.0 / a;\r\n}\r\n\r\n// 递归方式压缩轨迹\r\nfunction compressLine(coordinate, result, start, end, dMax) {\r\n    if (start < end) {\r\n        let maxDist = 0;\r\n        let currentIndex = 0;\r\n        let startPoint = coordinate[start]\r\n        let endPoint = coordinate[end-1]\r\n        for (let i = start + 1; i < end; i++) {\r\n            let currentDist = distToSegment(startPoint, endPoint, coordinate[i]);\r\n            if (currentDist > maxDist) {\r\n                maxDist = currentDist;\r\n                currentIndex = i;\r\n            }\r\n        }\r\n\r\n        if (maxDist >= dMax) {\r\n            // 将当前点加入到过滤数组中\r\n            result.push(coordinate[currentIndex]);\r\n            // 将原来的线段以当前点为中心拆成两段，分别进行递归处理\r\n            compressLine(coordinate, result, start, currentIndex, dMax);\r\n            compressLine(coordinate, result, currentIndex, end, dMax);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * @param coordinates 原始轨迹 Array<{lat, lng, time}>\r\n * @param dMax 允许最大距离误差\r\n * @return 抽稀后的轨迹 Array<[lat, lng, time]>\r\n */\r\nexport function douglasPeucker(coordinates, dMax) {\r\n    if (!coordinates || !(coordinates.length > 2)) {\r\n        return null;\r\n    }\r\n    // 将输入数据转换为包含 lat 和 lng 的对象\r\n    let coordinate = coordinates.map((item, index) => ({\r\n        lat: item.lat,\r\n        lng: item.lng,\r\n        time: item.time,\r\n        key: index\r\n    }));\r\n\r\n    let result = compressLine(coordinate, [], 0, coordinate.length - 1, dMax);\r\n    result.push(coordinate[0]);\r\n    result.push(coordinate[coordinate.length - 1]);\r\n\r\n    let resultLatLng = result.sort((a, b) => {\r\n        if (a.key < b.key) {\r\n            return -1;\r\n        } else if (a.key > b.key)\r\n            return 1;\r\n        return 0;\r\n    });\r\n    const transformed = resultLatLng.map(item => ({  \r\n        lat: item.lat,  \r\n        lng: item.lng,  \r\n        time: item.time  \r\n      }));\r\n    // 转换回原始数组格式\r\n    return transformed\r\n}"],"mappings":"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","ignoreList":[]}]}