{"remainingRequest":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\babel-loader\\lib\\index.js!E:\\workspacevsCode\\web-ui-travel\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\workspacevsCode\\web-ui-travel\\src\\views\\AMyWork\\tools\\algo\\clarans.js","dependencies":[{"path":"E:\\workspacevsCode\\web-ui-travel\\src\\views\\AMyWork\\tools\\algo\\clarans.js","mtime":1726234312268},{"path":"E:\\workspacevsCode\\web-ui-travel\\babel.config.js","mtime":1677117676000},{"path":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1720856214296}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJFOi93b3Jrc3BhY2V2c0NvZGUvd2ViLXVpLXRyYXZlbC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQuanMiKS5kZWZhdWx0OwpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuY2xhcmFucyA9IGNsYXJhbnM7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc2V0LmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiKTsKdmFyIF9wdWJNZXRob2RzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL3B1Yk1ldGhvZHMiKSk7CmZ1bmN0aW9uIGNsYXJhbnMoZGF0YSwgaywgbnVtTG9jYWwsIG1heE5laWdoYm9yKSB7CiAgLy8g6K6h566X6IGa57G757uT5p6c55qE5oC75oiQ5pysCiAgZnVuY3Rpb24gY2FsY3VsYXRlVG90YWxDb3N0KGRhdGEsIG1lZG9pZHMpIHsKICAgIHZhciB0b3RhbENvc3QgPSAwOwogICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChwb2ludCkgewogICAgICB2YXIgbWluRGlzdCA9IEluZmluaXR5OwogICAgICBtZWRvaWRzLmZvckVhY2goZnVuY3Rpb24gKG1lZG9pZCkgewogICAgICAgIHZhciBkaXN0ID0gKDAsIF9wdWJNZXRob2RzLmRlZmF1bHQpKHBvaW50LCBtZWRvaWQpOwogICAgICAgIGlmIChkaXN0IDwgbWluRGlzdCkgewogICAgICAgICAgbWluRGlzdCA9IGRpc3Q7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgdG90YWxDb3N0ICs9IG1pbkRpc3Q7CiAgICB9KTsKICAgIHJldHVybiB0b3RhbENvc3Q7CiAgfQoKICAvLyDliJ3lp4vljJZtZWRvaWRzCiAgZnVuY3Rpb24gaW5pdGlhbGl6ZU1lZG9pZHMoZGF0YSwgaykgewogICAgdmFyIG1lZG9pZHMgPSBbXTsKICAgIHZhciB1c2VkSW5kaWNlcyA9IG5ldyBTZXQoKTsKICAgIHdoaWxlIChtZWRvaWRzLmxlbmd0aCA8IGspIHsKICAgICAgdmFyIGluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogZGF0YS5sZW5ndGgpOwogICAgICBpZiAoIXVzZWRJbmRpY2VzLmhhcyhpbmRleCkpIHsKICAgICAgICBtZWRvaWRzLnB1c2goZGF0YVtpbmRleF0pOwogICAgICAgIHVzZWRJbmRpY2VzLmFkZChpbmRleCk7CiAgICAgIH0KICAgIH0KICAgIHJldHVybiBtZWRvaWRzOwogIH0KCiAgLy8gQ0xBUkFOU+eul+azleS4u+WHveaVsAogIHZhciBiZXN0TWVkb2lkcyA9IGluaXRpYWxpemVNZWRvaWRzKGRhdGEsIGspOwogIHZhciBiZXN0Q29zdCA9IGNhbGN1bGF0ZVRvdGFsQ29zdChkYXRhLCBiZXN0TWVkb2lkcyk7CiAgZm9yICh2YXIgaSA9IDA7IGkgPCBudW1Mb2NhbDsgaSsrKSB7CiAgICB2YXIgY3VycmVudE1lZG9pZHMgPSBpbml0aWFsaXplTWVkb2lkcyhkYXRhLCBrKTsKICAgIHZhciBjdXJyZW50Q29zdCA9IGNhbGN1bGF0ZVRvdGFsQ29zdChkYXRhLCBjdXJyZW50TWVkb2lkcyk7CiAgICB2YXIgbmVpZ2hib3JDb3VudGVyID0gMDsKICAgIHdoaWxlIChuZWlnaGJvckNvdW50ZXIgPCBtYXhOZWlnaGJvcikgewogICAgICAvLyDpmo/mnLrpgInmi6nkuIDkuKptZWRvaWTlubblsJ3or5Xmm7/mjaIKICAgICAgdmFyIHJhbmRvbU1lZG9pZEluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogayk7CiAgICAgIHZhciByYW5kb21Ob25NZWRvaWRJbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGRhdGEubGVuZ3RoKTsKICAgICAgdmFyIG5ld01lZG9pZHMgPSBjdXJyZW50TWVkb2lkcy5zbGljZSgpOwogICAgICBuZXdNZWRvaWRzW3JhbmRvbU1lZG9pZEluZGV4XSA9IGRhdGFbcmFuZG9tTm9uTWVkb2lkSW5kZXhdOwogICAgICB2YXIgbmV3Q29zdCA9IGNhbGN1bGF0ZVRvdGFsQ29zdChkYXRhLCBuZXdNZWRvaWRzKTsKICAgICAgaWYgKG5ld0Nvc3QgPCBjdXJyZW50Q29zdCkgewogICAgICAgIGN1cnJlbnRNZWRvaWRzID0gbmV3TWVkb2lkczsKICAgICAgICBjdXJyZW50Q29zdCA9IG5ld0Nvc3Q7CiAgICAgICAgbmVpZ2hib3JDb3VudGVyID0gMDsgLy8g6YeN572ubmVpZ2hib3LorqHmlbDlmagKICAgICAgfSBlbHNlIHsKICAgICAgICBuZWlnaGJvckNvdW50ZXIrKzsKICAgICAgfQogICAgfQogICAgaWYgKGN1cnJlbnRDb3N0IDwgYmVzdENvc3QpIHsKICAgICAgYmVzdE1lZG9pZHMgPSBjdXJyZW50TWVkb2lkczsKICAgICAgYmVzdENvc3QgPSBjdXJyZW50Q29zdDsKICAgIH0KICB9CiAgcmV0dXJuIGJlc3RNZWRvaWRzOwp9"},{"version":3,"names":["_pubMethods","_interopRequireDefault","require","clarans","data","k","numLocal","maxNeighbor","calculateTotalCost","medoids","totalCost","forEach","point","minDist","Infinity","medoid","dist","calculateDistance","initializeMedoids","usedIndices","Set","length","index","Math","floor","random","has","push","add","bestMedoids","bestCost","i","currentMedoids","currentCost","neighborCounter","randomMedoidIndex","randomNonMedoidIndex","newMedoids","slice","newCost"],"sources":["E:/workspacevsCode/web-ui-travel/src/views/AMyWork/tools/algo/clarans.js"],"sourcesContent":["import calculateDistance from './pubMethods'\r\nexport function clarans(data, k, numLocal, maxNeighbor) {\r\n    // 计算聚类结果的总成本\r\n    function calculateTotalCost(data, medoids) {\r\n        let totalCost = 0;\r\n        data.forEach(point => {\r\n            let minDist = Infinity;\r\n            medoids.forEach(medoid => {\r\n                const dist = calculateDistance(point, medoid);\r\n                if (dist < minDist) {\r\n                    minDist = dist;\r\n                }\r\n            });\r\n            totalCost += minDist;\r\n        });\r\n        return totalCost;\r\n    }\r\n\r\n    // 初始化medoids\r\n    function initializeMedoids(data, k) {\r\n        const medoids = [];\r\n        const usedIndices = new Set();\r\n        while (medoids.length < k) {\r\n            const index = Math.floor(Math.random() * data.length);\r\n            if (!usedIndices.has(index)) {\r\n                medoids.push(data[index]);\r\n                usedIndices.add(index);\r\n            }\r\n        }\r\n        return medoids;\r\n    }\r\n\r\n    // CLARANS算法主函数\r\n    let bestMedoids = initializeMedoids(data, k);\r\n    let bestCost = calculateTotalCost(data, bestMedoids);\r\n\r\n    for (let i = 0; i < numLocal; i++) {\r\n        let currentMedoids = initializeMedoids(data, k);\r\n        let currentCost = calculateTotalCost(data, currentMedoids);\r\n        let neighborCounter = 0;\r\n\r\n        while (neighborCounter < maxNeighbor) {\r\n            // 随机选择一个medoid并尝试替换\r\n            const randomMedoidIndex = Math.floor(Math.random() * k);\r\n            const randomNonMedoidIndex = Math.floor(Math.random() * data.length);\r\n\r\n            const newMedoids = currentMedoids.slice();\r\n            newMedoids[randomMedoidIndex] = data[randomNonMedoidIndex];\r\n\r\n            const newCost = calculateTotalCost(data, newMedoids);\r\n\r\n            if (newCost < currentCost) {\r\n                currentMedoids = newMedoids;\r\n                currentCost = newCost;\r\n                neighborCounter = 0; // 重置neighbor计数器\r\n            } else {\r\n                neighborCounter++;\r\n            }\r\n        }\r\n\r\n        if (currentCost < bestCost) {\r\n            bestMedoids = currentMedoids;\r\n            bestCost = currentCost;\r\n        }\r\n    }\r\n\r\n    return bestMedoids;\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;AAAA,IAAAA,WAAA,GAAAC,sBAAA,CAAAC,OAAA;AACO,SAASC,OAAOA,CAACC,IAAI,EAAEC,CAAC,EAAEC,QAAQ,EAAEC,WAAW,EAAE;EACpD;EACA,SAASC,kBAAkBA,CAACJ,IAAI,EAAEK,OAAO,EAAE;IACvC,IAAIC,SAAS,GAAG,CAAC;IACjBN,IAAI,CAACO,OAAO,CAAC,UAAAC,KAAK,EAAI;MAClB,IAAIC,OAAO,GAAGC,QAAQ;MACtBL,OAAO,CAACE,OAAO,CAAC,UAAAI,MAAM,EAAI;QACtB,IAAMC,IAAI,GAAG,IAAAC,mBAAiB,EAACL,KAAK,EAAEG,MAAM,CAAC;QAC7C,IAAIC,IAAI,GAAGH,OAAO,EAAE;UAChBA,OAAO,GAAGG,IAAI;QAClB;MACJ,CAAC,CAAC;MACFN,SAAS,IAAIG,OAAO;IACxB,CAAC,CAAC;IACF,OAAOH,SAAS;EACpB;;EAEA;EACA,SAASQ,iBAAiBA,CAACd,IAAI,EAAEC,CAAC,EAAE;IAChC,IAAMI,OAAO,GAAG,EAAE;IAClB,IAAMU,WAAW,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC7B,OAAOX,OAAO,CAACY,MAAM,GAAGhB,CAAC,EAAE;MACvB,IAAMiB,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGrB,IAAI,CAACiB,MAAM,CAAC;MACrD,IAAI,CAACF,WAAW,CAACO,GAAG,CAACJ,KAAK,CAAC,EAAE;QACzBb,OAAO,CAACkB,IAAI,CAACvB,IAAI,CAACkB,KAAK,CAAC,CAAC;QACzBH,WAAW,CAACS,GAAG,CAACN,KAAK,CAAC;MAC1B;IACJ;IACA,OAAOb,OAAO;EAClB;;EAEA;EACA,IAAIoB,WAAW,GAAGX,iBAAiB,CAACd,IAAI,EAAEC,CAAC,CAAC;EAC5C,IAAIyB,QAAQ,GAAGtB,kBAAkB,CAACJ,IAAI,EAAEyB,WAAW,CAAC;EAEpD,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGzB,QAAQ,EAAEyB,CAAC,EAAE,EAAE;IAC/B,IAAIC,cAAc,GAAGd,iBAAiB,CAACd,IAAI,EAAEC,CAAC,CAAC;IAC/C,IAAI4B,WAAW,GAAGzB,kBAAkB,CAACJ,IAAI,EAAE4B,cAAc,CAAC;IAC1D,IAAIE,eAAe,GAAG,CAAC;IAEvB,OAAOA,eAAe,GAAG3B,WAAW,EAAE;MAClC;MACA,IAAM4B,iBAAiB,GAAGZ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGpB,CAAC,CAAC;MACvD,IAAM+B,oBAAoB,GAAGb,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGrB,IAAI,CAACiB,MAAM,CAAC;MAEpE,IAAMgB,UAAU,GAAGL,cAAc,CAACM,KAAK,CAAC,CAAC;MACzCD,UAAU,CAACF,iBAAiB,CAAC,GAAG/B,IAAI,CAACgC,oBAAoB,CAAC;MAE1D,IAAMG,OAAO,GAAG/B,kBAAkB,CAACJ,IAAI,EAAEiC,UAAU,CAAC;MAEpD,IAAIE,OAAO,GAAGN,WAAW,EAAE;QACvBD,cAAc,GAAGK,UAAU;QAC3BJ,WAAW,GAAGM,OAAO;QACrBL,eAAe,GAAG,CAAC,CAAC,CAAC;MACzB,CAAC,MAAM;QACHA,eAAe,EAAE;MACrB;IACJ;IAEA,IAAID,WAAW,GAAGH,QAAQ,EAAE;MACxBD,WAAW,GAAGG,cAAc;MAC5BF,QAAQ,GAAGG,WAAW;IAC1B;EACJ;EAEA,OAAOJ,WAAW;AACtB","ignoreList":[]}]}