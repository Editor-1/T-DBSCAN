{"remainingRequest":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\babel-loader\\lib\\index.js!E:\\workspacevsCode\\web-ui-travel\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\workspacevsCode\\web-ui-travel\\src\\views\\AMyWork\\tools\\algo\\optics.js","dependencies":[{"path":"E:\\workspacevsCode\\web-ui-travel\\src\\views\\AMyWork\\tools\\algo\\optics.js","mtime":1726234180037},{"path":"E:\\workspacevsCode\\web-ui-travel\\babel.config.js","mtime":1677117676000},{"path":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1720856214296}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJFOi93b3Jrc3BhY2V2c0NvZGUvd2ViLXVpLXRyYXZlbC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQuanMiKS5kZWZhdWx0OwpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMub3B0aWNzID0gb3B0aWNzOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbC5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zb3J0LmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5zZXQuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyIpOwp2YXIgX3B1Yk1ldGhvZHMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4vcHViTWV0aG9kcyIpKTsKZnVuY3Rpb24gb3B0aWNzKGRhdGEsIGVwcywgbWluUHRzKSB7CiAgLy8g5p+l5om+6YK75Z+f55qE6L6F5Yqp5Ye95pWwCiAgZnVuY3Rpb24gcmVnaW9uUXVlcnkoZGF0YSwgcG9pbnQsIGVwcykgewogICAgdmFyIG5laWdoYm9ycyA9IFtdOwogICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChwLCBpbmRleCkgewogICAgICBpZiAoKDAsIF9wdWJNZXRob2RzLmRlZmF1bHQpKHBvaW50LCBwKSA8PSBlcHMgKiAxMDAwKSB7CiAgICAgICAgLy8g5bCGIGVwcyDovazmjaLkuLrnsbMKICAgICAgICBuZWlnaGJvcnMucHVzaChpbmRleCk7CiAgICAgIH0KICAgIH0pOwogICAgcmV0dXJuIG5laWdoYm9yczsKICB9CgogIC8vIOiuoeeul+aguOW/g+i3neemu+eahOi+heWKqeWHveaVsAogIGZ1bmN0aW9uIGNvcmVEaXN0YW5jZShwb2ludCwgbmVpZ2hib3JzLCBtaW5QdHMpIHsKICAgIGlmIChuZWlnaGJvcnMubGVuZ3RoID49IG1pblB0cykgewogICAgICB2YXIgc29ydGVkRGlzdGFuY2VzID0gbmVpZ2hib3JzLm1hcChmdW5jdGlvbiAoaW5kZXgpIHsKICAgICAgICByZXR1cm4gKDAsIF9wdWJNZXRob2RzLmRlZmF1bHQpKHBvaW50LCBkYXRhW2luZGV4XSk7CiAgICAgIH0pLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICByZXR1cm4gYSAtIGI7CiAgICAgIH0pOwogICAgICByZXR1cm4gc29ydGVkRGlzdGFuY2VzW21pblB0cyAtIDFdOwogICAgfQogICAgcmV0dXJuIG51bGw7CiAgfQogIHZhciBudW0gPSBkYXRhLmxlbmd0aDsKICB2YXIgY29yZVBvaW50cyA9IFtdOwogIHZhciB2aXNpdGVkID0gQXJyYXkobnVtKS5maWxsKGZhbHNlKTsKCiAgLy8g5omp5bGV57CH55qE6L6F5Yqp5Ye95pWwCiAgZnVuY3Rpb24gcHJvY2Vzc1BvaW50KHBvaW50SW5kZXgpIHsKICAgIHZhciBuZWlnaGJvcnMgPSByZWdpb25RdWVyeShkYXRhLCBkYXRhW3BvaW50SW5kZXhdLCBlcHMpOwogICAgaWYgKG5laWdoYm9ycy5sZW5ndGggPj0gbWluUHRzKSB7CiAgICAgIHZhciBjb3JlRGlzdCA9IGNvcmVEaXN0YW5jZShkYXRhW3BvaW50SW5kZXhdLCBuZWlnaGJvcnMsIG1pblB0cyk7CiAgICAgIGlmIChjb3JlRGlzdCAhPT0gbnVsbCkgewogICAgICAgIGNvcmVQb2ludHMucHVzaChkYXRhW3BvaW50SW5kZXhdKTsKICAgICAgfQogICAgICB2YXIgc2VlZHMgPSBuZXcgU2V0KG5laWdoYm9ycyk7CiAgICAgIHNlZWRzLmRlbGV0ZShwb2ludEluZGV4KTsKICAgICAgdmFyIF9sb29wID0gZnVuY3Rpb24gX2xvb3AoKSB7CiAgICAgICAgdmFyIGN1cnJlbnQgPSBzZWVkcy52YWx1ZXMoKS5uZXh0KCkudmFsdWU7CiAgICAgICAgc2VlZHMuZGVsZXRlKGN1cnJlbnQpOwogICAgICAgIGlmICghdmlzaXRlZFtjdXJyZW50XSkgewogICAgICAgICAgdmlzaXRlZFtjdXJyZW50XSA9IHRydWU7CiAgICAgICAgICB2YXIgY3VycmVudE5laWdoYm9ycyA9IHJlZ2lvblF1ZXJ5KGRhdGEsIGRhdGFbY3VycmVudF0sIGVwcyk7CiAgICAgICAgICBpZiAoY3VycmVudE5laWdoYm9ycy5sZW5ndGggPj0gbWluUHRzKSB7CiAgICAgICAgICAgIHZhciBjdXJyZW50Q29yZURpc3QgPSBjb3JlRGlzdGFuY2UoZGF0YVtjdXJyZW50XSwgY3VycmVudE5laWdoYm9ycywgbWluUHRzKTsKICAgICAgICAgICAgaWYgKGN1cnJlbnRDb3JlRGlzdCAhPT0gbnVsbCkgewogICAgICAgICAgICAgIGNvcmVQb2ludHMucHVzaChkYXRhW2N1cnJlbnRdKTsKICAgICAgICAgICAgICBjdXJyZW50TmVpZ2hib3JzLmZvckVhY2goZnVuY3Rpb24gKG5laWdoYm9yKSB7CiAgICAgICAgICAgICAgICBpZiAoIXZpc2l0ZWRbbmVpZ2hib3JdKSB7CiAgICAgICAgICAgICAgICAgIGlmICgoMCwgX3B1Yk1ldGhvZHMuZGVmYXVsdCkoZGF0YVtjdXJyZW50XSwgZGF0YVtuZWlnaGJvcl0pIDw9IGVwcyAqIDEwMDApIHsKICAgICAgICAgICAgICAgICAgICBzZWVkcy5hZGQobmVpZ2hib3IpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH07CiAgICAgIHdoaWxlIChzZWVkcy5zaXplID4gMCkgewogICAgICAgIF9sb29wKCk7CiAgICAgIH0KICAgIH0KICB9CiAgZm9yICh2YXIgaSA9IDA7IGkgPCBudW07IGkrKykgewogICAgaWYgKCF2aXNpdGVkW2ldKSB7CiAgICAgIHZpc2l0ZWRbaV0gPSB0cnVlOwogICAgICBwcm9jZXNzUG9pbnQoaSk7CiAgICB9CiAgfQogIHJldHVybiBjb3JlUG9pbnRzOwp9"},{"version":3,"names":["_pubMethods","_interopRequireDefault","require","optics","data","eps","minPts","regionQuery","point","neighbors","forEach","p","index","calculateDistance","push","coreDistance","length","sortedDistances","map","sort","a","b","num","corePoints","visited","Array","fill","processPoint","pointIndex","coreDist","seeds","Set","delete","_loop","current","values","next","value","currentNeighbors","currentCoreDist","neighbor","add","size","i"],"sources":["E:/workspacevsCode/web-ui-travel/src/views/AMyWork/tools/algo/optics.js"],"sourcesContent":["import calculateDistance from './pubMethods'\r\nexport function optics(data, eps, minPts) {\r\n    \r\n    // 查找邻域的辅助函数\r\n    function regionQuery(data, point, eps) {\r\n        const neighbors = [];\r\n        data.forEach((p, index) => {\r\n            if (calculateDistance(point, p) <= eps * 1000) { // 将 eps 转换为米\r\n                neighbors.push(index);\r\n            }\r\n        });\r\n        return neighbors;\r\n    }\r\n\r\n    // 计算核心距离的辅助函数\r\n    function coreDistance(point, neighbors, minPts) {\r\n        if (neighbors.length >= minPts) {\r\n            const sortedDistances = neighbors\r\n                .map(index => calculateDistance(point, data[index]))\r\n                .sort((a, b) => a - b);\r\n            return sortedDistances[minPts - 1];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    const num = data.length;\r\n    const corePoints = [];\r\n    const visited = Array(num).fill(false);\r\n\r\n    // 扩展簇的辅助函数\r\n    function processPoint(pointIndex) {\r\n        const neighbors = regionQuery(data, data[pointIndex], eps);\r\n\r\n        if (neighbors.length >= minPts) {\r\n            const coreDist = coreDistance(data[pointIndex], neighbors, minPts);\r\n            if (coreDist !== null) {\r\n                corePoints.push(data[pointIndex]);\r\n            }\r\n\r\n            const seeds = new Set(neighbors);\r\n            seeds.delete(pointIndex);\r\n\r\n            while (seeds.size > 0) {\r\n                const current = seeds.values().next().value;\r\n                seeds.delete(current);\r\n\r\n                if (!visited[current]) {\r\n                    visited[current] = true;\r\n                    const currentNeighbors = regionQuery(data, data[current], eps);\r\n\r\n                    if (currentNeighbors.length >= minPts) {\r\n                        const currentCoreDist = coreDistance(data[current], currentNeighbors, minPts);\r\n                        if (currentCoreDist !== null) {\r\n                            corePoints.push(data[current]);\r\n                            currentNeighbors.forEach(neighbor => {\r\n                                if (!visited[neighbor]) {\r\n                                    if (calculateDistance(data[current], data[neighbor]) <= eps * 1000) {\r\n                                        seeds.add(neighbor);\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < num; i++) {\r\n        if (!visited[i]) {\r\n            visited[i] = true;\r\n            processPoint(i);\r\n        }\r\n    }\r\n\r\n    return corePoints;\r\n}\r\n"],"mappings":"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","ignoreList":[]}]}