{"remainingRequest":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\babel-loader\\lib\\index.js!E:\\workspacevsCode\\web-ui-travel\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\workspacevsCode\\web-ui-travel\\src\\views\\AMyWork\\tools\\algo\\tdbscan.js","dependencies":[{"path":"E:\\workspacevsCode\\web-ui-travel\\src\\views\\AMyWork\\tools\\algo\\tdbscan.js","mtime":1722305685897},{"path":"E:\\workspacevsCode\\web-ui-travel\\babel.config.js","mtime":1677117676000},{"path":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1720856214296}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["fs","require","EARTH_RADIUS","MAX_DEPTH","Region","_createClass2","default","up","bottom","left","right","_classCallCheck2","ElePoint","lat","lng","time","index","QuadTreeNode","depth","region","is_leaf","LU","LB","RU","RB","ele_num","ele_list","Point","lon","deg2rad","deg","Math","PI","haversine","p1","p2","dLat","dLng","a","sin","cos","c","atan2","sqrt","cal_time_dis","time_dis","abs","timestamp","insertEle","node","ele","console","error","splitNode","push","mid_vertical","mid_horizontal","createChildNode","childNode","i","isInRange","center","point","radius","queryEle","results","result_count","j","cross","O","A","B","convexHull","points","n","length","hull","Array","peak","sort","b","k","t","tdbscan","EPS","MinTime","maxTime","data","arr","mp","Map","CorePoints","mmp","peaks","peakmap","root_region","root","forEach","item","_item","_slicedToArray2","ep","visited","fill","unvisited","from","_","set","p","shift","EpsResults","max_stay_time","vis_temp","vis_index","q","EpsResults2","point2","result_count2","vis_temp2","q2","peak2","has","_iterator","_createForOfIteratorHelper2","keys","_step","s","done","key","value","err","e","f","clear","convertDateStringToUnix","dateString","date","Date","getTime"],"sources":["E:/workspacevsCode/web-ui-travel/src/views/AMyWork/tools/algo/tdbscan.js"],"sourcesContent":["const fs = require('fs');\r\n\r\nconst EARTH_RADIUS = 6371.0087455872; // Earth radius in kilometers\r\nconst MAX_DEPTH = 1000; // Maximum recursion depth limit\r\n\r\nclass Region {\r\n    constructor(up, bottom, left, right) {\r\n        this.up = up;\r\n        this.bottom = bottom;\r\n        this.left = left;\r\n        this.right = right;\r\n    }\r\n}\r\n\r\nclass ElePoint {\r\n    constructor(lat, lng, time, index) {\r\n        this.lat = lat; // Latitude\r\n        this.lng = lng; // Longitude\r\n        this.time = time; // Time\r\n        this.index = index; // Index\r\n    }\r\n}\r\n\r\nclass QuadTreeNode {\r\n    constructor(depth, region) {\r\n        this.depth = depth;\r\n        this.is_leaf = true;\r\n        this.region = region;\r\n        this.LU = null; // Left-upper child node pointer\r\n        this.LB = null; // Left-bottom child node pointer\r\n        this.RU = null; // Right-upper child node pointer\r\n        this.RB = null; // Right-bottom child node pointer\r\n        this.ele_num = 0; // Number of location points\r\n        this.ele_list = []; // List of location points\r\n    }\r\n}\r\n\r\nclass Point {\r\n    constructor(lat, lon, index) {\r\n        this.lat = lat;\r\n        this.lon = lon;\r\n        this.index = index;\r\n    }\r\n}\r\n\r\nfunction deg2rad(deg) {\r\n    return deg * (Math.PI / 180);\r\n}\r\n\r\nfunction haversine(p1, p2) {\r\n    const dLat = deg2rad(p2.lat - p1.lat);\r\n    const dLng = deg2rad(p2.lng - p1.lng);\r\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n        Math.cos(deg2rad(p1.lat)) * Math.cos(deg2rad(p2.lat)) *\r\n        Math.sin(dLng / 2) * Math.sin(dLng / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    return EARTH_RADIUS * c;\r\n}\r\n\r\nfunction cal_time_dis(p1, p2) {\r\n    const time_dis = Math.abs(p1.timestamp - p2.timestamp) / 86400;\r\n    return time_dis;\r\n}\r\n\r\nfunction insertEle(node, ele) {\r\n    if (node.depth > MAX_DEPTH) {\r\n        console.error(\"Exceeded maximum depth\");\r\n        return;\r\n    }\r\n\r\n    if (node.is_leaf) {\r\n        if (node.ele_num >= 90) {\r\n            splitNode(node);\r\n            insertEle(node, ele);\r\n        } else {\r\n            node.ele_list.push(ele);\r\n            node.ele_num++;\r\n        }\r\n        return;\r\n    }\r\n\r\n    const mid_vertical = (node.region.up + node.region.bottom) / 2;\r\n    const mid_horizontal = (node.region.left + node.region.right) / 2;\r\n\r\n    if (ele.lat > mid_vertical) {\r\n        if (ele.lng > mid_horizontal) {\r\n            insertEle(node.RU, ele);\r\n        } else {\r\n            insertEle(node.LU, ele);\r\n        }\r\n    } else {\r\n        if (ele.lng > mid_horizontal) {\r\n            insertEle(node.RB, ele);\r\n        } else {\r\n            insertEle(node.LB, ele);\r\n        }\r\n    }\r\n}\r\n\r\nfunction createChildNode(node, bottom, up, left, right) {\r\n    const depth = node.depth + 1;\r\n    const region = new Region(up, bottom, left, right);\r\n    const childNode = new QuadTreeNode(depth, region);\r\n    return childNode;\r\n}\r\n\r\nfunction splitNode(node) {\r\n    const mid_vertical = (node.region.up + node.region.bottom) / 2;\r\n    const mid_horizontal = (node.region.left + node.region.right) / 2;\r\n\r\n    node.is_leaf = false;\r\n    node.RU = createChildNode(node, mid_vertical, node.region.up, mid_horizontal, node.region.right);\r\n    node.LU = createChildNode(node, mid_vertical, node.region.up, node.region.left, mid_horizontal);\r\n    node.RB = createChildNode(node, node.region.bottom, mid_vertical, mid_horizontal, node.region.right);\r\n    node.LB = createChildNode(node, node.region.bottom, mid_vertical, node.region.left, mid_horizontal);\r\n\r\n    for (let i = 0; i < node.ele_num; i++) {\r\n        insertEle(node, node.ele_list[i]);\r\n    }\r\n    node.ele_num = 0; // Reset count\r\n}\r\n\r\nfunction isInRange(center, point, radius) {\r\n    return haversine(center, point) <= radius;\r\n}\r\n\r\nfunction queryEle(node, center, radius, results, result_count) {\r\n    if (node.depth > MAX_DEPTH) {\r\n        console.error(\"Exceeded maximum depth\");\r\n        return;\r\n    }\r\n\r\n    if (node.is_leaf) {\r\n        for (let j = 0; j < node.ele_num; j++) {\r\n            if (isInRange(center, node.ele_list[j], radius)) {\r\n                results[result_count[0]] = node.ele_list[j];\r\n                result_count[0]++;\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    const mid_vertical = (node.region.up + node.region.bottom) / 2;\r\n    const mid_horizontal = (node.region.left + node.region.right) / 2;\r\n\r\n    if (center.lat + radius > mid_vertical) {\r\n        if (center.lng + radius > mid_horizontal) {\r\n            queryEle(node.RU, center, radius, results, result_count);\r\n        }\r\n        if (center.lng - radius < mid_horizontal) {\r\n            queryEle(node.LU, center, radius, results, result_count);\r\n        }\r\n    }\r\n    if (center.lat - radius < mid_vertical) {\r\n        if (center.lng + radius > mid_horizontal) {\r\n            queryEle(node.RB, center, radius, results, result_count);\r\n        }\r\n        if (center.lng - radius < mid_horizontal) {\r\n            queryEle(node.LB, center, radius, results, result_count);\r\n        }\r\n    }\r\n}\r\n\r\nfunction cross(O, A, B) {\r\n    return (A.lon - O.lon) * (B.lat - O.lat) - (A.lat - O.lat) * (B.lon - O.lon);\r\n}\r\n\r\nfunction convexHull(points) {\r\n    const n = points.length;\r\n    const hull = new Array(2 * n);\r\n    const peak = [];\r\n\r\n    if (n <= 3) {\r\n        for (let i = 0; i < n; i++) peak.push(points[i].index);\r\n        return peak;\r\n    }\r\n\r\n    points.sort((a, b) => a.lon < b.lon || (a.lon === b.lon && a.lat < b.lat));\r\n\r\n    let k = 0;\r\n    for (let i = 0; i < n; ++i) {\r\n        while (k >= 2 && cross(hull[k - 2], hull[k - 1], points[i]) <= 0) k--;\r\n        hull[k++] = points[i];\r\n    }\r\n\r\n    for (let i = n - 1, t = k + 1; i > 0; --i) {\r\n        while (k >= t && cross(hull[k - 2], hull[k - 1], points[i - 1]) <= 0) k--;\r\n        hull[k++] = points[i - 1];\r\n    }\r\n\r\n    for (let i = 0; i < k - 1; i++) {\r\n        peak.push(hull[i].index);\r\n    }\r\n\r\n    return peak;\r\n}\r\n\r\nexport function tdbscan(EPS, MinTime, maxTime, data) {\r\n    const arr = [];\r\n    const mp = new Map(); // Statistical clustering result set\r\n    const CorePoints = [];\r\n    const mmp = new Map(); // Delete unused aggregation points | Points already in N\r\n    const peaks = []; // Top corner\r\n    const peakmap = new Map(); // Mark\r\n\r\n    const root_region = new Region(-90, 90, -180, 180);\r\n    const root = new QuadTreeNode(0, root_region);\r\n\r\n    data.forEach((item, i) => {\r\n        const [lat, lng, time] = item;\r\n        const ep = new ElePoint(lat, lng, time, i);\r\n        arr.push({ index: i, lat, lng, timestamp: time });\r\n        insertEle(root, ep);\r\n    });\r\n\r\n    const visited = new Array(data.length).fill(0);\r\n    const unvisited = Array.from({ length: data.length }, (_, i) => i);\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n        mp.set(i, -1);\r\n    }\r\n\r\n    let k = -1;\r\n    while (unvisited.length > 0) {\r\n        const p = arr[unvisited[0]];\r\n        visited[unvisited[0]] = 1;\r\n        unvisited.shift(); // Mark as visited, remove from unvisited\r\n\r\n        const EpsResults = [];\r\n        const point = new ElePoint(p.lat, p.lng, p.timestamp, p.index);\r\n        let max_stay_time = 0;\r\n        const result_count = [0];\r\n        queryEle(root, point, EPS, EpsResults, result_count);\r\n\r\n        const vis_temp = [];\r\n        for (let i = 0; i < EpsResults.length; i++) {\r\n            const p2 = EpsResults[i];\r\n            const time_dis = cal_time_dis(p, arr[p2.index]);\r\n            if (time_dis <= maxTime && time_dis >= MinTime) {\r\n                vis_temp.push(arr[p2.index]);\r\n            }\r\n        }\r\n\r\n        if (vis_temp.length === 0) continue;\r\n\r\n        let peak = convexHull(vis_temp);\r\n\r\n        for (let i = 0; i < peak.length; i++) {\r\n            const vis_index = peak[i];\r\n            peakmap.set(vis_index, true);\r\n            mmp.set(vis_index, true);\r\n        }\r\n\r\n        let q;\r\n        while (peak.length > 0) {\r\n            q = arr[peak[0]];\r\n            peak.shift(); // Mark as visited, remove from peak\r\n\r\n            const EpsResults2 = [];\r\n            const point2 = new ElePoint(q.lat, q.lng, q.timestamp, q.index);\r\n            const result_count2 = [0];\r\n            queryEle(root, point2, EPS, EpsResults2, result_count2);\r\n\r\n            const vis_temp2 = [];\r\n            for (let i = 0; i < EpsResults2.length; i++) {\r\n                const q2 = EpsResults2[i];\r\n                const time_dis = cal_time_dis(q, arr[q2.index]);\r\n                if (time_dis <= maxTime && time_dis >= MinTime) {\r\n                    vis_temp2.push(arr[q2.index]);\r\n                }\r\n            }\r\n\r\n            let peak2 = convexHull(vis_temp2);\r\n\r\n            for (let i = 0; i < peak2.length; i++) {\r\n                const vis_index = peak2[i];\r\n                if (!peakmap.has(vis_index)) {\r\n                    peakmap.set(vis_index, true);\r\n                    peak.push(vis_index)\r\n                }\r\n                mmp.set(vis_index, true)\r\n            }\r\n\r\n            if (max_stay_time < cal_time_dis(point, point2)) max_stay_time = cal_time_dis(point, point2)\r\n        }\r\n\r\n        if (max_stay_time >= MinTime) {\r\n            k++;\r\n            CorePoints.push(point);\r\n            for (const key of mmp.keys()) {\r\n                mp.set(key, k);\r\n            }\r\n        }\r\n\r\n        mmp.clear();\r\n        peaks.length = 0;\r\n        peakmap.clear();\r\n    }\r\n\r\n    return CorePoints;\r\n}\r\nexport function convertDateStringToUnix(dateString) {  \r\n    // 尝试使用 Date 构造函数解析日期字符串  \r\n    const date = new Date(dateString)\r\n    // 返回 Unix 时间戳（毫秒）  \r\n    return date.getTime()/1000\r\n}  "],"mappings":"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","ignoreList":[]}]}