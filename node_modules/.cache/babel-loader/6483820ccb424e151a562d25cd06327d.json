{"remainingRequest":"E:\\GitProject\\T-DBSCAN\\node_modules\\babel-loader\\lib\\index.js!E:\\GitProject\\T-DBSCAN\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\GitProject\\T-DBSCAN\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\GitProject\\T-DBSCAN\\src\\views\\AMyWork\\tools\\poi\\PoiPanel.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\GitProject\\T-DBSCAN\\src\\views\\AMyWork\\tools\\poi\\PoiPanel.vue","mtime":1726795150405},{"path":"E:\\GitProject\\T-DBSCAN\\babel.config.js","mtime":1677117676000},{"path":"E:\\GitProject\\T-DBSCAN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\GitProject\\T-DBSCAN\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\GitProject\\T-DBSCAN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\GitProject\\T-DBSCAN\\node_modules\\vue-loader\\lib\\index.js","mtime":1720856215506}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkID0gcmVxdWlyZSgiRTovR2l0UHJvamVjdC9ULURCU0NBTi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkLmpzIikuZGVmYXVsdDsKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJFOi9HaXRQcm9qZWN0L1QtREJTQ0FOL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwOwp2YXIgX3NsaWNlZFRvQXJyYXkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJFOi9HaXRQcm9qZWN0L1QtREJTQ0FOL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3NsaWNlZFRvQXJyYXkuanMiKSk7CnZhciBfcmVnZW5lcmF0b3JSdW50aW1lMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiRTovR2l0UHJvamVjdC9ULURCU0NBTi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9yZWdlbmVyYXRvclJ1bnRpbWUuanMiKSk7CnZhciBfYXN5bmNUb0dlbmVyYXRvcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkU6L0dpdFByb2plY3QvVC1EQlNDQU4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvci5qcyIpKTsKdmFyIF90b0NvbnN1bWFibGVBcnJheTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkU6L0dpdFByb2plY3QvVC1EQlNDQU4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdG9Db25zdW1hYmxlQXJyYXkuanMiKSk7CnZhciBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkU6L0dpdFByb2plY3QvVC1EQlNDQU4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlci5qcyIpKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmVycm9yLmNhdXNlLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQtaW5kZXguanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnB1c2guanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNvcnQuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZS5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLnRvLWZpeGVkLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIik7CnZhciBfbGVhZmxldCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgibGVhZmxldCIpKTsKcmVxdWlyZSgibGVhZmxldC1tYXJrZXJzLWNhbnZhcyIpOwpyZXF1aXJlKCJsZWFmbGV0Lm1hcmtlcmNsdXN0ZXIvZGlzdC9sZWFmbGV0Lm1hcmtlcmNsdXN0ZXIiKTsKcmVxdWlyZSgibGVhZmxldC5tYXJrZXJjbHVzdGVyL2Rpc3QvTWFya2VyQ2x1c3Rlci5jc3MiKTsKcmVxdWlyZSgibGVhZmxldC5tYXJrZXJjbHVzdGVyL2Rpc3QvTWFya2VyQ2x1c3Rlci5EZWZhdWx0LmNzcyIpOwpyZXF1aXJlKCJsZWFmbGV0LWNhbnZhcy1tYXJrZXIiKTsKdmFyIF9wYXBhcGFyc2UgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInBhcGFwYXJzZSIpKTsKdmFyIF9heGlvcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiYXhpb3MiKSk7CnZhciBfRHJhd1BvaSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi9EcmF3UG9pIikpOwp2YXIgX0RyYXdOZXdQb2kgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4vRHJhd05ld1BvaSIpKTsKdmFyIEZpbGVTYXZlID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgiLi9GaWxlU2F2ZSIpKTsKdmFyIF9jb21tb24gPSByZXF1aXJlKCIuLi9iaXovY29tbW9uIik7CnZhciBfSWNvbnNEaWFsb2cgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4uLy4uLy4uL3Rvb2wvYnVpbGQvSWNvbnNEaWFsb2cudnVlIikpOwpyZXF1aXJlKCJsZWFmbGV0L2Rpc3QvbGVhZmxldC5jc3MiKTsKdmFyIF9Eb3VnbGFzUGV1a2VyID0gcmVxdWlyZSgiLi4vYWxnby9Eb3VnbGFzUGV1a2VyIik7CnZhciBfa21lYW5zID0gcmVxdWlyZSgiLi4vYWxnby9rbWVhbnMiKTsKdmFyIF9jbGFyYW5zID0gcmVxdWlyZSgiLi4vYWxnby9jbGFyYW5zIik7CnZhciBfZGJzY2FuID0gcmVxdWlyZSgiLi4vYWxnby9kYnNjYW4iKTsKdmFyIF9vcHRpY3MgPSByZXF1aXJlKCIuLi9hbGdvL29wdGljcyIpOwp2YXIgX3B1Yk1ldGhvZHMgPSByZXF1aXJlKCIuLi9hbGdvL3B1Yk1ldGhvZHMiKTsKdmFyIF90ZGJzY2FuMiA9IHJlcXVpcmUoIi4uL2FsZ28vdGRic2NhbiIpOwp2YXIgUGF0aExheWVyID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgiLi4vY29tbS9QYXRoTGF5ZXIiKSk7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCgovLyDlvJXlhaVMZWFmbGV05bqTCgp2YXIgcG9pbnRlckltZyA9IHJlcXVpcmUoJ0AvYXNzZXRzL2ltYWdlcy9sb2NhdGlvbjY0LnBuZycpOwp2YXIgY2x1UG9pbnRJbWcgPSByZXF1aXJlKCdAL2Fzc2V0cy9pbWFnZXMvcG9pbnQucG5nJyk7CnZhciBjbHVDZW50ZXJQb2ludEltZyA9IHJlcXVpcmUoJ0AvYXNzZXRzL2ltYWdlcy9jZW50ZXJQb2ludC5wbmcnKTsKLy8g5a6a5LmJIGRyYXdQb2kg5Y+Y6YePCnZhciBkcmF3TmV3UG9pOwp2YXIgZHJhd1BvaTsKdmFyIHByZXZpb3VzTGF5ZXJzID0gW107CnZhciBtYXJrZXJzTGlzdCA9IFtdOwp2YXIgbWFya2Vyc0NhbnZhczsKdmFyIF9kZWZhdWx0ID0gZXhwb3J0cy5kZWZhdWx0ID0gewogIGNvbXBvbmVudHM6IHsKICAgIEljb25zRGlhbG9nOiBfSWNvbnNEaWFsb2cuZGVmYXVsdAogIH0sCiAgbmFtZTogJ1BvaVBhbmVsJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VsZWN0Y2x1ZGF0YTogJycsCiAgICAgIC8v54Gw6bmkCiAgICAgIGdyZXlDcmFuZTogW10sCiAgICAgIC8v5bCP5aSp6bmFCiAgICAgIGN5Z25lOiBbXSwKICAgICAgLy8g6bif57G7MQogICAgICBiaXJkT25lOiBbXSwKICAgICAgLy8g6bif57G7MgogICAgICBiaXJkVHdvOiBbXSwKICAgICAgLy8g5pWw5o2u5qih5byPCiAgICAgIHBhdHRlcm46IDIsCiAgICAgIC8vIOWHoOS9leexu+WeiwogICAgICBnZW9tZXRyaWNUeXBlOiAxLAogICAgICAvLyDogZrlkIjnrpfms5UKICAgICAgY2x1c3RlclN0eWxlOiAnJywKICAgICAgLy/mnIDlpKflgZznlZnml7bplb8KICAgICAgbWF4c3RheVRpbWU6ICcnLAogICAgICAvL+acgOefreWBnOeVmeaXtumVvwogICAgICBtaW5zdGF5VGltZTogJycsCiAgICAgIC8v6IGa5ZCI5pa55byPCiAgICAgIGNsdXN0ZXJTdHlsZU9wdGlvbnM6IFt7CiAgICAgICAgdmFsdWU6IDEsCiAgICAgICAgbGFiZWw6ICdDTEFSQU5TJwogICAgICB9LCB7CiAgICAgICAgdmFsdWU6IDIsCiAgICAgICAgbGFiZWw6ICdLLU1lYW5zJwogICAgICB9LCB7CiAgICAgICAgdmFsdWU6IDMsCiAgICAgICAgbGFiZWw6ICdEQlNDQU4nCiAgICAgIH0sIHsKICAgICAgICB2YWx1ZTogNCwKICAgICAgICBsYWJlbDogJ09QVElDUycKICAgICAgfSwgewogICAgICAgIHZhbHVlOiA1LAogICAgICAgIGxhYmVsOiAnVC1EQlNDQU4nCiAgICAgIH1dLAogICAgICAvLyDogZrlkIjmlbDmja4KICAgICAgY2x1c3RlckRhdGFPcHRpb25zOiBbewogICAgICAgIHZhbHVlOiAwLAogICAgICAgIGxhYmVsOiAn54Gw6bmkJwogICAgICB9LCB7CiAgICAgICAgdmFsdWU6IDEsCiAgICAgICAgbGFiZWw6ICflsI/lpKnpuYUnCiAgICAgIH0sIHsKICAgICAgICB2YWx1ZTogMiwKICAgICAgICBsYWJlbDogJ+m4n+exuzEnCiAgICAgIH0sIHsKICAgICAgICB2YWx1ZTogMywKICAgICAgICBsYWJlbDogJ+m4n+exuzInCiAgICAgIH1dLAogICAgICBzaG93cG9pbnQ6ICcwJywKICAgICAgZGF0YUxpc3Q6IFtdLAogICAgICAvLyDmlbDmja7liJfooagKICAgICAgcGFnZTogJ2xpc3QnLAogICAgICAvLyDlvZPliY3pobXpnaLvvIhsaXN0IOaIliBlZGl077yJCiAgICAgIGN1cnJlbnRQb2ludDogewogICAgICAgIG5hbWU6ICcnLAogICAgICAgIHRpbWU6ICcnCiAgICAgIH0sCiAgICAgIC8vIOW9k+WJjee8lui+keeahOeCueS/oeaBrwogICAgICBmaWxlTGlzdDogW10sCiAgICAgIC8vIOS4iuS8oOeahOaWh+S7tuWIl+ihqAogICAgICBwb2ludGVySW1nOiBwb2ludGVySW1nLAogICAgICAvLyDmjIfpkojlm77niYcKICAgICAgZHJhd2luZzogZmFsc2UsCiAgICAgIC8vIOaYr+WQpuato+WcqOe7mOWItgogICAgICBuYXZkcmF3aW5nOiBmYWxzZSwKICAgICAga2V5V29yZDogJycsCiAgICAgIC8vIOaQnOe0ouWFs+mUruWtlwogICAgICBuYW1lTGlzdDogW10sCiAgICAgIGRlZmF1bHRQcm9wczogewogICAgICAgIGNoaWxkcmVuOiAnY2hpbGRyZW4nLAogICAgICAgIGxhYmVsOiAnbGFiZWwnCiAgICAgIH0sCiAgICAgIHN0YXJ0UGxhY2U6IHsKICAgICAgICAvL+WHuuWPkeeCuQogICAgICAgIG5hbWU6ICcnLAogICAgICAgIGxuZzogJycsCiAgICAgICAgbGF0OiAnJwogICAgICB9LAogICAgICBlbmRQbGFjZTogewogICAgICAgIC8v57uI54K5CiAgICAgICAgbmFtZTogJycsCiAgICAgICAgbG5nOiAnJywKICAgICAgICBsYXQ6ICcnCiAgICAgIH0sCiAgICAgIC8v5a+86Iiq5qC35byPCiAgICAgIG5hdnN0eWxlOiAwLAogICAgICBuYXZPcHRpb25zOiBbewogICAgICAgIHZhbHVlOiAwLAogICAgICAgIGxhYmVsOiAn5pyA5b+r6Lev57q/JwogICAgICB9LCB7CiAgICAgICAgdmFsdWU6IDEsCiAgICAgICAgbGFiZWw6ICfmnIDnn63ot6/nur8nCiAgICAgIH0sIHsKICAgICAgICB2YWx1ZTogMiwKICAgICAgICBsYWJlbDogJ+mBv+W8gOmrmOmAnycKICAgICAgfSwgewogICAgICAgIHZhbHVlOiAzLAogICAgICAgIGxhYmVsOiAn5q2l6KGMJwogICAgICB9XQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBjbHVzdGVyU3R5bGU6IGZ1bmN0aW9uIGNsdXN0ZXJTdHlsZShuZXdWYWwpIHsKICAgICAgaWYgKG5ld1ZhbCkgewogICAgICAgIC8vIOehruS/neacieWAvOiiq+mAieS4rSAgCiAgICAgICAgdGhpcy5wYXR0ZXJuID0gMzsgLy8g6K6+572u5Li66IGa5ZCIICAKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnBhdHRlcm4gPSAyOwogICAgICB9CiAgICB9LAogICAgcGF0dGVybjogZnVuY3Rpb24gcGF0dGVybihuZXdWYWwpIHsKICAgICAgaWYgKG5ld1ZhbCAhPT0gMykgewogICAgICAgIHRoaXMuY2x1c3RlclN0eWxlID0gJyc7CiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgLy8g5Yid5aeL5YyWIGRyYXdQb2kg5ZKMIFBhdGhMYXllcgogICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICBkcmF3TmV3UG9pID0gbmV3IF9EcmF3TmV3UG9pLmRlZmF1bHQoX3RoaXMpOwogICAgICBkcmF3UG9pID0gbmV3IF9EcmF3UG9pLmRlZmF1bHQoX3RoaXMpOwogICAgICBQYXRoTGF5ZXIuaW5pdCgpOwogICAgfSk7CiAgICAvLyDliqDovb3mlbDmja4KICAgIHRoaXMubG9hZERhdGEoKTsKICAgIHRoaXMuZ3JleUNyYW5lID0gdGhpcy5sb2FkQ1NWKCfngbDpuaQ4LjEtMTEuMzDovajov7nngrknKTsKICAgIHRoaXMuY3lnbmUgPSB0aGlzLmxvYWRDU1YoJ+Wwj+Wkqem5hScpOwogICAgdGhpcy5iaXJkT25lID0gdGhpcy5sb2FkQ1NWKCfpuJ/nsbsxJyk7CiAgICB0aGlzLmJpcmRUd28gPSB0aGlzLmxvYWRDU1YoJ+m4n+exuzInKTsKICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICAvLyDmuIXpmaTnu5jliLYKICAgIGRyYXdOZXdQb2kuY2xlYXIoKTsKICAgIGRyYXdOZXdQb2kuZHJhd0NhbmNlbCgpOwogIH0sCiAgbWV0aG9kczogewogICAgY2x1c2F2ZTogZnVuY3Rpb24gY2x1c2F2ZSgpIHsKICAgICAgaWYgKG1hcmtlcnNDYW52YXMpIHsKICAgICAgICBtYXJrZXJzQ2FudmFzLnJlbW92ZU1hcmtlcnMobWFya2Vyc0xpc3QpOwogICAgICAgIG1hcmtlcnNDYW52YXMuY2xlYXIoKTsKICAgICAgICBtYXJrZXJzTGlzdCA9IFtdOwogICAgICB9CiAgICAgIC8vIOa4heeQhuWFiOWJjeWbvuWxggogICAgICBwcmV2aW91c0xheWVycy5mb3JFYWNoKGZ1bmN0aW9uIChsYXllcikgewogICAgICAgIG1hcC5yZW1vdmVMYXllcihsYXllcik7CiAgICAgIH0pOwogICAgICBwcmV2aW91c0xheWVycyA9IFtdOwogICAgICAvLyDmt7vliqDmlrDnmoRNYXJrZXJzQ2FudmFzCiAgICAgIG1hcmtlcnNDYW52YXMgPSBuZXcgX2xlYWZsZXQuZGVmYXVsdC5NYXJrZXJzQ2FudmFzKCk7CiAgICAgIG1hcmtlcnNDYW52YXMuYWRkVG8obWFwKTsKICAgICAgcHJldmlvdXNMYXllcnMucHVzaChtYXJrZXJzQ2FudmFzKTsKCiAgICAgIC8vIOWumuS5iemAmueUqOWbvuaghwogICAgICB2YXIgaWNvbiA9IF9sZWFmbGV0LmRlZmF1bHQuaWNvbih7CiAgICAgICAgaWNvblVybDogY2x1UG9pbnRJbWcsCiAgICAgICAgaWNvblNpemU6IFsxMiwgMTJdLAogICAgICAgIGljb25BbmNob3I6IFs2LCA2XQogICAgICB9KTsKICAgICAgLy8g5a6a5LmJ5qCW5oGv5Zyw5Zu+5qCHCiAgICAgIHZhciBpY29uQ2VudGVyID0gX2xlYWZsZXQuZGVmYXVsdC5pY29uKHsKICAgICAgICBpY29uVXJsOiBjbHVDZW50ZXJQb2ludEltZywKICAgICAgICBpY29uU2l6ZTogWzE1LCAxNV0sCiAgICAgICAgaWNvbkFuY2hvcjogWzYsIDZdCiAgICAgIH0pOwoKICAgICAgLy8g5qC55o2u6bif57G76YCJ5oup5pWw5o2uCiAgICAgIHZhciB0ZW1wX2JpcmRfZGF0YSA9IHRoaXMuZ2V0U2VsZWN0ZWRCaXJkRGF0YSgpOwoKICAgICAgLy8g5rKh5pyJ6YCJ5oup6IGa57G75pa55byP5pe2CiAgICAgIGlmICh0aGlzLmNsdXN0ZXJTdHlsZS5sZW5ndGggPT09IDApIHsKICAgICAgICB0aGlzLmRpc3BsYXlXaXRob3V0Q2x1c3RlcmluZyh0ZW1wX2JpcmRfZGF0YSwgbWFya2Vyc0NhbnZhcywgaWNvbiwgdGhpcy5wYXR0ZXJuKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmRpc3BsYXlXaXRoQ2x1c3RlcmluZyh0ZW1wX2JpcmRfZGF0YSwgbWFya2Vyc0NhbnZhcywgaWNvbkNlbnRlcik7CiAgICAgIH0KCiAgICAgIC8vIOW8ueeql+aPkOekuuW3sue7j+iBmuexu+e7k+adnwogICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICBtZXNzYWdlOiAn6IGa57G75a6M5oiQJywKICAgICAgICB0eXBlOiAnc3VjY2VzcycKICAgICAgfSk7CiAgICB9LAogICAgLy8g5qC55o2u6YCJ5oup55qE6bif57G76L+U5Zue5a+55bqU5pWw5o2uCiAgICBnZXRTZWxlY3RlZEJpcmREYXRhOiBmdW5jdGlvbiBnZXRTZWxlY3RlZEJpcmREYXRhKCkgewogICAgICBzd2l0Y2ggKHRoaXMuc2VsZWN0Y2x1ZGF0YSkgewogICAgICAgIGNhc2UgJ+eBsOm5pCc6CiAgICAgICAgICByZXR1cm4gdGhpcy5ncmV5Q3JhbmU7CiAgICAgICAgY2FzZSAn5bCP5aSp6bmFJzoKICAgICAgICAgIHJldHVybiB0aGlzLmN5Z25lOwogICAgICAgIGNhc2UgJ+m4n+exuzEnOgogICAgICAgICAgcmV0dXJuIHRoaXMuYmlyZE9uZTsKICAgICAgICBjYXNlICfpuJ/nsbsyJzoKICAgICAgICAgIHJldHVybiB0aGlzLmJpcmRUd287CiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfSwKICAgIC8vIOS4jeiBmuexu+aXtueahOWxleekuumAu+i+kQogICAgZGlzcGxheVdpdGhvdXRDbHVzdGVyaW5nOiBmdW5jdGlvbiBkaXNwbGF5V2l0aG91dENsdXN0ZXJpbmcodGVtcF9iaXJkX2RhdGEsIG1hcmtlcnNDYW52YXMsIGljb24sIHBhdHRlcm4pIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CiAgICAgIGlmIChwYXR0ZXJuID09ICcxJykgewogICAgICAgIC8v566A5YyW54mI5pys77yM6LCD55So5LqG5ruk5rOi566X5rOVCiAgICAgICAgdGVtcF9iaXJkX2RhdGEudGhlbihmdW5jdGlvbiAoYmlyZEFycikgewogICAgICAgICAgdmFyIGxhdGxuZ3MgPSBbXTsKICAgICAgICAgIGJpcmRBcnIgPSAoMCwgX0RvdWdsYXNQZXVrZXIuZG91Z2xhc1BldWNrZXIpKGJpcmRBcnIsIDI1MDAwKTsKICAgICAgICAgIGJpcmRBcnIuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICBpZiAoKDAsIF9wdWJNZXRob2RzLmlzVmFsaWRMYXRMbmcpKGl0ZW0pKSB7CiAgICAgICAgICAgICAgdmFyIG1hcmtlciA9IF90aGlzMi5jcmVhdGVNYXJrZXIoaXRlbSwgaWNvbik7CiAgICAgICAgICAgICAgbWFya2Vyc0NhbnZhcy5hZGRNYXJrZXIobWFya2VyKTsKICAgICAgICAgICAgICBtYXJrZXJzTGlzdC5wdXNoKG1hcmtlcik7CiAgICAgICAgICAgICAgbGF0bG5ncy5wdXNoKFtpdGVtLmxhdCwgaXRlbS5sbmddKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgICBfdGhpczIuaGFuZGxlR2VvbWV0cmljVHlwZShsYXRsbmdzLCBtYXJrZXJzQ2FudmFzKTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICAvL+acgOWOn+Wni+eahOeCuQogICAgICAgIHRlbXBfYmlyZF9kYXRhLnRoZW4oZnVuY3Rpb24gKGJpcmRBcnIpIHsKICAgICAgICAgIHZhciBsYXRsbmdzID0gW107CiAgICAgICAgICBiaXJkQXJyLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgaWYgKCgwLCBfcHViTWV0aG9kcy5pc1ZhbGlkTGF0TG5nKShpdGVtKSkgewogICAgICAgICAgICAgIHZhciBtYXJrZXIgPSBfdGhpczIuY3JlYXRlTWFya2VyKGl0ZW0sIGljb24pOwogICAgICAgICAgICAgIG1hcmtlcnNMaXN0LnB1c2gobWFya2VyKTsKICAgICAgICAgICAgICBtYXJrZXJzQ2FudmFzLmFkZE1hcmtlcihtYXJrZXIpOwogICAgICAgICAgICAgIGxhdGxuZ3MucHVzaChbaXRlbS5sYXQsIGl0ZW0ubG5nXSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgICAgX3RoaXMyLmhhbmRsZUdlb21ldHJpY1R5cGUobGF0bG5ncywgbWFya2Vyc0NhbnZhcyk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICAvLyDogZrnsbvlkI7nmoTlsZXnpLrpgLvovpEKICAgIGRpc3BsYXlXaXRoQ2x1c3RlcmluZzogZnVuY3Rpb24gZGlzcGxheVdpdGhDbHVzdGVyaW5nKHRlbXBfYmlyZF9kYXRhLCBtYXJrZXJzQ2FudmFzLCBpY29uKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwogICAgICB0ZW1wX2JpcmRfZGF0YS50aGVuKGZ1bmN0aW9uIChiaXJkQXJyKSB7CiAgICAgICAgdmFyIGNsdXN0ZXJDZW50ZXJzID0gW107CiAgICAgICAgdmFyIGxhdGxuZ3MgPSBbXTsKICAgICAgICAvLyDlu7rnq4vlm5vlj4nmoJHntKLlvJXmlrnkvr/lkI7nu63nmoTmn6Xor6Lmk43kvZwKICAgICAgICB2YXIgcm9vdFJlZ2lvbiA9IG5ldyBfcHViTWV0aG9kcy5SZWdpb24oLTkwLCA5MCwgLTE4MCwgMTgwKTsKICAgICAgICB2YXIgcm9vdCA9IG5ldyBfcHViTWV0aG9kcy5RdWFkVHJlZU5vZGUoMSwgcm9vdFJlZ2lvbik7CiAgICAgICAgdmFyIHBvaW50cyA9IGJpcmRBcnI7CiAgICAgICAgcG9pbnRzLmZvckVhY2goZnVuY3Rpb24gKHAsIGluZGV4KSB7CiAgICAgICAgICBwLmluZGV4ID0gaW5kZXg7CiAgICAgICAgICAoMCwgX3B1Yk1ldGhvZHMuaW5zZXJ0RWxlKShyb290LCBwKTsKICAgICAgICB9KTsKICAgICAgICBzd2l0Y2ggKF90aGlzMy5jbHVzdGVyU3R5bGUpIHsKICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgY2x1c3RlckNlbnRlcnMgPSAoMCwgX2NsYXJhbnMuY2xhcmFucykocG9pbnRzLCAyMCwgNSwgMTAwKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIGNsdXN0ZXJDZW50ZXJzID0gKDAsIF9rbWVhbnMua01lYW5zKShwb2ludHMsIDIwKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNsdXN0ZXJDZW50ZXJzID0gKDAsIF9kYnNjYW4uZGJzY2FuKShwb2ludHMsIDI1LCA3MCk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjbHVzdGVyQ2VudGVycyA9ICgwLCBfb3B0aWNzLm9wdGljcykocG9pbnRzLCAyNSwgNzApOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgaWYgKF90aGlzMy5tYXhzdGF5VGltZSA9PSAnJykgewogICAgICAgICAgICAgIF90aGlzMy5tYXhzdGF5VGltZSA9IDEzMDsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoX3RoaXMzLm1pbnN0YXlUaW1lID09ICcnKSB7CiAgICAgICAgICAgICAgX3RoaXMzLm1pbnN0YXlUaW1lID0gMzsKICAgICAgICAgICAgfQogICAgICAgICAgICB2YXIgZ3BzUG9pbnRzID0gW107CiAgICAgICAgICAgIGJpcmRBcnIuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgIHZhciB0ZW1wID0gbmV3IF9wdWJNZXRob2RzLkVsZVBvaW50KHBhcnNlRmxvYXQoaXRlbS5sYXQpLCBwYXJzZUZsb2F0KGl0ZW0ubG5nKSwgKDAsIF9wdWJNZXRob2RzLmNvbnZlcnREYXRlU3RyaW5nVG9Vbml4KShpdGVtLnRpbWUpLCBncHNQb2ludHMubGVuZ3RoKTsKICAgICAgICAgICAgICBncHNQb2ludHMucHVzaCh0ZW1wKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHZhciBfdGRic2NhbiA9ICgwLCBfdGRic2NhbjIudGRic2NhbikoZ3BzUG9pbnRzLCAyNTAwMCwgNjAgKiA2MCAqIDI0ICogX3RoaXMzLm1pbnN0YXlUaW1lLCA2MCAqIDYwICogMjQgKiBfdGhpczMubWF4c3RheVRpbWUpLAogICAgICAgICAgICAgIGNsdXN0ZXJzID0gX3RkYnNjYW4uY2x1c3RlcnMsCiAgICAgICAgICAgICAgQ29yZVBvaW50cyA9IF90ZGJzY2FuLkNvcmVQb2ludHM7CiAgICAgICAgICAgIHZhciBfaXRlcmF0b3IgPSAoMCwgX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIyLmRlZmF1bHQpKENvcmVQb2ludHMpLAogICAgICAgICAgICAgIF9zdGVwOwogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgICAgICB2YXIgcCA9IF9zdGVwLnZhbHVlOwogICAgICAgICAgICAgICAgdmFyIG51bSA9IDA7CiAgICAgICAgICAgICAgICB2YXIgX2l0ZXJhdG9yMiA9ICgwLCBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcjIuZGVmYXVsdCkoY2x1c3RlcnMpLAogICAgICAgICAgICAgICAgICBfc3RlcDI7CiAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICBmb3IgKF9pdGVyYXRvcjIucygpOyAhKF9zdGVwMiA9IF9pdGVyYXRvcjIubigpKS5kb25lOykgewogICAgICAgICAgICAgICAgICAgIHZhciB2ID0gX3N0ZXAyLnZhbHVlOwogICAgICAgICAgICAgICAgICAgIGlmIChjbHVzdGVyc1twLmluZGV4XSA9PT0gdikgewogICAgICAgICAgICAgICAgICAgICAgbnVtKys7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIC8vIGlmKG51bT49MzApewogICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICAgICAgICAgIF9pdGVyYXRvcjIuZShlcnIpOwogICAgICAgICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgICAgICAgX2l0ZXJhdG9yMi5mKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB2YXIgaXRlbSA9IGJpcmRBcnJbcC5pbmRleF07CiAgICAgICAgICAgICAgICBjbHVzdGVyQ2VudGVycy5wdXNoKGl0ZW0pOwogICAgICAgICAgICAgICAgLy8gfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgICAvLyDorqHnrpflgZzmrYfml7bpl7Qg5YGa5YiG57qn5riy5p+TCiAgICAgICAgLy8gY2x1c3RlckNlbnRlcnMgPSBkb3VnbGFzUGV1Y2tlcihjbHVzdGVyQ2VudGVycyw1MDAwKQogICAgICAgIGNsdXN0ZXJDZW50ZXJzLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHZhciBwb2ludCA9IG5ldyBfcHViTWV0aG9kcy5FbGVQb2ludChpdGVtLmxhdCwgaXRlbS5sbmcsICgwLCBfcHViTWV0aG9kcy5jb252ZXJ0RGF0ZVN0cmluZ1RvVW5peCkoaXRlbS50aW1lKSwgaXRlbS5pbmRleCk7CiAgICAgICAgICB2YXIgRXBzUmVzdWx0cyA9IFtdOwogICAgICAgICAgKDAsIF9wdWJNZXRob2RzLnF1ZXJ5RWxlKShyb290LCBwb2ludCwgRXBzUmVzdWx0cywgMjUwMDApOwogICAgICAgICAgdmFyIGNlbnRlclBvaW50ID0gKDAsIF9wdWJNZXRob2RzLmdldENlbnRlclBvaW50KShFcHNSZXN1bHRzKTsKICAgICAgICAgIHZhciB0aW1lcyA9IEVwc1Jlc3VsdHMubWFwKGZ1bmN0aW9uIChwb2ludCkgewogICAgICAgICAgICByZXR1cm4gKDAsIF9wdWJNZXRob2RzLmNvbnZlcnREYXRlU3RyaW5nVG9Vbml4KShwb2ludC50aW1lKTsKICAgICAgICAgIH0pOwogICAgICAgICAgdmFyIHN0YXJ0VGltZSA9IG5ldyBEYXRlKE1hdGgubWluLmFwcGx5KE1hdGgsICgwLCBfdG9Db25zdW1hYmxlQXJyYXkyLmRlZmF1bHQpKHRpbWVzKSkpOwogICAgICAgICAgdmFyIGVuZFRpbWUgPSBuZXcgRGF0ZShNYXRoLm1heC5hcHBseShNYXRoLCAoMCwgX3RvQ29uc3VtYWJsZUFycmF5Mi5kZWZhdWx0KSh0aW1lcykpKTsKICAgICAgICAgIHZhciBzdGFydFRpbWVTdHIgPSAoMCwgX3B1Yk1ldGhvZHMuY29udmVydFVuaXhUb0RhdGVTdHJpbmcpKHN0YXJ0VGltZSk7CiAgICAgICAgICB2YXIgZW5kVGltZVN0ciA9ICgwLCBfcHViTWV0aG9kcy5jb252ZXJ0VW5peFRvRGF0ZVN0cmluZykoZW5kVGltZSk7CiAgICAgICAgICB2YXIgbWF4c3RheVRpbWUgPSAoTWF0aC5tYXguYXBwbHkoTWF0aCwgKDAsIF90b0NvbnN1bWFibGVBcnJheTIuZGVmYXVsdCkodGltZXMpKSAtIE1hdGgubWluLmFwcGx5KE1hdGgsICgwLCBfdG9Db25zdW1hYmxlQXJyYXkyLmRlZmF1bHQpKHRpbWVzKSkpIC8gKDYwICogNjAgKiAyNCk7CiAgICAgICAgICBpZiAoKDAsIF9wdWJNZXRob2RzLmlzVmFsaWRMYXRMbmcpKGNlbnRlclBvaW50KSkgewogICAgICAgICAgICB2YXIgbWFya2VyID0gX3RoaXMzLmNyZWF0ZUNlbnRlck1hcmtlcih7CiAgICAgICAgICAgICAgY2VudGVyUG9pbnQ6IGNlbnRlclBvaW50LAogICAgICAgICAgICAgIG1heHN0YXlUaW1lOiBtYXhzdGF5VGltZSwKICAgICAgICAgICAgICBzdGFydFRpbWVTdHI6IHN0YXJ0VGltZVN0ciwKICAgICAgICAgICAgICBlbmRUaW1lU3RyOiBlbmRUaW1lU3RyCiAgICAgICAgICAgIH0sIGljb24pOwogICAgICAgICAgICBtYXJrZXJzQ2FudmFzLmFkZE1hcmtlcihtYXJrZXIpOwogICAgICAgICAgICBwcmV2aW91c0xheWVycy5wdXNoKG1hcmtlcik7CiAgICAgICAgICAgIG1hcmtlcnNMaXN0LnB1c2gobWFya2VyKTsKICAgICAgICAgICAgbGF0bG5ncy5wdXNoKFtjZW50ZXJQb2ludC5sYXQsIGNlbnRlclBvaW50LmxuZ10pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIF90aGlzMy5oYW5kbGVHZW9tZXRyaWNUeXBlKGxhdGxuZ3MsIG1hcmtlcnNDYW52YXMpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDliJvlu7rmoJbmga/lnLDngrnkvY3vvIzml7bpl7Totorplb/vvIxpY29u55qEc2l6ZeWwhuS8mumaj+edgOiwg+aVtAogICAgY3JlYXRlQ2VudGVyTWFya2VyOiBmdW5jdGlvbiBjcmVhdGVDZW50ZXJNYXJrZXIoaXRlbSwgaWNvbikgewogICAgICByZXR1cm4gX2xlYWZsZXQuZGVmYXVsdC5tYXJrZXIoW2l0ZW0uY2VudGVyUG9pbnQubGF0LCBpdGVtLmNlbnRlclBvaW50LmxuZ10sIHsKICAgICAgICBpY29uOiBpY29uCiAgICAgIH0pLmJpbmRQb3B1cCgiXHU1MDVDXHU3NTU5XHU2NUY2XHU5NUY0OiIuY29uY2F0KGl0ZW0ubWF4c3RheVRpbWUudG9GaXhlZCgyKSwgIlx1NTkyOTxwPlxuICAgICAgICAgIFx1NUYwMFx1NTlDQlx1NjVGNlx1OTVGNDoiKS5jb25jYXQoaXRlbS5zdGFydFRpbWVTdHIsICI8cD5cbiAgICAgICAgICBcdTdFRDNcdTY3NUZcdTY1RjZcdTk1RjQ6IikuY29uY2F0KGl0ZW0uZW5kVGltZVN0ciwgIjxwPlxuICAgICAgICAgIFx1N0VDRlx1NUVBNjoiKS5jb25jYXQocGFyc2VGbG9hdChpdGVtLmNlbnRlclBvaW50LmxuZykudG9GaXhlZCg1KSwgIjxwPlx1N0VBQ1x1NUVBNjoiKS5jb25jYXQocGFyc2VGbG9hdChpdGVtLmNlbnRlclBvaW50LmxhdCkudG9GaXhlZCg1KSkpLm9uKHsKICAgICAgICBtb3VzZW92ZXI6IGZ1bmN0aW9uIG1vdXNlb3ZlcihlKSB7CiAgICAgICAgICB0aGlzLm9wZW5Qb3B1cCgpOwogICAgICAgIH0sCiAgICAgICAgbW91c2VvdXQ6IGZ1bmN0aW9uIG1vdXNlb3V0KGUpIHsKICAgICAgICAgIHRoaXMuY2xvc2VQb3B1cCgpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgLy8g5Yib5bu65pmu6YCa54K55qCH6K6wCiAgICBjcmVhdGVNYXJrZXI6IGZ1bmN0aW9uIGNyZWF0ZU1hcmtlcihpdGVtLCBpY29uKSB7CiAgICAgIHJldHVybiBfbGVhZmxldC5kZWZhdWx0Lm1hcmtlcihbaXRlbS5sYXQsIGl0ZW0ubG5nXSwgewogICAgICAgIGljb246IGljb24KICAgICAgfSkuYmluZFBvcHVwKCJcdTY1RjZcdTk1RjQ6Ii5jb25jYXQoaXRlbS50aW1lLCAiPHA+XHU3RUNGXHU1RUE2OiIpLmNvbmNhdChwYXJzZUZsb2F0KGl0ZW0ubG5nKS50b0ZpeGVkKDUpLCAiPHA+XHU3RUFDXHU1RUE2OiIpLmNvbmNhdChwYXJzZUZsb2F0KGl0ZW0ubGF0KS50b0ZpeGVkKDUpKSkub24oewogICAgICAgIG1vdXNlb3ZlcjogZnVuY3Rpb24gbW91c2VvdmVyKGUpIHsKICAgICAgICAgIHRoaXMub3BlblBvcHVwKCk7CiAgICAgICAgfSwKICAgICAgICBtb3VzZW91dDogZnVuY3Rpb24gbW91c2VvdXQoZSkgewogICAgICAgICAgdGhpcy5jbG9zZVBvcHVwKCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICAvLyDmoLnmja7lh6DkvZXnsbvlnovnu5jliLYKICAgIGhhbmRsZUdlb21ldHJpY1R5cGU6IGZ1bmN0aW9uIGhhbmRsZUdlb21ldHJpY1R5cGUobGF0bG5ncywgbWFya2Vyc0NhbnZhcykgewogICAgICBpZiAodGhpcy5nZW9tZXRyaWNUeXBlICE9ICcxJykgewogICAgICAgIHZhciBwb2x5bGluZSA9IF9sZWFmbGV0LmRlZmF1bHQucG9seWxpbmUobGF0bG5ncywgewogICAgICAgICAgY29sb3I6ICdyZWQnLAogICAgICAgICAgd2VpZ2h0OiAzCiAgICAgICAgfSkuYWRkVG8obWFwKTsKICAgICAgICB2YXIgZGVjb3JhdG9yID0gX2xlYWZsZXQuZGVmYXVsdC5wb2x5bGluZURlY29yYXRvcihwb2x5bGluZSwgewogICAgICAgICAgcGF0dGVybnM6IFt7CiAgICAgICAgICAgIG9mZnNldDogMCwKICAgICAgICAgICAgcmVwZWF0OiAzNSwKICAgICAgICAgICAgc3ltYm9sOiBfbGVhZmxldC5kZWZhdWx0LlN5bWJvbC5hcnJvd0hlYWQoewogICAgICAgICAgICAgIHBpeGVsU2l6ZTogNSwKICAgICAgICAgICAgICBoZWFkQW5nbGU6IDc1LAogICAgICAgICAgICAgIHBvbHlnb246IGZhbHNlLAogICAgICAgICAgICAgIHBhdGhPcHRpb25zOiB7CiAgICAgICAgICAgICAgICBzdHJva2U6IHRydWUsCiAgICAgICAgICAgICAgICB3ZWlnaHQ6IDIsCiAgICAgICAgICAgICAgICBjb2xvcjogJ2JsdWUnCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgICAgfV0KICAgICAgICB9KS5hZGRUbyhtYXApOwogICAgICAgIHByZXZpb3VzTGF5ZXJzLnB1c2goZGVjb3JhdG9yKTsKICAgICAgICBwcmV2aW91c0xheWVycy5wdXNoKHBvbHlsaW5lKTsKICAgICAgfQogICAgfSwKICAgIC8vIOivu+WPlmNzduaWh+S7tgogICAgbG9hZENTVjogZnVuY3Rpb24gbG9hZENTVihkYXRhKSB7CiAgICAgIHJldHVybiAoMCwgX2FzeW5jVG9HZW5lcmF0b3IyLmRlZmF1bHQpKCAvKiNfX1BVUkVfXyovKDAsIF9yZWdlbmVyYXRvclJ1bnRpbWUyLmRlZmF1bHQpKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjc3ZVcmwsIHJlc3BvbnNlLCBjc3YsIHJlc3VsdHMsIHNvcnRlZERhdGE7CiAgICAgICAgcmV0dXJuICgwLCBfcmVnZW5lcmF0b3JSdW50aW1lMi5kZWZhdWx0KSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjc3ZVcmwgPSAiLi4vcmVzb3VyY2UvIi5jb25jYXQoZGF0YSwgIi5jc3YiKTsKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goY3N2VXJsKTsKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBpZiAocmVzcG9uc2Uub2spIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTmV0d29yayByZXNwb25zZSB3YXMgbm90IG9rJyk7CiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UudGV4dCgpOwogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgY3N2ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICByZXN1bHRzID0gX3BhcGFwYXJzZS5kZWZhdWx0LnBhcnNlKGNzdiwgewogICAgICAgICAgICAgICAgaGVhZGVyOiB0cnVlLAogICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBmdW5jdGlvbiB0cmFuc2Zvcm0odmFsdWUsIGZpZWxkKSB7CiAgICAgICAgICAgICAgICAgIGlmIChmaWVsZCA9PT0gJ2xuZycgfHwgZmllbGQgPT09ICdsYXQnKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIG51bSA9IHBhcnNlRmxvYXQodmFsdWUpOwogICAgICAgICAgICAgICAgICAgIHJldHVybiBpc05hTihudW0pID8gdmFsdWUgOiBudW07CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOyAvLyDmjInnhafnrKzkuIDliJfml7bpl7TlrZfnrKbkuLLmjpLluo8KICAgICAgICAgICAgICBzb3J0ZWREYXRhID0gcmVzdWx0cy5kYXRhLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICAgICAgICAgIHZhciB0aW1lQSA9ICgwLCBfcHViTWV0aG9kcy5jb252ZXJ0RGF0ZVN0cmluZ1RvVW5peCkoYVtPYmplY3Qua2V5cyhhKVswXV0pOyAvLyDnrKzkuIDliJfnmoTml7bpl7TlgLwKICAgICAgICAgICAgICAgIHZhciB0aW1lQiA9ICgwLCBfcHViTWV0aG9kcy5jb252ZXJ0RGF0ZVN0cmluZ1RvVW5peCkoYltPYmplY3Qua2V5cyhiKVswXV0pOwogICAgICAgICAgICAgICAgcmV0dXJuIHRpbWVBIC0gdGltZUI7IC8vIOWNh+W6j+aOkuWIlwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHNvcnRlZERhdGEpOwogICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxNTsKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGxvYWRpbmcgQ1NWOicsIF9jb250ZXh0LnQwKTsKICAgICAgICAgICAgICB0aHJvdyBfY29udGV4dC50MDsKICAgICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMSwgMTVdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8v5qC55o2u5Zyw5ZCN5p+l5om+57uP57qs5bqmCiAgICBzZWFyY2hMbmdCeU5hbWU6IGZ1bmN0aW9uIHNlYXJjaExuZ0J5TmFtZShvcHRpb25zKSB7CiAgICAgIC8v5rmW5Y2X55yB546v55CD5L+h5aOr5YWs5Y+4CiAgICAgIC8v6K+35rGC77yaIGh0dHA6Ly9hcGkudGlhbmRpdHUuZ292LmNuL2dlb2NvZGVyP2RzPXsia2V5V29yZCI6IuWMl+S6rOW4guW7tuW6huWMuuW7tuW6humVh+iOsuiKseaxoOadkeWJjeihlzUw5aSV6Ziz57qi5YW76ICB6ZmiIn0mdGs95oKo55qE5a+G6ZKlCiAgICAgIF9heGlvcy5kZWZhdWx0LmdldCgnaHR0cDovL2FwaS50aWFuZGl0dS5nb3YuY24vZ2VvY29kZXI/ZHM9eyJrZXlXb3JkIjoiJyArIG9wdGlvbnMubmFtZSArICcifSZ0az04OWRlYTNlYWI1NjFmMGRmYjk4NjdlNTMxNDE1ZTAxNScpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIG9wdGlvbnMubG5nID0gcmVzLmRhdGEubG9jYXRpb24ubG9uOwogICAgICAgIG9wdGlvbnMubGF0ID0gcmVzLmRhdGEubG9jYXRpb24ubGF0OwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgcm91dGU6JywgZXJyKTsKICAgICAgfSk7CiAgICB9LAogICAgLy/ngrnlh7voioLngrkKICAgIGhhbmRsZU5vZGVDbGljazogZnVuY3Rpb24gaGFuZGxlTm9kZUNsaWNrKGRhdGEpIHsKICAgICAgY29uc29sZS5sb2coJ+iKgueCueaVsOaNricsIGRhdGEpOwogICAgICBjb25zb2xlLmxvZygn6IqC54K5SUQnLCBkYXRhLiR0cmVlTm9kZUlkKTsKICAgIH0sCiAgICAvL+WvvOiIqgogICAgbmF2aWdhdGlvbjogZnVuY3Rpb24gbmF2aWdhdGlvbigpIHsKICAgICAgdGhpcy5wYWdlID0gJ25hdmlnYXRpb24nOyAvL+i3s+i9rOWIsOWvvOiIqueVjOmdogogICAgICB0aGlzLm5hdmRyYXdpbmcgPSB0cnVlOwogICAgICBkcmF3UG9pLmRyYXcoKTsKICAgIH0sCiAgICAvL+e7mOWItuWvvOiIqui3r+e6vwogICAgc2VhcmNoUm91dGU6IGZ1bmN0aW9uIHNlYXJjaFJvdXRlKCkgewogICAgICB0aGlzLnNob3dQYXRoKHRoaXMuc3RhcnRQbGFjZSwgdGhpcy5lbmRQbGFjZSwgdGhpcy5uYXZzdHlsZSk7CiAgICB9LAogICAgLy/mn6Xor6LlnLDlkI0KICAgIHNlYXJjaEJ5TmFtZTogZnVuY3Rpb24gc2VhcmNoQnlOYW1lKGtleVdvcmQpIHsKICAgICAgdmFyIGxpc3QgPSBbXTsKICAgICAgRmlsZVNhdmUuZ2V0TGlzdCgpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHZhciB0ZW1wID0gcmVzOwogICAgICAgIGlmICh0ZW1wKSB7CiAgICAgICAgICB0ZW1wLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgaWYgKGl0ZW0ubmFtZS5pbmNsdWRlcyhrZXlXb3JkKSkgewogICAgICAgICAgICAgIGxpc3QucHVzaChpdGVtKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy5kYXRhTGlzdCA9IGxpc3Q7CiAgICB9LAogICAgLy8g5Yqg6L295pWw5o2uCiAgICBsb2FkRGF0YTogZnVuY3Rpb24gbG9hZERhdGEoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwogICAgICBGaWxlU2F2ZS5nZXRMaXN0KCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgY29uc29sZS5sb2coJ3JlcycsIHJlcyk7CiAgICAgICAgdmFyIGxpc3QgPSByZXM7CiAgICAgICAgaWYgKHJlcykgewogICAgICAgICAgLy8g5aSE55CG5Zu+54mHCiAgICAgICAgICBsaXN0LmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgaWYgKGl0ZW0ucGhvdG9zKSB7CiAgICAgICAgICAgICAgdmFyIGFyciA9IGl0ZW0ucGhvdG9zLnNwbGl0KCcjJyk7CiAgICAgICAgICAgICAgaWYgKGFyci5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICBpdGVtWydwaG90bzAnXSA9IGFyclswXTsKICAgICAgICAgICAgICAgIGl0ZW1bJ3Bob3RvQXJyJ10gPSBhcnI7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICAgIF90aGlzNC5kYXRhTGlzdCA9IGxpc3Q7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzNC5kYXRhTGlzdCA9IFtdOwogICAgICAgIH0KICAgICAgICB2YXIgbmFtZUxpc3QgPSBbXTsKICAgICAgICBsaXN0LmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIGlmIChpdGVtLm5hbWUpIHsKICAgICAgICAgICAgdmFyIF9pdGVtJG5hbWUkc3BsaXQgPSBpdGVtLm5hbWUuc3BsaXQoJy0nKSwKICAgICAgICAgICAgICBfaXRlbSRuYW1lJHNwbGl0MiA9ICgwLCBfc2xpY2VkVG9BcnJheTIuZGVmYXVsdCkoX2l0ZW0kbmFtZSRzcGxpdCwgMiksCiAgICAgICAgICAgICAgcHJvdmluY2UgPSBfaXRlbSRuYW1lJHNwbGl0MlswXSwKICAgICAgICAgICAgICBwbGFjZSA9IF9pdGVtJG5hbWUkc3BsaXQyWzFdOwogICAgICAgICAgICB2YXIgcHJvdmluY2VzID0gbmFtZUxpc3Q7IC8vIOecgeS7veWxgue6p+aYr+agkeeahOaguQogICAgICAgICAgICB2YXIgcHJvdmluY2VOb2RlID0gZmluZE9yQ3JlYXRlUGFyZW50KHByb3ZpbmNlcywgcHJvdmluY2UpOwogICAgICAgICAgICB2YXIgcGxhY2VzID0gcHJvdmluY2VOb2RlLmNoaWxkcmVuOwogICAgICAgICAgICBmaW5kT3JDcmVhdGVQYXJlbnQocGxhY2VzLCBwbGFjZSk7IC8vIOWfjuW4guS9nOS4uuecgeS7veeahOWtkOiKgueCuQogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIF90aGlzNC5uYW1lTGlzdCA9IG5hbWVMaXN0OwogICAgICB9KTsKICAgIH0sCiAgICAvLyDogZrlkIjliIbmnpAKICAgIGNsdXN0ZXJBbmFseXNpczogZnVuY3Rpb24gY2x1c3RlckFuYWx5c2lzKCkgewogICAgICB0aGlzLnBhZ2UgPSAnY2x1c3Rlcic7CiAgICAgIGRyYXdOZXdQb2kuY2xlYXIoKTsKICAgICAgZHJhd1BvaS5jbGVhcigpOwogICAgICBQYXRoTGF5ZXIuY2xlYXIoKTsKICAgIH0sCiAgICAvLyDlvIDlp4vnu5jliLYKICAgIHN0YXJ0RHJhdzogZnVuY3Rpb24gc3RhcnREcmF3KCkgewogICAgICB0aGlzLmRyYXdpbmcgPSB0cnVlOwogICAgICB0aGlzLmZpbGVMaXN0ID0gW107CiAgICAgIGRyYXdOZXdQb2kuZHJhdygpOwogICAgfSwKICAgIC8vIOWPlua2iOe7mOWItgogICAgY2FuY2VsRHJhdzogZnVuY3Rpb24gY2FuY2VsRHJhdygpIHsKICAgICAgZHJhd05ld1BvaS5kcmF3Q2FuY2VsKCk7CiAgICAgIHRoaXMuZHJhd2luZyA9IGZhbHNlOwogICAgfSwKICAgIC8vIOi/lOWbnuWIl+ihqOmhtemdogogICAgYmFja1RvTGlzdDogZnVuY3Rpb24gYmFja1RvTGlzdCgpIHsKICAgICAgdGhpcy5wYWdlID0gJ2xpc3QnOwogICAgICBkcmF3TmV3UG9pLmNsZWFyKCk7CiAgICAgIGRyYXdQb2kuY2xlYXIoKTsKICAgICAgUGF0aExheWVyLmNsZWFyKCk7CiAgICAgIHRoaXMubmF2ZHJhd2luZyA9IGZhbHNlOwogICAgICBpZiAodGhpcy5zdGFydFBsYWNlICE9ICcnKSB7CiAgICAgICAgdGhpcy5zdGFydFBsYWNlLm5hbWUgPSAnJzsKICAgICAgICB0aGlzLnN0YXJ0UGxhY2UubG5nID0gJyc7CiAgICAgICAgdGhpcy5zdGFydFBsYWNlLmxhdCA9ICcnOwogICAgICAgIHRoaXMuZW5kUGxhY2UubmFtZSA9ICcnOwogICAgICAgIHRoaXMuZW5kUGxhY2UubG5nID0gJyc7CiAgICAgICAgdGhpcy5lbmRQbGFjZS5sYXQgPSAnJzsKICAgICAgfQogICAgICB0aGlzLiRyZWZzLnBvaUZvcm0ucmVzZXRGaWVsZHMoKTsKICAgIH0sCiAgICAvLyDkv53lrZjmlbDmja4KICAgIHNhdmU6IGZ1bmN0aW9uIHNhdmUoKSB7CiAgICAgIHZhciBfdGhpczUgPSB0aGlzOwogICAgICB0aGlzLiRyZWZzLnBvaUZvcm0udmFsaWRhdGUoZnVuY3Rpb24gKHZhbGlkKSB7CiAgICAgICAgaWYgKCF2YWxpZCkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICB2YXIgY3VycmVudFBvaW50ID0gX3RoaXM1LmN1cnJlbnRQb2ludDsKICAgICAgICB2YXIgcGFyYW0gPSB7CiAgICAgICAgICBuYW1lOiBjdXJyZW50UG9pbnQubmFtZSwKICAgICAgICAgIHRpbWU6IGN1cnJlbnRQb2ludC50aW1lLAogICAgICAgICAgbG9uZ2l0dWRlOiBjdXJyZW50UG9pbnQubG5nLAogICAgICAgICAgbGF0aXR1ZGU6IGN1cnJlbnRQb2ludC5sYXQsCiAgICAgICAgICBhbHRpdHVkZTogY3VycmVudFBvaW50LmFsdGl0dWRlIHx8IDAsCiAgICAgICAgICBwaG90b3M6ICcnLAogICAgICAgICAgYWRkcmVzczogJycsCiAgICAgICAgICBkZXNjOiBjdXJyZW50UG9pbnQuZGVzYyB8fCAnJwogICAgICAgIH07CiAgICAgICAgdmFyIHBob3RvcyA9IFtdOwogICAgICAgIGlmIChfdGhpczUuZmlsZUxpc3QubGVuZ3RoID4gMCkgewogICAgICAgICAgX3RoaXM1LmZpbGVMaXN0LmZvckVhY2goZnVuY3Rpb24gKGYpIHsKICAgICAgICAgICAgcGhvdG9zLnB1c2goZi5uYW1lKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICBpZiAocGhvdG9zLmxlbmd0aCA+IDApIHsKICAgICAgICAgIHBhcmFtLnBob3RvcyA9IHBob3Rvcy5qb2luKCcjJyk7CiAgICAgICAgfQogICAgICAgIGlmIChjdXJyZW50UG9pbnQuaWQpIHsKICAgICAgICAgIHZhciBpdGVtID0gX3RoaXM1LmRhdGFMaXN0LmZpbmQoZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgcmV0dXJuIGQuaWQgPT09IGN1cnJlbnRQb2ludC5pZDsKICAgICAgICAgIH0pOwogICAgICAgICAgaWYgKGl0ZW0pIHsKICAgICAgICAgICAgaXRlbS5uYW1lID0gY3VycmVudFBvaW50Lm5hbWUgfHwgJyc7CiAgICAgICAgICAgIGl0ZW0udGltZSA9IGN1cnJlbnRQb2ludC50aW1lIHx8ICcnOwogICAgICAgICAgICBpdGVtLmxvbmdpdHVkZSA9IGN1cnJlbnRQb2ludC5sbmc7CiAgICAgICAgICAgIGl0ZW0ubGF0aXR1ZGUgPSBjdXJyZW50UG9pbnQubGF0OwogICAgICAgICAgICBpdGVtLmFsdGl0dWRlID0gY3VycmVudFBvaW50LmFsdGl0dWRlIHx8IDA7CiAgICAgICAgICAgIGl0ZW0ucGhvdG9zID0gcGFyYW0ucGhvdG9zOwogICAgICAgICAgICBpdGVtLmFkZHJlc3MgPSBwYXJhbS5hZGRyZXNzOwogICAgICAgICAgICBpdGVtLmRlc2MgPSBjdXJyZW50UG9pbnQuZGVzYyB8fCAnJzsKICAgICAgICAgICAgRmlsZVNhdmUuY3JlYXRlKF90aGlzNS5kYXRhTGlzdCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgX3RoaXM1LiRtZXNzYWdlU3VjY2VzcygpOwogICAgICAgICAgICAgIF90aGlzNS5iYWNrVG9MaXN0KCk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwYXJhbVsnaWQnXSA9ICgwLCBfY29tbW9uLmdldFV1aWQpKCk7CiAgICAgICAgICBfdGhpczUuZGF0YUxpc3QucHVzaChwYXJhbSk7CiAgICAgICAgICBGaWxlU2F2ZS5jcmVhdGUoX3RoaXM1LmRhdGFMaXN0KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgX3RoaXM1LiRtZXNzYWdlU3VjY2VzcygpOwogICAgICAgICAgICBfdGhpczUuYmFja1RvTGlzdCgpOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICAgIF90aGlzNS5sb2FkRGF0YSgpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDpo57liLDmjIflrprngrkKICAgIGZseVRvOiBmdW5jdGlvbiBmbHlUbyhpdGVtKSB7CiAgICAgIGRyYXdOZXdQb2kuZmx5VG8oaXRlbSk7CiAgICB9LAogICAgLy8g57yW6L6R5oyH5a6a54K5CiAgICBlZGl0OiBmdW5jdGlvbiBlZGl0KGl0ZW0pIHsKICAgICAgdmFyIF90aGlzNiA9IHRoaXM7CiAgICAgIHRoaXMuZmlsZUxpc3QgPSBbXTsKICAgICAgdmFyIHBob3RvcyA9IGl0ZW0ucGhvdG9zOwogICAgICBpZiAocGhvdG9zKSB7CiAgICAgICAgdmFyIGFyciA9IHBob3Rvcy5zcGxpdCgnIycpOwogICAgICAgIGFyci5mb3JFYWNoKGZ1bmN0aW9uICh1cmwpIHsKICAgICAgICAgIF90aGlzNi5maWxlTGlzdC5wdXNoKHsKICAgICAgICAgICAgc3RhdHVzOiAnZG9uZScsCiAgICAgICAgICAgIHVybDogdXJsLAogICAgICAgICAgICBuYW1lOiB1cmwsCiAgICAgICAgICAgIHVpZDogKDAsIF9jb21tb24uZ2V0VXVpZCkoKQogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgICAgZHJhd05ld1BvaS5lZGl0KGl0ZW0pOwogICAgfSwKICAgIC8vIOWIoOmZpOaMh+WumueCuQogICAgZGVsZXRlQ2xpY2s6IGZ1bmN0aW9uIGRlbGV0ZUNsaWNrKGl0ZW0pIHsKICAgICAgdmFyIF90aGlzNyA9IHRoaXM7CiAgICAgIHZhciBpZHggPSB0aGlzLmRhdGFMaXN0LmZpbmRJbmRleChmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLmlkID09PSBpdGVtLmlkOwogICAgICB9KTsKICAgICAgdGhpcy5kYXRhTGlzdC5zcGxpY2UoaWR4LCAxKTsKICAgICAgRmlsZVNhdmUuY3JlYXRlKHRoaXMuZGF0YUxpc3QpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzNy4kbWVzc2FnZVN1Y2Nlc3MoKTsKICAgICAgICBfdGhpczcubG9hZERhdGEoKTsKICAgICAgICBkcmF3TmV3UG9pLmNsZWFyQnlJZChpdGVtLmlkKTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5paH5Lu25YiX6KGo5Y+Y5YyWCiAgICBsaXN0Q2hhbmdlOiBmdW5jdGlvbiBsaXN0Q2hhbmdlKGxpc3QpIHsKICAgICAgdGhpcy5maWxlTGlzdCA9IGxpc3Q7CiAgICB9LAogICAgLy8g57uP57qs5bqm5Y+Y5YyWCiAgICBsYXRMbmdDaGFuZ2U6IGZ1bmN0aW9uIGxhdExuZ0NoYW5nZSh2KSB7CiAgICAgIGlmICh0aGlzLmN1cnJlbnRQb2ludC5sYXQgJiYgdGhpcy5jdXJyZW50UG9pbnQubG5nKSB7CiAgICAgICAgZHJhd05ld1BvaS5zZXRMYXRMbmcodGhpcy5jdXJyZW50UG9pbnQubGF0LCB0aGlzLmN1cnJlbnRQb2ludC5sbmcpOwogICAgICB9CiAgICB9LAogICAgLy8g5pi+56S66Lev5b6ECiAgICBzaG93UGF0aDogZnVuY3Rpb24gc2hvd1BhdGgoc3RhcnQsIGVuZCwgc3R5bGUpIHsKICAgICAgUGF0aExheWVyLnBhdGgoc3RhcnQsIGVuZCwgc3R5bGUpOwogICAgfQogIH0KfTsgLy8g6L6F5Yqp5Ye95pWw77ya5Zyo5qCR5Lit5p+l5om+5oiW5re75Yqg54i26IqC54K5CmZ1bmN0aW9uIGZpbmRPckNyZWF0ZVBhcmVudChwYXJlbnRzLCBwYXJlbnROYW1lKSB7CiAgdmFyIHBhcmVudCA9IHBhcmVudHMuZmluZChmdW5jdGlvbiAocCkgewogICAgcmV0dXJuIHAubGFiZWwgPT09IHBhcmVudE5hbWU7CiAgfSk7CiAgaWYgKCFwYXJlbnQpIHsKICAgIHBhcmVudCA9IHsKICAgICAgbGFiZWw6IHBhcmVudE5hbWUsCiAgICAgIGNoaWxkcmVuOiBbXQogICAgfTsKICAgIHBhcmVudHMucHVzaChwYXJlbnQpOwogIH0KICByZXR1cm4gcGFyZW50Owp9"},{"version":3,"names":["_leaflet","_interopRequireDefault","require","_papaparse","_axios","_DrawPoi","_DrawNewPoi","FileSave","_interopRequireWildcard","_common","_IconsDialog","_DouglasPeuker","_kmeans","_clarans","_dbscan","_optics","_pubMethods","_tdbscan2","PathLayer","pointerImg","cluPointImg","cluCenterPointImg","drawNewPoi","drawPoi","previousLayers","markersList","markersCanvas","_default","exports","default","components","IconsDialog","name","data","selectcludata","greyCrane","cygne","birdOne","birdTwo","pattern","geometricType","clusterStyle","maxstayTime","minstayTime","clusterStyleOptions","value","label","clusterDataOptions","showpoint","dataList","page","currentPoint","time","fileList","drawing","navdrawing","keyWord","nameList","defaultProps","children","startPlace","lng","lat","endPlace","navstyle","navOptions","watch","newVal","mounted","_this","$nextTick","DrawNewPoi","DrawPoi","init","loadData","loadCSV","beforeDestroy","clear","drawCancel","methods","clusave","removeMarkers","forEach","layer","map","removeLayer","L","MarkersCanvas","addTo","push","icon","iconUrl","iconSize","iconAnchor","iconCenter","temp_bird_data","getSelectedBirdData","length","displayWithoutClustering","displayWithClustering","$message","message","type","_this2","then","birdArr","latlngs","douglasPeucker","item","isValidLatLng","marker","createMarker","addMarker","handleGeometricType","_this3","clusterCenters","rootRegion","Region","root","QuadTreeNode","points","p","index","insertEle","clarans","kMeans","dbscan","optics","gpsPoints","temp","ElePoint","parseFloat","convertDateStringToUnix","_tdbscan","tdbscan","clusters","CorePoints","_iterator","_createForOfIteratorHelper2","_step","s","n","done","num","_iterator2","_step2","v","err","e","f","point","EpsResults","queryEle","centerPoint","getCenterPoint","times","startTime","Date","Math","min","apply","_toConsumableArray2","endTime","max","startTimeStr","convertUnixToDateString","endTimeStr","createCenterMarker","bindPopup","concat","toFixed","on","mouseover","openPopup","mouseout","closePopup","polyline","color","weight","decorator","polylineDecorator","patterns","offset","repeat","symbol","Symbol","arrowHead","pixelSize","headAngle","polygon","pathOptions","stroke","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","csvUrl","response","csv","results","sortedData","wrap","_callee$","_context","prev","next","fetch","sent","ok","Error","text","Papa","parse","header","transform","field","isNaN","sort","a","b","timeA","Object","keys","timeB","abrupt","t0","console","error","stop","searchLngByName","options","axios","get","res","location","lon","catch","handleNodeClick","log","$treeNodeId","navigation","draw","searchRoute","showPath","searchByName","list","getList","includes","_this4","photos","arr","split","_item$name$split","_item$name$split2","_slicedToArray2","province","place","provinces","provinceNode","findOrCreateParent","places","clusterAnalysis","startDraw","cancelDraw","backToList","$refs","poiForm","resetFields","save","_this5","validate","valid","param","longitude","latitude","altitude","address","desc","join","id","find","d","create","$messageSuccess","getUuid","flyTo","edit","_this6","url","status","uid","deleteClick","_this7","idx","findIndex","splice","clearById","listChange","latLngChange","setLatLng","start","end","style","path","parents","parentName","parent"],"sources":["src/views/AMyWork/tools/poi/PoiPanel.vue"],"sourcesContent":["<template>\n  <div style=\"overflow: auto;width: 260px;background: white;\">\n    <!-- 列表页面 -->\n    <div v-show=\"page == 'list'\" class=\"poiPage\" style=\"margin-top: 10px;\">\n      <section style=\"margin: 0 20px;color:black;\">\n        <!-- 全选按钮和标绘按钮 -->\n        <div style=\"width: 100%;line-height:30px;color: #606266;\">\n          <div v-show=\"dataList.length>0\" style=\"float: left;\">\n            <el-button v-if=\"!drawing\" type=\"link\" @click=\"startDraw\" icon=\"el-icon-map-location\">\n              <i class=\"iconfont icon-jia-line\" /> 新增地点\n            </el-button>\n            <el-button v-if=\"drawing\" type=\"link\" @click=\"cancelDraw\">\n              取消\n            </el-button>\n          </div>\n        </div>\n        \n        <div style=\"width: 100%;line-height:30px;color: #606266;\">\n          <div v-show=\"dataList.length>0\" style=\"float: left;\">\n            <el-button type=\"link\" @click=\"clusterAnalysis\" icon=\"el-icon-wind-power\">聚合分析</el-button>\n          </div>\n        </div>\n        <!-- 搜索框 -->\n        <div style=\"clear: right;\">\n          <el-input\n            v-model=\"keyWord\"\n            placeholder=\"请输入你要查找的地名\"\n            style=\"width:220px;margin-top: 10px;\"\n            allow-clear\n            enter-button\n            @pressEnter=\"loadData\"\n            @search=\"loadData\"\n          />\n          <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"searchByName(keyWord)\">搜索</el-button>\n          <el-button type=\"primary\" icon=\"el-icon-position\" @click=\"navigation()\">\n            导航\n          </el-button>\n        </div>\n      <!-- 没有数据时候的展示 -->\n      </section>\n        <section style=\"margin: 20px;color:black;\">\n        <!-- 无数据时的占位符 -->\n        <el-empty v-show=\"dataList.length<1\" style=\"color: #606266;margin-top: 20px;padding-top: 120px;height:calc(100vh - 100px)\">\n          <span slot=\"description\"> 无数据 </span>\n          <el-button v-if=\"!drawing\" type=\"link\" @click=\"startDraw\">\n            <i class=\"iconfont icon-jia-line\" /> 标绘\n          </el-button>\n          <el-button v-if=\"drawing\" type=\"primary\" @click=\"cancelDraw\">\n            取消\n          </el-button>\n        </el-empty>\n        <!-- 数据列表 -->\n        <div v-show=\"dataList.length > 0\" item-layout=\"horizontal\" :data-source=\"dataList\" :style=\"{ height: 'calc(100vh - 240px)',overflow: 'auto' }\">\n          <!-- 分组 -->\n          <el-tree :data=\"nameList\" :props=\"defaultProps\" @node-click=\"handleNodeClick\"></el-tree>\n          <!--  -->\n          <div v-for=\"item in dataList\" :key=\"item.id\">\n            <div style=\"line-height: 36px;border-bottom: 1px solid #d3e1f5;\" @dblclick=\"edit(item)\"> \n              <div style=\"display: inline-block;\">{{ item.name }}</div>\n              <div style=\"float: right;\">\n                <el-button slot=\"actions\" type=\"text\" class=\"btn-link\" ghost @click=\"edit(item)\">编辑</el-button>\n                <el-button slot=\"actions\" type=\"text\" class=\"btn-link hover-red\" ghost @click=\"deleteClick(item)\">删除</el-button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n    <!-- 编辑页面 -->\n    <div v-show=\"page == 'edit'\">\n      <div style=\"padding: 20px;max-height: calc(100vh - 130px);overflow: auto;\">\n        <el-form ref=\"poiForm\" :model=\"currentPoint\" size=\"small\">\n          <el-form-item prop=\"name\" label=\"名称\">\n            <el-input v-model=\"currentPoint.name\" allow-clear />\n          </el-form-item>\n          <el-form-item prop=\"name\" label=\"时间\">\n            <el-input v-model=\"currentPoint.time\" allow-clear />\n          </el-form-item>\n          <el-form-item label=\"x\">\n            <el-input v-model=\"currentPoint.lng\" :min=\"-180\" :max=\"180\" @change=\"latLngChange\" />\n          </el-form-item>\n          <el-form-item label=\"y\">\n            <el-input v-model=\"currentPoint.lat\" :min=\"-90\" :max=\"90\" @change=\"latLngChange\" />\n          </el-form-item>\n          <el-form-item label=\"描述\" style=\"margin-bottom: 0;\">\n            <el-input v-model=\"currentPoint.desc\" type=\"textarea\" />\n          </el-form-item>\n          <el-form-item label=\"图片\" style=\"margin-top: 10px;\">\n            <image-upload :fileList=\"fileList\" type=\"poi\" @listChange=\"listChange\" />\n          </el-form-item>\n        </el-form>\n        <div style=\"width: 100%;\">\n          <el-button @click=\"backToList\">\n            返回\n          </el-button>\n          <div style=\"float: right;\">\n            <el-button style=\"margin-left: 10px;\" type=\"primary\" @click=\"save\">确定</el-button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- 导航页面  -->\n    <div v-show=\"page == 'navigation'\">\n      <div style=\"padding: 20px;max-height: calc(200vh - 130px);overflow: auto;\">\n        <el-form size=\"small\" >\n          <el-form-item prop=\"startPlace\" label=\"输入起点\">\n            <el-input v-model=\"startPlace.name\" allow-clear/>\n            <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"searchLngByName(startPlace)\">搜索</el-button>\n          </el-form-item>\n          <el-form-item prop=\"startPlaceLng\" label=\"起点经度\">\n            <el-input v-model=\"startPlace.lng\"/>\n          </el-form-item>\n          <el-form-item prop=\"startPlaceLat\" label=\"起点维度\">\n            <el-input v-model=\"startPlace.lat\"/>\n          </el-form-item>\n          <el-form-item prop=\"endPlace\" label=\"输入终点\">\n            <el-input v-model=\"endPlace.name\" allow-clear/>\n            <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"searchLngByName(endPlace)\">搜索</el-button>\n          </el-form-item>\n          <el-form-item prop=\"endPlaceLng\" label=\"终点经度\">\n            <el-input v-model=\"endPlace.lng\"/>\n          </el-form-item>\n          <el-form-item prop=\"endPlaceLat\" label=\"终点维度\">\n            <el-input v-model=\"endPlace.lat\"/>\n          </el-form-item>\n          <el-form-item  label=\"请选择导航路线类型\">\n            <el-select v-model=\"navstyle\" clearable placeholder=\"请选择\">\n              <el-option\n                v-for=\"item in navOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n        </el-form>\n        <div style=\"width: 100%;\">\n          <el-button @click=\"backToList\">\n            返回\n          </el-button>\n          <div style=\"float: right;\">\n            <el-button style=\"margin-left: 10px;\" type=\"primary\" @click=\"searchRoute()\">确定</el-button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- 聚合分析页面 -->\n    <div v-show=\"page =='cluster'\">\n      <div style=\"padding: 20px;max-height: calc(200vh - 130px);overflow: auto;\">\n        \n        <el-form size=\"small\">\n          <el-form-item label=\"聚合方法\">\n            <el-select v-model=\"clusterStyle\" placeholder=\"请选择\" clearable>\n              <el-option\n                v-for=\"item in clusterStyleOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item> \n          <el-form-item label=\"聚合数据\">\n            <el-select v-model=\"selectcludata\" placeholder=\"请选择\">\n              <el-option\n                v-for=\"item in clusterDataOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.label\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"最小停留天数\" v-if=\"clusterStyle==5\">\n            <el-input v-model=\"minstayTime\" placeholder=\"3.0\"></el-input>\n          </el-form-item> \n          <el-form-item label=\"最大停留天数\" v-if=\"clusterStyle==5\">\n            <el-input v-model=\"maxstayTime\" placeholder=\"130.0\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"模式\">\n            <el-radio-group v-model=\"pattern\">\n              <el-radio :label=\"1\">简化</el-radio>\n              <el-radio :label=\"2\">初始</el-radio>\n              <el-radio :label=\"3\">聚合</el-radio>\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item label=\"几何类型\">\n            <el-radio-group v-model=\"geometricType\">\n              <el-radio :label=\"1\">点</el-radio>\n              <el-radio :label=\"2\">点+线</el-radio>\n            </el-radio-group>\n          </el-form-item>\n        </el-form>\n        \n        <div style=\"width: 100%;\">\n          <el-button @click=\"backToList\">\n            返回\n          </el-button>\n          <div style=\"float: right;\">\n            <el-button style=\"margin-left: 10px;\" type=\"primary\" @click=\"clusave\">确定</el-button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport L from 'leaflet'  // 引入Leaflet库\nimport 'leaflet-markers-canvas'\nimport 'leaflet.markercluster/dist/leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport \"leaflet-canvas-marker\"\nimport Papa from 'papaparse'\nimport axios from 'axios'\nimport DrawPoi from './DrawPoi'\nimport DrawNewPoi from './DrawNewPoi'\nimport * as FileSave from './FileSave'\nimport { getUuid } from '../biz/common'\nimport IconsDialog from '../../../tool/build/IconsDialog.vue'\nimport 'leaflet/dist/leaflet.css'\nimport { douglasPeucker } from '../algo/DouglasPeuker'\nimport { kMeans } from '../algo/kmeans' \nimport { clarans } from '../algo/clarans' \nimport { dbscan } from '../algo/dbscan' \nimport { optics } from '../algo/optics' \nimport {ElePoint, Region, QuadTreeNode} from '../algo/pubMethods'\nimport {convertDateStringToUnix,insertEle,queryEle,\n      convertUnixToDateString,getCenterPoint,isValidLatLng} from '../algo/pubMethods'\nimport { tdbscan } from '../algo/tdbscan' \nimport * as PathLayer from '../comm/PathLayer'\nconst pointerImg = require('@/assets/images/location64.png')\nconst cluPointImg = require('@/assets/images/point.png')\nconst cluCenterPointImg = require('@/assets/images/centerPoint.png')\n// 定义 drawPoi 变量\nlet drawNewPoi\nlet drawPoi\nlet previousLayers = []\nlet markersList = []\nlet markersCanvas\nexport default {\n  components: { IconsDialog },\n  name: 'PoiPanel',\n  data() {\n    return {\n      selectcludata: '',\n      //灰鹤\n      greyCrane:[],\n      //小天鹅\n      cygne:[],\n      // 鸟类1\n      birdOne:[],\n      // 鸟类2\n      birdTwo:[],\n      // 数据模式\n      pattern:2,\n      // 几何类型\n      geometricType:1,\n      // 聚合算法\n      clusterStyle:'',\n      //最大停留时长\n      maxstayTime:'',\n      //最短停留时长\n      minstayTime:'',\n      //聚合方式\n      clusterStyleOptions:[{\n        value:1,\n        label:'CLARANS'\n      },{\n        value:2,\n        label:'K-Means'\n      },{\n        value:3,\n        label:'DBSCAN'\n      },{\n        value:4,\n        label:'OPTICS'\n      },{\n        value:5,\n        label:'T-DBSCAN'\n      }],\n      // 聚合数据\n      clusterDataOptions:[{\n        value:0,\n        label:'灰鹤'\n      },{\n        value:1,\n        label:'小天鹅'\n      },{\n        value:2,\n        label:'鸟类1'\n      },{\n        value:3,\n        label:'鸟类2'\n      }],\n      showpoint: '0',\n      dataList: [], // 数据列表\n      page: 'list', // 当前页面（list 或 edit）\n      currentPoint: {\n        name: '',\n        time: ''\n      }, // 当前编辑的点信息\n      fileList: [], // 上传的文件列表\n      pointerImg: pointerImg, // 指针图片\n      drawing: false, // 是否正在绘制\n      navdrawing: false,\n      keyWord: '', // 搜索关键字\n      nameList:[],\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      startPlace:{ //出发点\n        name:'',\n        lng: '',\n        lat: ''\n      },\n      endPlace:{ //终点\n        name:'',\n        lng: '',\n        lat: ''\n      },\n      //导航样式\n      navstyle: 0,\n      navOptions:[{\n        value:0,\n        label:'最快路线'\n      },{\n        value:1,\n        label:'最短路线'\n      },{\n        value:2,\n        label:'避开高速'\n      },{\n        value:3,\n        label:'步行'\n      }]\n    }\n  },\n  watch: {  \n    clusterStyle(newVal) {  \n      if (newVal) { // 确保有值被选中  \n        this.pattern = 3 // 设置为聚合  \n      }else{\n        this.pattern = 2\n      }  \n    },\n    pattern(newVal){\n      if(newVal !== 3){\n        this.clusterStyle = ''\n      }\n    }  \n  },\n  mounted() {\n    // 初始化 drawPoi 和 PathLayer\n    this.$nextTick(() => {\n      drawNewPoi = new DrawNewPoi(this)\n      drawPoi = new DrawPoi(this)\n      PathLayer.init()\n    })\n    // 加载数据\n    this.loadData()\n    this.greyCrane = this.loadCSV('灰鹤8.1-11.30轨迹点')\n    this.cygne = this.loadCSV('小天鹅')\n    this.birdOne = this.loadCSV('鸟类1')\n    this.birdTwo = this.loadCSV('鸟类2')\n  },\n  beforeDestroy() {\n    // 清除绘制\n    drawNewPoi.clear()\n    drawNewPoi.drawCancel()\n  },\n  methods: {\n    clusave() {\n      if(markersCanvas){\n        markersCanvas.removeMarkers(markersList)\n        markersCanvas.clear()\n        markersList = [];\n      }\n      // 清理先前图层\n      previousLayers.forEach(layer => {\n        map.removeLayer(layer);\n      });\n      previousLayers = [];\n      // 添加新的MarkersCanvas\n      markersCanvas = new L.MarkersCanvas();\n      markersCanvas.addTo(map);\n      previousLayers.push(markersCanvas)\n      \n      // 定义通用图标\n      const icon = L.icon({\n        iconUrl: cluPointImg,\n        iconSize: [12, 12],\n        iconAnchor: [6, 6]\n      });\n      // 定义栖息地图标\n      const iconCenter = L.icon({\n        iconUrl: cluCenterPointImg,\n        iconSize: [15, 15],\n        iconAnchor: [6, 6]\n      });\n\n      // 根据鸟类选择数据\n      let temp_bird_data = this.getSelectedBirdData();\n\n      // 没有选择聚类方式时\n      if (this.clusterStyle.length === 0) {\n        this.displayWithoutClustering(temp_bird_data, markersCanvas, icon,this.pattern);\n      } else {\n        this.displayWithClustering(temp_bird_data, markersCanvas, iconCenter);\n      }\n\n      // 弹窗提示已经聚类结束\n      this.$message({\n        message:'聚类完成',\n        type:'success'\n      })\n\n    },\n\n    // 根据选择的鸟类返回对应数据\n    getSelectedBirdData() {\n      switch(this.selectcludata) {\n        case '灰鹤':\n          return this.greyCrane;\n        case '小天鹅':\n          return this.cygne;\n        case '鸟类1':\n          return this.birdOne;\n        case '鸟类2':\n          return this.birdTwo;\n        default:\n          return [];\n      }\n    },\n\n    // 不聚类时的展示逻辑\n    displayWithoutClustering(temp_bird_data, markersCanvas, icon,pattern) {\n      if(pattern == '1'){ //简化版本，调用了滤波算法\n        temp_bird_data.then(birdArr => {\n          let latlngs = [];\n          birdArr = douglasPeucker(birdArr,25000)\n          birdArr.forEach(item => {\n            if (isValidLatLng(item)) {\n              const marker = this.createMarker(item, icon);\n              markersCanvas.addMarker(marker);\n              markersList.push(marker);\n              latlngs.push([item.lat, item.lng]);\n            }\n          });\n          this.handleGeometricType(latlngs, markersCanvas);\n        });\n      }else{\n        //最原始的点\n        temp_bird_data.then(birdArr => {\n          let latlngs = [];\n          birdArr.forEach(item => {\n            if (isValidLatLng(item)) {\n              const marker = this.createMarker(item, icon);\n              markersList.push(marker);\n              markersCanvas.addMarker(marker);\n              latlngs.push([item.lat, item.lng]);\n            }\n          });\n          this.handleGeometricType(latlngs, markersCanvas);\n        });\n      }\n    },\n\n    // 聚类后的展示逻辑\n    displayWithClustering(temp_bird_data, markersCanvas, icon) {\n      temp_bird_data.then(birdArr => {\n        let clusterCenters = [];\n        let latlngs = [];\n        // 建立四叉树索引方便后续的查询操作\n        const rootRegion = new Region(-90, 90, -180, 180);\n        const root = new QuadTreeNode(1, rootRegion);\n        var points = birdArr\n        points.forEach((p, index) => {\n            p.index = index;\n            insertEle(root, p);\n        });\n        switch(this.clusterStyle) {\n          case 1:\n            clusterCenters = clarans(points, 20, 5, 100);\n            break;\n          case 2:\n            clusterCenters = kMeans(points, 20);\n            break;\n          case 3:\n            clusterCenters = dbscan(points, 25, 70);\n            break;\n          case 4:\n            clusterCenters =  optics(points,25,70);\n            break;\n          case 5:\n            if(this.maxstayTime == ''){\n              this.maxstayTime = 130\n            }\n            if(this.minstayTime == ''){\n              this.minstayTime = 3\n            }\n            const gpsPoints = []\n            birdArr.forEach(item=>{\n              const temp = new ElePoint(parseFloat(item.lat), parseFloat(item.lng), convertDateStringToUnix(item.time), gpsPoints.length);\n              gpsPoints.push(temp);\n            })\n            \n            const {clusters,CorePoints} = tdbscan(gpsPoints,25000,60 * 60 * 24 * this.minstayTime,60 * 60 * 24 * this.maxstayTime)\n            for(const p of CorePoints){\n                var num = 0\n                for(const v of clusters){\n                  if(clusters[p.index]===v){\n                    num++\n                  }\n                }\n                // if(num>=30){\n                const item = birdArr[p.index]\n                clusterCenters.push(item)\n                // }\n            }\n            break;\n        }\n        // 计算停歇时间 做分级渲染\n        // clusterCenters = douglasPeucker(clusterCenters,5000)\n        clusterCenters.forEach(item =>{\n          const point  = new ElePoint(item.lat,item.lng,convertDateStringToUnix(item.time),item.index)\n          const EpsResults = []\n          queryEle(root,point,EpsResults,25000)\n          const centerPoint = getCenterPoint(EpsResults)\n          const times = EpsResults.map(point => convertDateStringToUnix(point.time))\n          const startTime = new Date(Math.min(...times))\n          const endTime = new Date(Math.max(...times))\n          const startTimeStr = convertUnixToDateString(startTime)\n          const endTimeStr = convertUnixToDateString(endTime)\n          const maxstayTime = (Math.max(...times) - Math.min(...times))/(60*60*24)\n          if(isValidLatLng(centerPoint)){\n            const marker = this.createCenterMarker({centerPoint,maxstayTime,startTimeStr,endTimeStr}, icon);\n            markersCanvas.addMarker(marker);\n            previousLayers.push(marker)\n            markersList.push(marker)\n            latlngs.push([centerPoint.lat, centerPoint.lng]);\n          }\n        })\n        this.handleGeometricType(latlngs, markersCanvas);\n      });\n    },\n    // 创建栖息地点位，时间越长，icon的size将会随着调整\n    createCenterMarker(item,icon){\n       return L.marker([item.centerPoint.lat, item.centerPoint.lng], { icon })\n        .bindPopup(`停留时间:${item.maxstayTime.toFixed(2)}天<p>\n          开始时间:${item.startTimeStr}<p>\n          结束时间:${item.endTimeStr}<p>\n          经度:${parseFloat(item.centerPoint.lng).toFixed(5)}<p>纬度:${parseFloat(item.centerPoint.lat).toFixed(5)}`)\n        .on({\n          mouseover(e) { this.openPopup(); },\n          mouseout(e) { this.closePopup(); }\n        });\n    },\n    // 创建普通点标记\n    createMarker(item, icon) {\n      return L.marker([item.lat, item.lng], { icon })\n        .bindPopup(`时间:${item.time}<p>经度:${parseFloat(item.lng).toFixed(5)}<p>纬度:${parseFloat(item.lat).toFixed(5)}`)\n        .on({\n          mouseover(e) { this.openPopup(); },\n          mouseout(e) { this.closePopup(); }\n        });\n    },\n\n    // 根据几何类型绘制\n    handleGeometricType(latlngs, markersCanvas) {\n      if (this.geometricType != '1') {\n        const polyline = L.polyline(latlngs, { color: 'red', weight: 3 }).addTo(map);\n        const decorator = L.polylineDecorator(polyline, {\n          patterns: [\n            { offset: 0, repeat: 35, symbol: L.Symbol.arrowHead({\n              pixelSize: 5,\n              headAngle: 75,\n              polygon: false,\n              pathOptions: { stroke: true, weight: 2, color: 'blue' }\n            })}\n          ]\n        }).addTo(map);\n        previousLayers.push(decorator);\n        previousLayers.push(polyline);\n      }\n    },\n    // 读取csv文件\n    async loadCSV(data) {    \n      const csvUrl = `../resource/${data}.csv`;    \n      try {    \n        const response = await fetch(csvUrl);    \n        if (!response.ok) throw new Error('Network response was not ok');    \n        const csv = await response.text();    \n        const results = Papa.parse(csv, {  \n          header: true,  \n          transform: function(value, field) {  \n            if (field === 'lng' || field === 'lat') {  \n              const num = parseFloat(value);  \n              return isNaN(num) ? value : num;  \n            }  \n            return value;  \n          }  \n        });   \n        \n        // 按照第一列时间字符串排序\n        const sortedData = results.data.sort((a, b) => {\n          const timeA = convertDateStringToUnix(a[Object.keys(a)[0]]); // 第一列的时间值\n          const timeB = convertDateStringToUnix(b[Object.keys(b)[0]]);\n          return timeA - timeB; // 升序排列\n        });\n        \n        return sortedData;    \n      } catch (error) {    \n        console.error('Error loading CSV:', error);    \n        throw error; \n      }    \n    },\n    //根据地名查找经纬度\n    searchLngByName(options){\n      //湖南省环球信士公司\n      //请求： http://api.tianditu.gov.cn/geocoder?ds={\"keyWord\":\"北京市延庆区延庆镇莲花池村前街50夕阳红养老院\"}&tk=您的密钥\n      axios.get('http://api.tianditu.gov.cn/geocoder?ds={\"keyWord\":\"' + options.name + '\"}&tk=89dea3eab561f0dfb9867e531415e015').then(res => {\n        options.lng=res.data.location.lon\n        options.lat=res.data.location.lat\n      }).catch(err => {\n        console.error('Error fetching route:', err)\n      }) \n    },\n    //点击节点\n    handleNodeClick(data){\n      console.log('节点数据',data)\n      console.log('节点ID',data.$treeNodeId)\n    },\n    //导航\n    navigation(){\n      this.page='navigation' //跳转到导航界面\n      this.navdrawing = true\n      drawPoi.draw()\n    },\n    //绘制导航路线\n    searchRoute(){\n      this.showPath(this.startPlace,this.endPlace,this.navstyle)\n    },\n    //查询地名\n    searchByName(keyWord){\n      const list = []\n      FileSave.getList().then(res => {\n        const temp = res\n        if(temp){\n          temp.forEach(item =>{\n            if(item.name.includes(keyWord)){\n              list.push(item)\n            }\n          })\n        }\n      })\n      this.dataList = list\n    },\n    // 加载数据\n    loadData() {\n      FileSave.getList().then(res => {\n        console.log('res', res)\n        const list = res\n        if (res) {\n          // 处理图片\n          list.forEach(item => {\n            if (item.photos) {\n              const arr = item.photos.split('#')\n              if (arr.length > 0) {\n                item['photo0'] = arr[0]\n                item['photoArr'] = arr\n              }\n            }\n          })\n          this.dataList = list\n        } else {\n          this.dataList = []\n        }\n        const nameList = []\n        list.forEach(item =>{\n          if(item.name){\n              const [province,place] = item.name.split('-')\n              const provinces = nameList // 省份层级是树的根\n              const provinceNode = findOrCreateParent(provinces, province)\n              const places = provinceNode.children\n              findOrCreateParent(places, place) // 城市作为省份的子节点\n            }\n          }\n        )\n        this.nameList=nameList\n      })\n    },\n    // 聚合分析\n    clusterAnalysis(){\n      this.page = 'cluster'\n      drawNewPoi.clear()\n      drawPoi.clear()\n      PathLayer.clear()\n    },\n    // 开始绘制\n    startDraw() {\n      this.drawing = true\n      this.fileList = []\n      drawNewPoi.draw()\n    },\n    // 取消绘制\n    cancelDraw() {\n      drawNewPoi.drawCancel()\n      this.drawing = false\n    },\n    // 返回列表页面\n    backToList() {\n      this.page = 'list'\n      drawNewPoi.clear()\n      drawPoi.clear()\n      PathLayer.clear()\n      this.navdrawing = false\n      if(this.startPlace!=''){\n        this.startPlace.name=''\n        this.startPlace.lng=''\n        this.startPlace.lat=''\n        this.endPlace.name=''\n        this.endPlace.lng=''\n        this.endPlace.lat=''\n\n      }\n      this.$refs.poiForm.resetFields()\n    },\n    // 保存数据\n    save() {\n      this.$refs.poiForm.validate(valid => {\n        if (!valid) {\n          return\n        }\n        const currentPoint = this.currentPoint\n\n        const param = {\n          name: currentPoint.name,\n          time: currentPoint.time,\n          longitude: currentPoint.lng,\n          latitude: currentPoint.lat,\n          altitude: currentPoint.altitude || 0,\n          photos: '',\n          address: '',\n          desc: currentPoint.desc || ''\n        }\n        const photos = []\n        if (this.fileList.length > 0) {\n          this.fileList.forEach(f => {\n            photos.push(f.name)\n          })\n        }\n        if (photos.length > 0) {\n          param.photos = photos.join('#')\n        }\n\n        if (currentPoint.id) {\n          const item = this.dataList.find(d => d.id === currentPoint.id)\n          if (item) {\n            item.name = currentPoint.name || ''\n            item.time = currentPoint.time || ''\n            item.longitude = currentPoint.lng\n            item.latitude = currentPoint.lat\n            item.altitude = currentPoint.altitude || 0\n            item.photos = param.photos\n            item.address = param.address\n            item.desc = currentPoint.desc || ''\n            FileSave.create(this.dataList).then(res => {\n              this.$messageSuccess()\n              this.backToList()\n            })\n          }\n        } else {\n          param['id'] = getUuid()\n          this.dataList.push(param)\n          FileSave.create(this.dataList).then(res => {\n            this.$messageSuccess()\n            this.backToList()\n          })\n        }\n        this.loadData()\n      })\n    },\n    // 飞到指定点\n    flyTo(item) {\n      drawNewPoi.flyTo(item)\n    },\n    // 编辑指定点\n    edit(item) {\n      this.fileList = []\n      const photos = item.photos\n      if (photos) {\n        const arr = photos.split('#')\n        arr.forEach(url => {\n          this.fileList.push({\n            status: 'done',\n            url: url,\n            name: url,\n            uid: getUuid()\n          })\n        })\n      }\n      drawNewPoi.edit(item)\n    },\n    // 删除指定点\n    deleteClick(item) {\n      const idx = this.dataList.findIndex(d => d.id === item.id)\n      this.dataList.splice(idx, 1)\n      FileSave.create(this.dataList).then(res => {\n        this.$messageSuccess()\n        this.loadData()\n        drawNewPoi.clearById(item.id)\n      })\n    },\n    // 文件列表变化\n    listChange(list) {\n      this.fileList = list\n    },\n    // 经纬度变化\n    latLngChange(v) {\n      if (this.currentPoint.lat && this.currentPoint.lng) {\n        drawNewPoi.setLatLng(this.currentPoint.lat, this.currentPoint.lng)\n      }\n    },\n    // 显示路径\n    showPath(start,end,style) {\n      PathLayer.path(start,end,style)\n    }\n  }\n}\n// 辅助函数：在树中查找或添加父节点\nfunction findOrCreateParent(parents, parentName) {\n  let parent = parents.find(p => p.label === parentName);\n  if (!parent) {\n    parent = { label: parentName, children: [] };\n    parents.push(parent);\n  }\n  return parent;\n}\n\n</script>\n\n<style scoped>\n.poiImg {\n  width: 40px;\n  height: 40px;\n  border-radius: 5px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}