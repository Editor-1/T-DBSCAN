{"remainingRequest":"E:\\GitProject\\T-DBSCAN\\node_modules\\babel-loader\\lib\\index.js!E:\\GitProject\\T-DBSCAN\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\GitProject\\T-DBSCAN\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\GitProject\\T-DBSCAN\\src\\views\\AMyWork\\tools\\poi\\PoiPanel.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\GitProject\\T-DBSCAN\\src\\views\\AMyWork\\tools\\poi\\PoiPanel.vue","mtime":1727269397901},{"path":"E:\\GitProject\\T-DBSCAN\\babel.config.js","mtime":1677117676000},{"path":"E:\\GitProject\\T-DBSCAN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\GitProject\\T-DBSCAN\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\GitProject\\T-DBSCAN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\GitProject\\T-DBSCAN\\node_modules\\vue-loader\\lib\\index.js","mtime":1720856215506}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_leaflet","_interopRequireDefault","require","_papaparse","_axios","_DrawPoi","_DrawNewPoi","FileSave","_interopRequireWildcard","_common","_IconsDialog","_DouglasPeuker","_kmeans","_clarans","_dbscan","_optics","_pubMethods","_tdbscan2","PathLayer","pointerImg","cluPointImg","cluCenterPointImg","drawNewPoi","drawPoi","previousLayers","markersList","markersCanvas","_default","exports","default","components","IconsDialog","name","data","selectcludata","greyCrane","cygne","birdOne","birdTwo","pattern","geometricType","clusterStyle","maxstayTime","minstayTime","clusterStyleOptions","value","label","clusterDataOptions","showpoint","dataList","page","currentPoint","time","fileList","drawing","navdrawing","keyWord","nameList","defaultProps","children","startPlace","lng","lat","endPlace","navstyle","navOptions","watch","newVal","mounted","_this","$nextTick","DrawNewPoi","DrawPoi","init","loadData","loadCSV","beforeDestroy","clear","drawCancel","methods","clusave","removeMarkers","forEach","layer","map","removeLayer","L","MarkersCanvas","addTo","push","icon","iconUrl","iconSize","iconAnchor","iconCenter","temp_bird_data","getSelectedBirdData","length","displayWithoutClustering","displayWithClustering","$message","message","type","_this2","then","birdArr","latlngs","douglasPeucker","item","isValidLatLng","marker","createMarker","addMarker","handleGeometricType","_this3","clusterCenters","rootRegion","Region","root","QuadTreeNode","points","p","index","insertEle","clarans","kMeans","dbscan","optics","gpsPoints","temp","ElePoint","parseFloat","convertDateStringToUnix","_tdbscan","tdbscan","clusters","CorePoints","_iterator","_createForOfIteratorHelper2","_step","s","n","done","point","startTime","endTime","timeP","i","timeQ","disTime","Math","abs","startTimeStr","endTimeStr","centerPoint","err","e","f","console","log","createCenterMarker","EpsResults","queryEle","getCenterPoint","times","Date","min","apply","_toConsumableArray2","max","convertUnixToDateString","bindPopup","concat","toFixed","on","mouseover","openPopup","mouseout","closePopup","polyline","color","weight","decorator","polylineDecorator","patterns","offset","repeat","symbol","Symbol","arrowHead","pixelSize","headAngle","polygon","pathOptions","stroke","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","csvUrl","response","csv","results","sortedData","wrap","_callee$","_context","prev","next","fetch","sent","ok","Error","text","Papa","parse","header","transform","field","num","isNaN","sort","a","b","timeA","Object","keys","timeB","abrupt","t0","error","stop","searchLngByName","options","axios","get","res","location","lon","catch","handleNodeClick","$treeNodeId","navigation","draw","searchRoute","showPath","searchByName","list","getList","includes","_this4","photos","arr","split","_item$name$split","_item$name$split2","_slicedToArray2","province","place","provinces","provinceNode","findOrCreateParent","places","clusterAnalysis","startDraw","cancelDraw","backToList","$refs","poiForm","resetFields","save","_this5","validate","valid","param","longitude","latitude","altitude","address","desc","join","id","find","d","create","$messageSuccess","getUuid","flyTo","edit","_this6","url","status","uid","deleteClick","_this7","idx","findIndex","splice","clearById","listChange","latLngChange","v","setLatLng","start","end","style","path","parents","parentName","parent"],"sources":["src/views/AMyWork/tools/poi/PoiPanel.vue"],"sourcesContent":["<template>\n  <div style=\"overflow: auto;width: 260px;background: white;\">\n    <!-- 列表页面 -->\n    <div v-show=\"page == 'list'\" class=\"poiPage\" style=\"margin-top: 10px;\">\n      <section style=\"margin: 0 20px;color:black;\">\n        <!-- 全选按钮和标绘按钮 -->\n        <div style=\"width: 100%;line-height:30px;color: #606266;\">\n          <div v-show=\"dataList.length>0\" style=\"float: left;\">\n            <el-button v-if=\"!drawing\" type=\"link\" @click=\"startDraw\" icon=\"el-icon-map-location\">\n              <i class=\"iconfont icon-jia-line\" /> 新增地点\n            </el-button>\n            <el-button v-if=\"drawing\" type=\"link\" @click=\"cancelDraw\">\n              取消\n            </el-button>\n          </div>\n        </div>\n        \n        <div style=\"width: 100%;line-height:30px;color: #606266;\">\n          <div v-show=\"dataList.length>0\" style=\"float: left;\">\n            <el-button type=\"link\" @click=\"clusterAnalysis\" icon=\"el-icon-wind-power\">聚合分析</el-button>\n          </div>\n        </div>\n        <!-- 搜索框 -->\n        <div style=\"clear: right;\">\n          <el-input\n            v-model=\"keyWord\"\n            placeholder=\"请输入你要查找的地名\"\n            style=\"width:220px;margin-top: 10px;\"\n            allow-clear\n            enter-button\n            @pressEnter=\"loadData\"\n            @search=\"loadData\"\n          />\n          <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"searchByName(keyWord)\">搜索</el-button>\n          <el-button type=\"primary\" icon=\"el-icon-position\" @click=\"navigation()\">\n            导航\n          </el-button>\n        </div>\n      <!-- 没有数据时候的展示 -->\n      </section>\n        <section style=\"margin: 20px;color:black;\">\n        <!-- 无数据时的占位符 -->\n        <el-empty v-show=\"dataList.length<1\" style=\"color: #606266;margin-top: 20px;padding-top: 120px;height:calc(100vh - 100px)\">\n          <span slot=\"description\"> 无数据 </span>\n          <el-button v-if=\"!drawing\" type=\"link\" @click=\"startDraw\">\n            <i class=\"iconfont icon-jia-line\" /> 标绘\n          </el-button>\n          <el-button v-if=\"drawing\" type=\"primary\" @click=\"cancelDraw\">\n            取消\n          </el-button>\n        </el-empty>\n        <!-- 数据列表 -->\n        <div v-show=\"dataList.length > 0\" item-layout=\"horizontal\" :data-source=\"dataList\" :style=\"{ height: 'calc(100vh - 240px)',overflow: 'auto' }\">\n          <!-- 分组 -->\n          <el-tree :data=\"nameList\" :props=\"defaultProps\" @node-click=\"handleNodeClick\"></el-tree>\n          <!--  -->\n          <div v-for=\"item in dataList\" :key=\"item.id\">\n            <div style=\"line-height: 36px;border-bottom: 1px solid #d3e1f5;\" @dblclick=\"edit(item)\"> \n              <div style=\"display: inline-block;\">{{ item.name }}</div>\n              <div style=\"float: right;\">\n                <el-button slot=\"actions\" type=\"text\" class=\"btn-link\" ghost @click=\"edit(item)\">编辑</el-button>\n                <el-button slot=\"actions\" type=\"text\" class=\"btn-link hover-red\" ghost @click=\"deleteClick(item)\">删除</el-button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n    <!-- 编辑页面 -->\n    <div v-show=\"page == 'edit'\">\n      <div style=\"padding: 20px;max-height: calc(100vh - 130px);overflow: auto;\">\n        <el-form ref=\"poiForm\" :model=\"currentPoint\" size=\"small\">\n          <el-form-item prop=\"name\" label=\"名称\">\n            <el-input v-model=\"currentPoint.name\" allow-clear />\n          </el-form-item>\n          <el-form-item prop=\"name\" label=\"时间\">\n            <el-input v-model=\"currentPoint.time\" allow-clear />\n          </el-form-item>\n          <el-form-item label=\"x\">\n            <el-input v-model=\"currentPoint.lng\" :min=\"-180\" :max=\"180\" @change=\"latLngChange\" />\n          </el-form-item>\n          <el-form-item label=\"y\">\n            <el-input v-model=\"currentPoint.lat\" :min=\"-90\" :max=\"90\" @change=\"latLngChange\" />\n          </el-form-item>\n          <el-form-item label=\"描述\" style=\"margin-bottom: 0;\">\n            <el-input v-model=\"currentPoint.desc\" type=\"textarea\" />\n          </el-form-item>\n          <el-form-item label=\"图片\" style=\"margin-top: 10px;\">\n            <image-upload :fileList=\"fileList\" type=\"poi\" @listChange=\"listChange\" />\n          </el-form-item>\n        </el-form>\n        <div style=\"width: 100%;\">\n          <el-button @click=\"backToList\">\n            返回\n          </el-button>\n          <div style=\"float: right;\">\n            <el-button style=\"margin-left: 10px;\" type=\"primary\" @click=\"save\">确定</el-button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- 导航页面  -->\n    <div v-show=\"page == 'navigation'\">\n      <div style=\"padding: 20px;max-height: calc(200vh - 130px);overflow: auto;\">\n        <el-form size=\"small\" >\n          <el-form-item prop=\"startPlace\" label=\"输入起点\">\n            <el-input v-model=\"startPlace.name\" allow-clear/>\n            <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"searchLngByName(startPlace)\">搜索</el-button>\n          </el-form-item>\n          <el-form-item prop=\"startPlaceLng\" label=\"起点经度\">\n            <el-input v-model=\"startPlace.lng\"/>\n          </el-form-item>\n          <el-form-item prop=\"startPlaceLat\" label=\"起点维度\">\n            <el-input v-model=\"startPlace.lat\"/>\n          </el-form-item>\n          <el-form-item prop=\"endPlace\" label=\"输入终点\">\n            <el-input v-model=\"endPlace.name\" allow-clear/>\n            <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"searchLngByName(endPlace)\">搜索</el-button>\n          </el-form-item>\n          <el-form-item prop=\"endPlaceLng\" label=\"终点经度\">\n            <el-input v-model=\"endPlace.lng\"/>\n          </el-form-item>\n          <el-form-item prop=\"endPlaceLat\" label=\"终点维度\">\n            <el-input v-model=\"endPlace.lat\"/>\n          </el-form-item>\n          <el-form-item  label=\"请选择导航路线类型\">\n            <el-select v-model=\"navstyle\" clearable placeholder=\"请选择\">\n              <el-option\n                v-for=\"item in navOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n        </el-form>\n        <div style=\"width: 100%;\">\n          <el-button @click=\"backToList\">\n            返回\n          </el-button>\n          <div style=\"float: right;\">\n            <el-button style=\"margin-left: 10px;\" type=\"primary\" @click=\"searchRoute()\">确定</el-button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- 聚合分析页面 -->\n    <div v-show=\"page =='cluster'\">\n      <div style=\"padding: 20px;max-height: calc(200vh - 130px);overflow: auto;\">\n        \n        <el-form size=\"small\">\n          <el-form-item label=\"聚合方法\">\n            <el-select v-model=\"clusterStyle\" placeholder=\"请选择\" clearable>\n              <el-option\n                v-for=\"item in clusterStyleOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item> \n          <el-form-item label=\"聚合数据\">\n            <el-select v-model=\"selectcludata\" placeholder=\"请选择\">\n              <el-option\n                v-for=\"item in clusterDataOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.label\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"最小停留天数\" v-if=\"clusterStyle==5\">\n            <el-input v-model=\"minstayTime\" placeholder=\"3.0\"></el-input>\n          </el-form-item> \n          <el-form-item label=\"两个点最大间隔天数\" v-if=\"clusterStyle==5\">\n            <el-input v-model=\"maxstayTime\" placeholder=\"3.0\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"模式\">\n            <el-radio-group v-model=\"pattern\">\n              <el-radio :label=\"1\">简化</el-radio>\n              <el-radio :label=\"2\">初始</el-radio>\n              <el-radio :label=\"3\">聚合</el-radio>\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item label=\"几何类型\">\n            <el-radio-group v-model=\"geometricType\">\n              <el-radio :label=\"1\">点</el-radio>\n              <el-radio :label=\"2\">点+线</el-radio>\n            </el-radio-group>\n          </el-form-item>\n        </el-form>\n        \n        <div style=\"width: 100%;\">\n          <el-button @click=\"backToList\">\n            返回\n          </el-button>\n          <div style=\"float: right;\">\n            <el-button style=\"margin-left: 10px;\" type=\"primary\" @click=\"clusave\">确定</el-button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport L from 'leaflet'  // 引入Leaflet库\nimport 'leaflet-markers-canvas'\nimport 'leaflet.markercluster/dist/leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport \"leaflet-canvas-marker\"\nimport Papa from 'papaparse'\nimport axios from 'axios'\nimport DrawPoi from './DrawPoi'\nimport DrawNewPoi from './DrawNewPoi'\nimport * as FileSave from './FileSave'\nimport { getUuid } from '../biz/common'\nimport IconsDialog from '../../../tool/build/IconsDialog.vue'\nimport 'leaflet/dist/leaflet.css'\nimport { douglasPeucker } from '../algo/DouglasPeuker'\nimport { kMeans } from '../algo/kmeans' \nimport { clarans } from '../algo/clarans' \nimport { dbscan } from '../algo/dbscan' \nimport { optics } from '../algo/optics' \nimport {ElePoint, Region, QuadTreeNode} from '../algo/pubMethods'\nimport {convertDateStringToUnix,insertEle,queryEle,\n      convertUnixToDateString,getCenterPoint,isValidLatLng} from '../algo/pubMethods'\nimport { tdbscan } from '../algo/tdbscan' \nimport * as PathLayer from '../comm/PathLayer'\nconst pointerImg = require('@/assets/images/location64.png')\nconst cluPointImg = require('@/assets/images/point.png')\nconst cluCenterPointImg = require('@/assets/images/centerPoint.png')\nlet drawNewPoi\nlet drawPoi\nlet previousLayers = []\nlet markersList = []\nlet markersCanvas\nexport default {\n  components: { IconsDialog },\n  name: 'PoiPanel',\n  data() {\n    return {\n      selectcludata: '',\n      //灰鹤\n      greyCrane:[],\n      //小天鹅\n      cygne:[],\n      // 鸟类1\n      birdOne:[],\n      // 鸟类2\n      birdTwo:[],\n      // 数据模式\n      pattern:2,\n      // 几何类型\n      geometricType:1,\n      // 聚合算法\n      clusterStyle:'',\n      //最大停留时长\n      maxstayTime:'',\n      //最短停留时长\n      minstayTime:'',\n      //聚合方式\n      clusterStyleOptions:[{\n        value:1,\n        label:'CLARANS'\n      },{\n        value:2,\n        label:'K-Means'\n      },{\n        value:3,\n        label:'DBSCAN'\n      },{\n        value:4,\n        label:'OPTICS'\n      },{\n        value:5,\n        label:'T-DBSCAN'\n      }],\n      // 聚合数据\n      clusterDataOptions:[{\n        value:0,\n        label:'灰鹤'\n      },{\n        value:1,\n        label:'小天鹅'\n      },{\n        value:2,\n        label:'鸟类1'\n      },{\n        value:3,\n        label:'鸟类2'\n      }],\n      showpoint: '0',\n      dataList: [], // 数据列表\n      page: 'list', // 当前页面（list 或 edit）\n      currentPoint: {\n        name: '',\n        time: ''\n      }, // 当前编辑的点信息\n      fileList: [], // 上传的文件列表\n      pointerImg: pointerImg, // 指针图片\n      drawing: false, // 是否正在绘制\n      navdrawing: false,\n      keyWord: '', // 搜索关键字\n      nameList:[],\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      startPlace:{ //出发点\n        name:'',\n        lng: '',\n        lat: ''\n      },\n      endPlace:{ //终点\n        name:'',\n        lng: '',\n        lat: ''\n      },\n      //导航样式\n      navstyle: 0,\n      navOptions:[{\n        value:0,\n        label:'最快路线'\n      },{\n        value:1,\n        label:'最短路线'\n      },{\n        value:2,\n        label:'避开高速'\n      },{\n        value:3,\n        label:'步行'\n      }]\n    }\n  },\n  watch: {  \n    clusterStyle(newVal) {  \n      if (newVal) { // 确保有值被选中  \n        this.pattern = 3 // 设置为聚合  \n      }else{\n        this.pattern = 2\n      }  \n    },\n    pattern(newVal){\n      if(newVal !== 3){\n        this.clusterStyle = ''\n      }\n    }  \n  },\n  mounted() {\n    // 初始化 drawPoi 和 PathLayer\n    this.$nextTick(() => {\n      drawNewPoi = new DrawNewPoi(this)\n      drawPoi = new DrawPoi(this)\n      PathLayer.init()\n    })\n    // 加载数据\n    this.loadData()\n    this.greyCrane = this.loadCSV('灰鹤8.1-11.30轨迹点')\n    this.cygne = this.loadCSV('小天鹅')\n    this.birdOne = this.loadCSV('鸟类1')\n    this.birdTwo = this.loadCSV('鸟类2')\n  },\n  beforeDestroy() {\n    // 清除绘制\n    drawNewPoi.clear()\n    drawNewPoi.drawCancel()\n  },\n  methods: {\n    clusave() {\n      if(markersCanvas){\n        markersCanvas.removeMarkers(markersList)\n        markersCanvas.clear()\n        markersList = [];\n      }\n      // 清理先前图层\n      previousLayers.forEach(layer => {\n        map.removeLayer(layer);\n      });\n      previousLayers = [];\n      // 添加新的MarkersCanvas\n      markersCanvas = new L.MarkersCanvas();\n      markersCanvas.addTo(map);\n      previousLayers.push(markersCanvas)\n      \n      // 定义通用图标\n      const icon = L.icon({\n        iconUrl: cluPointImg,\n        iconSize: [12, 12],\n        iconAnchor: [6, 6]\n      });\n      // 定义栖息地图标\n      const iconCenter = L.icon({\n        iconUrl: cluCenterPointImg,\n        iconSize: [15, 15],\n        iconAnchor: [6, 6]\n      });\n\n      // 根据鸟类选择数据\n      let temp_bird_data = this.getSelectedBirdData();\n\n      // 没有选择聚类方式时\n      if (this.clusterStyle.length === 0) {\n        this.displayWithoutClustering(temp_bird_data, markersCanvas, icon,this.pattern);\n      } else {\n        this.displayWithClustering(temp_bird_data, markersCanvas, iconCenter);\n      }\n\n      // 弹窗提示已经聚类结束\n      this.$message({\n        message:'聚类完成',\n        type:'success'\n      })\n\n    },\n\n    // 根据选择的鸟类返回对应数据\n    getSelectedBirdData() {\n      switch(this.selectcludata) {\n        case '灰鹤':\n          return this.greyCrane;\n        case '小天鹅':\n          return this.cygne;\n        case '鸟类1':\n          return this.birdOne;\n        case '鸟类2':\n          return this.birdTwo;\n        default:\n          return [];\n      }\n    },\n\n    // 不聚类时的展示逻辑\n    displayWithoutClustering(temp_bird_data, markersCanvas, icon,pattern) {\n      if(pattern == '1'){ //简化版本，调用了滤波算法\n        temp_bird_data.then(birdArr => {\n          let latlngs = [];\n          birdArr = douglasPeucker(birdArr,25000)\n          birdArr.forEach(item => {\n            if (isValidLatLng(item)) {\n              const marker = this.createMarker(item, icon);\n              markersCanvas.addMarker(marker);\n              markersList.push(marker);\n              latlngs.push([item.lat, item.lng]);\n            }\n          });\n          this.handleGeometricType(latlngs, markersCanvas);\n        });\n      }else{\n        //最原始的点\n        temp_bird_data.then(birdArr => {\n          let latlngs = [];\n          birdArr.forEach(item => {\n            if (isValidLatLng(item)) {\n              const marker = this.createMarker(item, icon);\n              markersList.push(marker);\n              markersCanvas.addMarker(marker);\n              latlngs.push([item.lat, item.lng]);\n            }\n          });\n          this.handleGeometricType(latlngs, markersCanvas);\n        });\n      }\n    },\n\n    // 聚类后的展示逻辑\n    displayWithClustering(temp_bird_data, markersCanvas, icon) {\n      temp_bird_data.then(birdArr => {\n        let clusterCenters = [];\n        let latlngs = [];\n        // 建立四叉树索引方便后续的查询操作\n        const rootRegion = new Region(-90, 90, -180, 180);\n        const root = new QuadTreeNode(1, rootRegion);\n        var points = birdArr\n        points.forEach((p, index) => {\n            p.index = index;\n            insertEle(root, p);\n        });\n        switch(this.clusterStyle) {\n          case 1:\n            clusterCenters = clarans(points, 20, 5, 100);\n            break;\n          case 2:\n            clusterCenters = kMeans(points, 20);\n            break;\n          case 3:\n            clusterCenters = dbscan(points, 25, 70);\n            break;\n          case 4:\n            clusterCenters =  optics(points,25,70);\n            break;\n          case 5:\n            if(this.maxstayTime == ''){\n              this.maxstayTime = 3\n            }\n            if(this.minstayTime == ''){\n              this.minstayTime = 3\n            }\n            const gpsPoints = []\n            birdArr.forEach(item=>{\n              const temp = new ElePoint(parseFloat(item.lat), parseFloat(item.lng), convertDateStringToUnix(item.time), gpsPoints.length);\n              gpsPoints.push(temp);\n            })\n            \n            const {clusters,CorePoints} = tdbscan(gpsPoints,25000, this.minstayTime, this.maxstayTime)\n            for(const p of CorePoints){\n                var maxstayTime = 0\n                const point = birdArr[p.index]\n                const startTime = point.time\n                var endTime = point.time\n                const timeP = convertDateStringToUnix(point.time)\n                for(let i = 0;i<clusters.length;i++){\n                  if(clusters[p.index] == clusters[i]){\n                    const timeQ = convertDateStringToUnix(birdArr[i].time)\n                    const disTime = Math.abs(timeP - timeQ)/(60*60*24)\n                    if(disTime>=maxstayTime){\n                      maxstayTime = disTime\n                      endTime = birdArr[i].time\n                    }\n                  }\n                }\n                clusterCenters.push({maxstayTime:maxstayTime,startTimeStr:startTime,\n                  endTimeStr:endTime,centerPoint:point\n                })\n            }\n            break;\n        }\n        if(clusterCenters.length>=15){\n          clusterCenters = douglasPeucker(clusterCenters,5000)\n        }\n        console.log(clusterCenters)\n        if(this.clusterStyle == 5){\n          clusterCenters.forEach(item =>{\n            const centerPoint = item.centerPoint\n            const maxstayTime = item.maxstayTime\n            const startTimeStr = item.startTimeStr\n            const endTimeStr = item.endTimeStr\n            const marker = this.createCenterMarker({centerPoint,maxstayTime,startTimeStr,endTimeStr}, icon);\n            markersCanvas.addMarker(marker);\n            previousLayers.push(marker)\n            markersList.push(marker)\n            latlngs.push([centerPoint.lat, centerPoint.lng]);\n          })\n        }else{\n          // 计算停歇时间 做分级渲染\n          clusterCenters.forEach(item =>{\n            const point  = new ElePoint(item.lat,item.lng,convertDateStringToUnix(item.time),item.index)\n            const EpsResults = []\n            queryEle(root,point,EpsResults,25000)\n            const centerPoint = getCenterPoint(EpsResults)\n            const times = EpsResults.map(point => convertDateStringToUnix(point.time))\n            const startTime = new Date(Math.min(...times))\n            const endTime = new Date(Math.max(...times))\n            const startTimeStr = convertUnixToDateString(startTime)\n            const endTimeStr = convertUnixToDateString(endTime)\n            const maxstayTime = (Math.max(...times) - Math.min(...times))/(60*60*24)\n            if(isValidLatLng(centerPoint)){\n              const marker = this.createCenterMarker({centerPoint,maxstayTime,startTimeStr,endTimeStr}, icon);\n              markersCanvas.addMarker(marker);\n              previousLayers.push(marker)\n              markersList.push(marker)\n              latlngs.push([centerPoint.lat, centerPoint.lng]);\n            }\n          })\n        }\n        this.handleGeometricType(latlngs, markersCanvas);\n      });\n    },\n    // 创建栖息地点位，时间越长，icon的size将会随着调整\n    createCenterMarker(item,icon){\n       return L.marker([item.centerPoint.lat, item.centerPoint.lng], { icon })\n        .bindPopup(`停留时间:${item.maxstayTime.toFixed(2)}天<p>\n          开始时间:${item.startTimeStr}<p>\n          结束时间:${item.endTimeStr}<p>\n          经度:${parseFloat(item.centerPoint.lng).toFixed(5)}<p>纬度:${parseFloat(item.centerPoint.lat).toFixed(5)}`)\n        .on({\n          mouseover(e) { this.openPopup(); },\n          mouseout(e) { this.closePopup(); }\n        });\n    },\n    // 创建普通点标记\n    createMarker(item, icon) {\n      return L.marker([item.lat, item.lng], { icon })\n        .bindPopup(`时间:${item.time}<p>经度:${parseFloat(item.lng).toFixed(5)}<p>纬度:${parseFloat(item.lat).toFixed(5)}`)\n        .on({\n          mouseover(e) { this.openPopup(); },\n          mouseout(e) { this.closePopup(); }\n        });\n    },\n\n    // 根据几何类型绘制\n    handleGeometricType(latlngs, markersCanvas) {\n      if (this.geometricType != '1') {\n        const polyline = L.polyline(latlngs, { color: 'red', weight: 3 }).addTo(map);\n        const decorator = L.polylineDecorator(polyline, {\n          patterns: [\n            { offset: 0, repeat: 35, symbol: L.Symbol.arrowHead({\n              pixelSize: 5,\n              headAngle: 75,\n              polygon: false,\n              pathOptions: { stroke: true, weight: 2, color: 'blue' }\n            })}\n          ]\n        }).addTo(map);\n        previousLayers.push(decorator);\n        previousLayers.push(polyline);\n      }\n    },\n    // 读取csv文件\n    async loadCSV(data) {    \n      const csvUrl = `../resource/${data}.csv`;    \n      try {    \n        const response = await fetch(csvUrl);    \n        if (!response.ok) throw new Error('Network response was not ok');    \n        const csv = await response.text();    \n        const results = Papa.parse(csv, {  \n          header: true,  \n          transform: function(value, field) {  \n            if (field === 'lng' || field === 'lat') {  \n              const num = parseFloat(value);  \n              return isNaN(num) ? value : num;  \n            }  \n            return value;  \n          }  \n        });   \n        \n        // 按照第一列时间字符串排序\n        const sortedData = results.data.sort((a, b) => {\n          const timeA = convertDateStringToUnix(a[Object.keys(a)[0]]); // 第一列的时间值\n          const timeB = convertDateStringToUnix(b[Object.keys(b)[0]]);\n          return timeA - timeB; // 升序排列\n        });\n        \n        return sortedData;    \n      } catch (error) {    \n        console.error('Error loading CSV:', error);    \n        throw error; \n      }    \n    },\n    //根据地名查找经纬度\n    searchLngByName(options){\n      //湖南省环球信士公司\n      //请求： http://api.tianditu.gov.cn/geocoder?ds={\"keyWord\":\"北京市延庆区延庆镇莲花池村前街50夕阳红养老院\"}&tk=您的密钥\n      axios.get('http://api.tianditu.gov.cn/geocoder?ds={\"keyWord\":\"' + options.name + '\"}&tk=89dea3eab561f0dfb9867e531415e015').then(res => {\n        options.lng=res.data.location.lon\n        options.lat=res.data.location.lat\n      }).catch(err => {\n        console.error('Error fetching route:', err)\n      }) \n    },\n    //点击节点\n    handleNodeClick(data){\n      console.log('节点数据',data)\n      console.log('节点ID',data.$treeNodeId)\n    },\n    //导航\n    navigation(){\n      this.page='navigation' //跳转到导航界面\n      this.navdrawing = true\n      drawPoi.draw()\n    },\n    //绘制导航路线\n    searchRoute(){\n      this.showPath(this.startPlace,this.endPlace,this.navstyle)\n    },\n    //查询地名\n    searchByName(keyWord){\n      const list = []\n      FileSave.getList().then(res => {\n        const temp = res\n        if(temp){\n          temp.forEach(item =>{\n            if(item.name.includes(keyWord)){\n              list.push(item)\n            }\n          })\n        }\n      })\n      this.dataList = list\n    },\n    // 加载数据\n    loadData() {\n      FileSave.getList().then(res => {\n        console.log('res', res)\n        const list = res\n        if (res) {\n          // 处理图片\n          list.forEach(item => {\n            if (item.photos) {\n              const arr = item.photos.split('#')\n              if (arr.length > 0) {\n                item['photo0'] = arr[0]\n                item['photoArr'] = arr\n              }\n            }\n          })\n          this.dataList = list\n        } else {\n          this.dataList = []\n        }\n        const nameList = []\n        list.forEach(item =>{\n          if(item.name){\n              const [province,place] = item.name.split('-')\n              const provinces = nameList // 省份层级是树的根\n              const provinceNode = findOrCreateParent(provinces, province)\n              const places = provinceNode.children\n              findOrCreateParent(places, place) // 城市作为省份的子节点\n            }\n          }\n        )\n        this.nameList=nameList\n      })\n    },\n    // 聚合分析\n    clusterAnalysis(){\n      this.page = 'cluster'\n      drawNewPoi.clear()\n      drawPoi.clear()\n      PathLayer.clear()\n    },\n    // 开始绘制\n    startDraw() {\n      this.drawing = true\n      this.fileList = []\n      drawNewPoi.draw()\n    },\n    // 取消绘制\n    cancelDraw() {\n      drawNewPoi.drawCancel()\n      this.drawing = false\n    },\n    // 返回列表页面\n    backToList() {\n      this.page = 'list'\n      drawNewPoi.clear()\n      drawPoi.clear()\n      PathLayer.clear()\n      this.navdrawing = false\n      if(this.startPlace!=''){\n        this.startPlace.name=''\n        this.startPlace.lng=''\n        this.startPlace.lat=''\n        this.endPlace.name=''\n        this.endPlace.lng=''\n        this.endPlace.lat=''\n\n      }\n      this.$refs.poiForm.resetFields()\n    },\n    // 保存数据\n    save() {\n      this.$refs.poiForm.validate(valid => {\n        if (!valid) {\n          return\n        }\n        const currentPoint = this.currentPoint\n\n        const param = {\n          name: currentPoint.name,\n          time: currentPoint.time,\n          longitude: currentPoint.lng,\n          latitude: currentPoint.lat,\n          altitude: currentPoint.altitude || 0,\n          photos: '',\n          address: '',\n          desc: currentPoint.desc || ''\n        }\n        const photos = []\n        if (this.fileList.length > 0) {\n          this.fileList.forEach(f => {\n            photos.push(f.name)\n          })\n        }\n        if (photos.length > 0) {\n          param.photos = photos.join('#')\n        }\n\n        if (currentPoint.id) {\n          const item = this.dataList.find(d => d.id === currentPoint.id)\n          if (item) {\n            item.name = currentPoint.name || ''\n            item.time = currentPoint.time || ''\n            item.longitude = currentPoint.lng\n            item.latitude = currentPoint.lat\n            item.altitude = currentPoint.altitude || 0\n            item.photos = param.photos\n            item.address = param.address\n            item.desc = currentPoint.desc || ''\n            FileSave.create(this.dataList).then(res => {\n              this.$messageSuccess()\n              this.backToList()\n            })\n          }\n        } else {\n          param['id'] = getUuid()\n          this.dataList.push(param)\n          FileSave.create(this.dataList).then(res => {\n            this.$messageSuccess()\n            this.backToList()\n          })\n        }\n        this.loadData()\n      })\n    },\n    // 飞到指定点\n    flyTo(item) {\n      drawNewPoi.flyTo(item)\n    },\n    // 编辑指定点\n    edit(item) {\n      this.fileList = []\n      const photos = item.photos\n      if (photos) {\n        const arr = photos.split('#')\n        arr.forEach(url => {\n          this.fileList.push({\n            status: 'done',\n            url: url,\n            name: url,\n            uid: getUuid()\n          })\n        })\n      }\n      drawNewPoi.edit(item)\n    },\n    // 删除指定点\n    deleteClick(item) {\n      const idx = this.dataList.findIndex(d => d.id === item.id)\n      this.dataList.splice(idx, 1)\n      FileSave.create(this.dataList).then(res => {\n        this.$messageSuccess()\n        this.loadData()\n        drawNewPoi.clearById(item.id)\n      })\n    },\n    // 文件列表变化\n    listChange(list) {\n      this.fileList = list\n    },\n    // 经纬度变化\n    latLngChange(v) {\n      if (this.currentPoint.lat && this.currentPoint.lng) {\n        drawNewPoi.setLatLng(this.currentPoint.lat, this.currentPoint.lng)\n      }\n    },\n    // 显示路径\n    showPath(start,end,style) {\n      PathLayer.path(start,end,style)\n    }\n  }\n}\n// 辅助函数：在树中查找或添加父节点\nfunction findOrCreateParent(parents, parentName) {\n  let parent = parents.find(p => p.label === parentName);\n  if (!parent) {\n    parent = { label: parentName, children: [] };\n    parents.push(parent);\n  }\n  return parent;\n}\n\n</script>\n\n<style scoped>\n.poiImg {\n  width: 40px;\n  height: 40px;\n  border-radius: 5px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}