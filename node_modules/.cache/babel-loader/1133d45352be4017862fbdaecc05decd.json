{"remainingRequest":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\babel-loader\\lib\\index.js!E:\\workspacevsCode\\web-ui-travel\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\workspacevsCode\\web-ui-travel\\src\\views\\AMyWork\\tools\\algo\\pubMethods.js","dependencies":[{"path":"E:\\workspacevsCode\\web-ui-travel\\src\\views\\AMyWork\\tools\\algo\\pubMethods.js","mtime":1726235092718},{"path":"E:\\workspacevsCode\\web-ui-travel\\babel.config.js","mtime":1677117676000},{"path":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\workspacevsCode\\web-ui-travel\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1720856214296}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJFOi93b3Jrc3BhY2V2c0NvZGUvd2ViLXVpLXRyYXZlbC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQuanMiKS5kZWZhdWx0OwpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuUmVnaW9uID0gZXhwb3J0cy5RdWFkVHJlZU5vZGUgPSBleHBvcnRzLkVsZVBvaW50ID0gdm9pZCAwOwpleHBvcnRzLmNhbGN1bGF0ZURpc3RhbmNlID0gY2FsY3VsYXRlRGlzdGFuY2U7CmV4cG9ydHMuY3JlYXRlQ2hpbGROb2RlID0gY3JlYXRlQ2hpbGROb2RlOwpleHBvcnRzLmhhdmVyc2luZSA9IGhhdmVyc2luZTsKZXhwb3J0cy5pbnNlcnRFbGUgPSBpbnNlcnRFbGU7CmV4cG9ydHMucXVlcnlFbGUgPSBxdWVyeUVsZTsKZXhwb3J0cy5zcGxpdE5vZGUgPSBzcGxpdE5vZGU7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIik7CnZhciBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkU6L3dvcmtzcGFjZXZzQ29kZS93ZWItdWktdHJhdmVsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIuanMiKSk7CnZhciBfY3JlYXRlQ2xhc3MyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJFOi93b3Jrc3BhY2V2c0NvZGUvd2ViLXVpLXRyYXZlbC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcy5qcyIpKTsKdmFyIF9jbGFzc0NhbGxDaGVjazIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkU6L3dvcmtzcGFjZXZzQ29kZS93ZWItdWktdHJhdmVsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrLmpzIikpOwovKioNCiAqIOiuoeeul+S4pOS4queCueeahOi3neemu++8jOS9v+eUqEhhdmVyc2luZeeQg+mdouaooeWei+iuoeeul+aWueazlQ0KICogQHBhcmFtIHt9IHBvaW50MSANCiAqIEBwYXJhbSB7Kn0gcG9pbnQyIA0KICogQHJldHVybnMgDQogKi8KZnVuY3Rpb24gY2FsY3VsYXRlRGlzdGFuY2UocG9pbnQxLCBwb2ludDIpIHsKICB2YXIgbGF0MSA9IHBhcnNlRmxvYXQocG9pbnQxLmxhdCk7CiAgdmFyIGxuZzEgPSBwYXJzZUZsb2F0KHBvaW50MS5sbmcpOwogIHZhciBsYXQyID0gcGFyc2VGbG9hdChwb2ludDIubGF0KTsKICB2YXIgbG5nMiA9IHBhcnNlRmxvYXQocG9pbnQyLmxuZyk7CiAgdmFyIHJhZExhdDEgPSBsYXQxICogTWF0aC5QSSAvIDE4MC4wOwogIHZhciByYWRMYXQyID0gbGF0MiAqIE1hdGguUEkgLyAxODAuMDsKICB2YXIgYSA9IHJhZExhdDEgLSByYWRMYXQyOwogIHZhciBiID0gbG5nMSAqIE1hdGguUEkgLyAxODAuMCAtIGxuZzIgKiBNYXRoLlBJIC8gMTgwLjA7CiAgdmFyIHMgPSAyICogTWF0aC5hc2luKE1hdGguc3FydChNYXRoLnBvdyhNYXRoLnNpbihhIC8gMiksIDIpICsgTWF0aC5jb3MocmFkTGF0MSkgKiBNYXRoLmNvcyhyYWRMYXQyKSAqIE1hdGgucG93KE1hdGguc2luKGIgLyAyKSwgMikpKTsKICByZXR1cm4gcyAqIDYzNzA5OTYuODE7Cn0KCi8qKg0KICog6L+Z6YeM5piv5Zub5Y+J5qCR55qE5pWw5o2u57uT5p6E5Y+K566X5rOVDQogKi8KdmFyIE1BWF9FTEVfTlVNID0gMTAwMDsKdmFyIEVBUlRIX1JBRElVUyA9IDYzNzAuOTk2ODE7CnZhciBSZWdpb24gPSBleHBvcnRzLlJlZ2lvbiA9IC8qI19fUFVSRV9fKi8oMCwgX2NyZWF0ZUNsYXNzMi5kZWZhdWx0KShmdW5jdGlvbiBSZWdpb24odXAsIGJvdHRvbSwgbGVmdCwgcmlnaHQpIHsKICAoMCwgX2NsYXNzQ2FsbENoZWNrMi5kZWZhdWx0KSh0aGlzLCBSZWdpb24pOwogIHRoaXMudXAgPSB1cDsKICB0aGlzLmJvdHRvbSA9IGJvdHRvbTsKICB0aGlzLmxlZnQgPSBsZWZ0OwogIHRoaXMucmlnaHQgPSByaWdodDsKfSk7CnZhciBFbGVQb2ludCA9IGV4cG9ydHMuRWxlUG9pbnQgPSAvKiNfX1BVUkVfXyovKDAsIF9jcmVhdGVDbGFzczIuZGVmYXVsdCkoZnVuY3Rpb24gRWxlUG9pbnQobGF0LCBsbmcsIHRpbWVzdGFtcCwgaW5kZXgpIHsKICAoMCwgX2NsYXNzQ2FsbENoZWNrMi5kZWZhdWx0KSh0aGlzLCBFbGVQb2ludCk7CiAgdGhpcy5sYXQgPSBsYXQ7CiAgdGhpcy5sbmcgPSBsbmc7CiAgdGhpcy50aW1lc3RhbXAgPSB0aW1lc3RhbXA7CiAgdGhpcy5pbmRleCA9IGluZGV4Owp9KTsKdmFyIFF1YWRUcmVlTm9kZSA9IGV4cG9ydHMuUXVhZFRyZWVOb2RlID0gLyojX19QVVJFX18qLygwLCBfY3JlYXRlQ2xhc3MyLmRlZmF1bHQpKGZ1bmN0aW9uIFF1YWRUcmVlTm9kZShkZXB0aCwgcmVnaW9uKSB7CiAgKDAsIF9jbGFzc0NhbGxDaGVjazIuZGVmYXVsdCkodGhpcywgUXVhZFRyZWVOb2RlKTsKICB0aGlzLmRlcHRoID0gZGVwdGg7CiAgdGhpcy5pc19sZWFmID0gdHJ1ZTsKICB0aGlzLnJlZ2lvbiA9IHJlZ2lvbjsKICB0aGlzLkxVID0gbnVsbDsKICB0aGlzLkxCID0gbnVsbDsKICB0aGlzLlJVID0gbnVsbDsKICB0aGlzLlJCID0gbnVsbDsKICB0aGlzLmVsZV9udW0gPSAwOwogIHRoaXMuZWxlX2xpc3QgPSBbXTsKfSk7CmZ1bmN0aW9uIGluc2VydEVsZShub2RlLCBlbGUpIHsKICBpZiAobm9kZS5pc19sZWFmKSB7CiAgICBpZiAobm9kZS5lbGVfbnVtID49IE1BWF9FTEVfTlVNKSB7CiAgICAgIHNwbGl0Tm9kZShub2RlKTsKICAgICAgaW5zZXJ0RWxlKG5vZGUsIGVsZSk7CiAgICB9IGVsc2UgewogICAgICBub2RlLmVsZV9saXN0LnB1c2goZWxlKTsKICAgICAgbm9kZS5lbGVfbnVtKys7CiAgICB9CiAgfSBlbHNlIHsKICAgIHZhciBtaWRWZXJ0aWNhbCA9IChub2RlLnJlZ2lvbi51cCArIG5vZGUucmVnaW9uLmJvdHRvbSkgLyAyOwogICAgdmFyIG1pZEhvcml6b250YWwgPSAobm9kZS5yZWdpb24ubGVmdCArIG5vZGUucmVnaW9uLnJpZ2h0KSAvIDI7CiAgICBpZiAoZWxlLmxhdCA+IG1pZFZlcnRpY2FsKSB7CiAgICAgIGlmIChlbGUubG5nID4gbWlkSG9yaXpvbnRhbCkgewogICAgICAgIGluc2VydEVsZShub2RlLlJVLCBlbGUpOwogICAgICB9IGVsc2UgewogICAgICAgIGluc2VydEVsZShub2RlLkxVLCBlbGUpOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICBpZiAoZWxlLmxuZyA+IG1pZEhvcml6b250YWwpIHsKICAgICAgICBpbnNlcnRFbGUobm9kZS5SQiwgZWxlKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpbnNlcnRFbGUobm9kZS5MQiwgZWxlKTsKICAgICAgfQogICAgfQogIH0KfQpmdW5jdGlvbiBzcGxpdE5vZGUobm9kZSkgewogIHZhciBtaWRWZXJ0aWNhbCA9IChub2RlLnJlZ2lvbi51cCArIG5vZGUucmVnaW9uLmJvdHRvbSkgLyAyOwogIHZhciBtaWRIb3Jpem9udGFsID0gKG5vZGUucmVnaW9uLmxlZnQgKyBub2RlLnJlZ2lvbi5yaWdodCkgLyAyOwogIG5vZGUuaXNfbGVhZiA9IGZhbHNlOwogIG5vZGUuUlUgPSBjcmVhdGVDaGlsZE5vZGUobm9kZS5kZXB0aCArIDEsIG5ldyBSZWdpb24obWlkVmVydGljYWwsIG5vZGUucmVnaW9uLnVwLCBtaWRIb3Jpem9udGFsLCBub2RlLnJlZ2lvbi5yaWdodCkpOwogIG5vZGUuTFUgPSBjcmVhdGVDaGlsZE5vZGUobm9kZS5kZXB0aCArIDEsIG5ldyBSZWdpb24obWlkVmVydGljYWwsIG5vZGUucmVnaW9uLnVwLCBub2RlLnJlZ2lvbi5sZWZ0LCBtaWRIb3Jpem9udGFsKSk7CiAgbm9kZS5SQiA9IGNyZWF0ZUNoaWxkTm9kZShub2RlLmRlcHRoICsgMSwgbmV3IFJlZ2lvbihub2RlLnJlZ2lvbi5ib3R0b20sIG1pZFZlcnRpY2FsLCBtaWRIb3Jpem9udGFsLCBub2RlLnJlZ2lvbi5yaWdodCkpOwogIG5vZGUuTEIgPSBjcmVhdGVDaGlsZE5vZGUobm9kZS5kZXB0aCArIDEsIG5ldyBSZWdpb24obm9kZS5yZWdpb24uYm90dG9tLCBtaWRWZXJ0aWNhbCwgbm9kZS5yZWdpb24ubGVmdCwgbWlkSG9yaXpvbnRhbCkpOwogIHZhciBlbGVtZW50c1RvUmVkaXN0cmlidXRlID0gbm9kZS5lbGVfbGlzdDsKICBub2RlLmVsZV9saXN0ID0gW107CiAgbm9kZS5lbGVfbnVtID0gMDsKICB2YXIgX2l0ZXJhdG9yID0gKDAsIF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyMi5kZWZhdWx0KShlbGVtZW50c1RvUmVkaXN0cmlidXRlKSwKICAgIF9zdGVwOwogIHRyeSB7CiAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICB2YXIgZWxlID0gX3N0ZXAudmFsdWU7CiAgICAgIGluc2VydEVsZShub2RlLCBlbGUpOwogICAgfQogIH0gY2F0Y2ggKGVycikgewogICAgX2l0ZXJhdG9yLmUoZXJyKTsKICB9IGZpbmFsbHkgewogICAgX2l0ZXJhdG9yLmYoKTsKICB9Cn0KZnVuY3Rpb24gY3JlYXRlQ2hpbGROb2RlKGRlcHRoLCByZWdpb24pIHsKICByZXR1cm4gbmV3IFF1YWRUcmVlTm9kZShkZXB0aCwgcmVnaW9uKTsKfQpmdW5jdGlvbiBxdWVyeUVsZShub2RlLCBlbGUsIHJlc3VsdHMsIGVwcykgewogIGlmIChub2RlLmlzX2xlYWYpIHsKICAgIHZhciBfaXRlcmF0b3IyID0gKDAsIF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyMi5kZWZhdWx0KShub2RlLmVsZV9saXN0KSwKICAgICAgX3N0ZXAyOwogICAgdHJ5IHsKICAgICAgZm9yIChfaXRlcmF0b3IyLnMoKTsgIShfc3RlcDIgPSBfaXRlcmF0b3IyLm4oKSkuZG9uZTspIHsKICAgICAgICB2YXIgcHQgPSBfc3RlcDIudmFsdWU7CiAgICAgICAgaWYgKGhhdmVyc2luZShwdC5sYXQsIHB0LmxuZywgZWxlLmxhdCwgZWxlLmxuZykgPD0gZXBzKSB7CiAgICAgICAgICByZXN1bHRzLnB1c2gocHQpOwogICAgICAgIH0KICAgICAgfQogICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgIF9pdGVyYXRvcjIuZShlcnIpOwogICAgfSBmaW5hbGx5IHsKICAgICAgX2l0ZXJhdG9yMi5mKCk7CiAgICB9CiAgfSBlbHNlIHsKICAgIHZhciBtaWRWZXJ0aWNhbCA9IChub2RlLnJlZ2lvbi51cCArIG5vZGUucmVnaW9uLmJvdHRvbSkgLyAyOwogICAgdmFyIG1pZEhvcml6b250YWwgPSAobm9kZS5yZWdpb24ubGVmdCArIG5vZGUucmVnaW9uLnJpZ2h0KSAvIDI7CiAgICBpZiAoZWxlLmxhdCA+IG1pZFZlcnRpY2FsKSB7CiAgICAgIGlmIChlbGUubG5nID4gbWlkSG9yaXpvbnRhbCkgewogICAgICAgIHF1ZXJ5RWxlKG5vZGUuUlUsIGVsZSwgcmVzdWx0cywgZXBzKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBxdWVyeUVsZShub2RlLkxVLCBlbGUsIHJlc3VsdHMsIGVwcyk7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIGlmIChlbGUubG5nID4gbWlkSG9yaXpvbnRhbCkgewogICAgICAgIHF1ZXJ5RWxlKG5vZGUuUkIsIGVsZSwgcmVzdWx0cywgZXBzKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBxdWVyeUVsZShub2RlLkxCLCBlbGUsIHJlc3VsdHMsIGVwcyk7CiAgICAgIH0KICAgIH0KICB9Cn0KZnVuY3Rpb24gaGF2ZXJzaW5lKGxhdDEsIGxuZzEsIGxhdDIsIGxuZzIpIHsKICB2YXIgZExhdCA9IChsYXQyIC0gbGF0MSkgKiBNYXRoLlBJIC8gMTgwOwogIHZhciBkTG5nID0gKGxuZzIgLSBsbmcxKSAqIE1hdGguUEkgLyAxODA7CiAgdmFyIGEgPSBNYXRoLnNpbihkTGF0IC8gMikgKiBNYXRoLnNpbihkTGF0IC8gMikgKyBNYXRoLmNvcyhsYXQxICogTWF0aC5QSSAvIDE4MCkgKiBNYXRoLmNvcyhsYXQyICogTWF0aC5QSSAvIDE4MCkgKiBNYXRoLnNpbihkTG5nIC8gMikgKiBNYXRoLnNpbihkTG5nIC8gMik7CiAgdmFyIGMgPSAyICogTWF0aC5hdGFuMihNYXRoLnNxcnQoYSksIE1hdGguc3FydCgxIC0gYSkpOwogIHJldHVybiBFQVJUSF9SQURJVVMgKiBjICogMTAwMDsgLy8g6L2s5o2i5Li657GzCn0="},{"version":3,"names":["calculateDistance","point1","point2","lat1","parseFloat","lat","lng1","lng","lat2","lng2","radLat1","Math","PI","radLat2","a","b","s","asin","sqrt","pow","sin","cos","MAX_ELE_NUM","EARTH_RADIUS","Region","exports","_createClass2","default","up","bottom","left","right","_classCallCheck2","ElePoint","timestamp","index","QuadTreeNode","depth","region","is_leaf","LU","LB","RU","RB","ele_num","ele_list","insertEle","node","ele","splitNode","push","midVertical","midHorizontal","createChildNode","elementsToRedistribute","_iterator","_createForOfIteratorHelper2","_step","n","done","value","err","e","f","queryEle","results","eps","_iterator2","_step2","pt","haversine","dLat","dLng","c","atan2"],"sources":["E:/workspacevsCode/web-ui-travel/src/views/AMyWork/tools/algo/pubMethods.js"],"sourcesContent":["/**\r\n * 计算两个点的距离，使用Haversine球面模型计算方法\r\n * @param {} point1 \r\n * @param {*} point2 \r\n * @returns \r\n */\r\nexport  function calculateDistance(point1, point2) {\r\n    const lat1 = parseFloat(point1.lat);\r\n    const lng1 = parseFloat(point1.lng);\r\n    const lat2 = parseFloat(point2.lat);\r\n    const lng2 = parseFloat(point2.lng);\r\n\r\n    const radLat1 = lat1 * Math.PI / 180.0;\r\n    const radLat2 = lat2 * Math.PI / 180.0;\r\n    const a = radLat1 - radLat2;\r\n    const b = (lng1 * Math.PI / 180.0) - (lng2 * Math.PI / 180.0);\r\n    const s = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a / 2), 2) +\r\n        Math.cos(radLat1) * Math.cos(radLat2) * Math.pow(Math.sin(b / 2), 2)));\r\n    return s * 6370996.81;\r\n}\r\n\r\n/**\r\n * 这里是四叉树的数据结构及算法\r\n */\r\nconst MAX_ELE_NUM = 1000;\r\nconst EARTH_RADIUS = 6370.99681;\r\nexport class Region {\r\n    constructor(up, bottom, left, right) {\r\n        this.up = up;\r\n        this.bottom = bottom;\r\n        this.left = left;\r\n        this.right = right;\r\n    }\r\n}\r\n\r\nexport class ElePoint {\r\n    constructor(lat, lng, timestamp, index) {\r\n        this.lat = lat;\r\n        this.lng = lng;\r\n        this.timestamp = timestamp;\r\n        this.index = index;\r\n    }\r\n}\r\n\r\nexport class QuadTreeNode {\r\n    constructor(depth, region) {\r\n        this.depth = depth;\r\n        this.is_leaf = true;\r\n        this.region = region;\r\n        this.LU = null;\r\n        this.LB = null;\r\n        this.RU = null;\r\n        this.RB = null;\r\n        this.ele_num = 0;\r\n        this.ele_list = [];\r\n    }\r\n}\r\n\r\nexport function insertEle(node, ele) {\r\n    if (node.is_leaf) {\r\n        if (node.ele_num >= MAX_ELE_NUM) {\r\n            splitNode(node);\r\n            insertEle(node, ele);\r\n        } else {\r\n            node.ele_list.push(ele);\r\n            node.ele_num++;\r\n        }\r\n    } else {\r\n        const midVertical = (node.region.up + node.region.bottom) / 2;\r\n        const midHorizontal = (node.region.left + node.region.right) / 2;\r\n        if (ele.lat > midVertical) {\r\n            if (ele.lng > midHorizontal) {\r\n                insertEle(node.RU, ele);\r\n            } else {\r\n                insertEle(node.LU, ele);\r\n            }\r\n        } else {\r\n            if (ele.lng > midHorizontal) {\r\n                insertEle(node.RB, ele);\r\n            } else {\r\n                insertEle(node.LB, ele);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function splitNode(node) {\r\n    const midVertical = (node.region.up + node.region.bottom) / 2;\r\n    const midHorizontal = (node.region.left + node.region.right) / 2;\r\n\r\n    node.is_leaf = false;\r\n    node.RU = createChildNode(node.depth + 1, new Region(midVertical, node.region.up, midHorizontal, node.region.right));\r\n    node.LU = createChildNode(node.depth + 1, new Region(midVertical, node.region.up, node.region.left, midHorizontal));\r\n    node.RB = createChildNode(node.depth + 1, new Region(node.region.bottom, midVertical, midHorizontal, node.region.right));\r\n    node.LB = createChildNode(node.depth + 1, new Region(node.region.bottom, midVertical, node.region.left, midHorizontal));\r\n\r\n    const elementsToRedistribute = node.ele_list;\r\n    node.ele_list = [];\r\n    node.ele_num = 0;\r\n\r\n    for (const ele of elementsToRedistribute) {\r\n        insertEle(node, ele);\r\n    }\r\n}\r\n\r\nexport function createChildNode(depth, region) {\r\n    return new QuadTreeNode(depth, region);\r\n}\r\n\r\nexport function queryEle(node, ele, results, eps) {\r\n    if (node.is_leaf) {\r\n        for (const pt of node.ele_list) {\r\n            if (haversine(pt.lat, pt.lng, ele.lat, ele.lng) <= eps) {\r\n                results.push(pt);\r\n            }\r\n        }\r\n    } else {\r\n        const midVertical = (node.region.up + node.region.bottom) / 2;\r\n        const midHorizontal = (node.region.left + node.region.right) / 2;\r\n        if (ele.lat > midVertical) {\r\n            if (ele.lng > midHorizontal) {\r\n                queryEle(node.RU, ele, results, eps);\r\n            } else {\r\n                queryEle(node.LU, ele, results, eps);\r\n            }\r\n        } else {\r\n            if (ele.lng > midHorizontal) {\r\n                queryEle(node.RB, ele, results, eps);\r\n            } else {\r\n                queryEle(node.LB, ele, results, eps);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function haversine(lat1, lng1, lat2, lng2) {\r\n    const dLat = (lat2 - lat1) * Math.PI / 180;\r\n    const dLng = (lng2 - lng1) * Math.PI / 180;\r\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    return EARTH_RADIUS * c * 1000; // 转换为米\r\n}\r\n"],"mappings":"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","ignoreList":[]}]}